2006-11-08	mucci
	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.8:
		Fixing Haihang's last change, SIGEMT for US-III, SIGPROF (
		software overflow for US-II and below)

	* src/perfctr-2.7.x/examples/self/ppc64.c [papi-3-2-0] 1.1.1.1.2.2:
	* src/perfctr-2.7.x/examples/signal/ppc64.c [papi-3-2-0] 1.1.1.1.2.2:
	* src/perfctr-2.7.x/usr.lib/event_set_ppc64.c [papi-3-2-0] 1.1.1.1.2.1:
	* src/perfctr-2.7.x/usr.lib/libperfctr.h [papi-3-2-0] 1.1.1.1.2.2:
	* src/perfctr-2.7.x/usr.lib/ppc64.c [papi-3-2-0] 1.1.1.1.2.5:
		Patch from Mikael for PPC970MP like MareNostrum at BSC, Thanks 
		Mikaelcd perfctr-2.7.x/

2006-11-08	terpstra
	* INSTALL.txt [papi-3-2-0] 1.15.6.2.2.3:
	* LICENSE.txt [papi-3-2-0] 1.4.2.1:
	* PAPI_FAQ.html [papi-3-2-0] 1.4.6.2:
	* README [papi-3-2-0] 1.5.6.1:
		Updates for the PAPI 3.5 release.

	* src/ctests/earprofile.c [papi-3-2-0] 1.19.12.2:
	* src/ctests/prof_utils.c [papi-3-2-0] 1.2.12.4:
	* src/ctests/prof_utils.h [papi-3-2-0] 1.4.2.2:
	* src/ctests/profile.c [papi-3-2-0] 1.51.2.2:
	* src/ctests/profile_twoevents.c [papi-3-2-0] 1.16.12.2:
	* src/ctests/sprofile.c [papi-3-2-0] 1.25.2.2:
		Redefined start and stop addresses as caddr_t to eliminate a bunch of casts
		and a bunch of warnings.
		It looks as if earprofile is broken on Itanium.
		This should be investigated.

	* src/perfctr-2.7.x/usr.lib/ppc64.c [papi-3-2-0] 1.1.1.1.2.6:
		Remove duplicate case:
		> > +      case PV_970MP:
		This got copied instead of moved.
		It won't compile without this fix.

	* src/papi_internal.c [papi-3-2-0] 1.102.2.15:
		Added a return value in add_native_events.
		Compiler was complaining about an uninitialized return value in the
		latest code rearrangements.

2006-11-07	mucci
	* src/perfctr-2.7.x/examples/perfex/ppc64.c [papi-3-2-0] 1.1.1.1.2.1:
		Fix for perfex on PPC64 systems

	* src/perfmon.c [papi-3-2-0] 1.1.2.40:
		Detect unavailable PMD/PMC's

	* src/papi_internal.c [papi-3-2-0] 1.102.2.14:
		If update_control_state fails, we need to back off from 
		allocation as well. This code has been broken for ages, but only 
		perfmon2 can fail in this call

	* src/perfctr-2.7.x/usr.lib/ppc64.c [papi-3-2-0] 1.1.1.1.2.4:
		Primitive 970MP support, waiting for more from Mikael

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.21:
		Undocumented addition for fast tracing for ParaVer, TAU and 
		Kojak

	* src/ctests/zero.c [papi-3-2-0] 1.31.12.4:
		Print tot_cyc only if present

	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.6:
		Update hardware_intr_sig to SIGEMT

2006-11-07	you
	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.7:
		set hardware_intr_sig = SIGPROF

2006-11-07	terpstra
	* src/win2k/ctests/PAPI_tests.dsw [papi-3-2-0] 1.6.14.1:
	.
	.
	.
	* src/win2k/winpmc/WinPMC.dsw [papi-3-2-0] 1.1.22.1:
		Remove old projects for Microsoft Visual Studio 6.

2006-11-06	mucci
	* src/Makefile.solaris-ultra [papi-3-2-0] 1.60.8.1.2.3:
	* src/Makefile.solaris-ultra-64bit [papi-3-2-0] 1.14.8.1.2.3:
		Last fixes

	* src/multiplex.c [papi-3-2-0] 1.62.2.5:
		Typecast fix

	* src/Rules.pfm2 [papi-3-2-0] 1.1.2.18:
		Update for rpath-link

	* src/Rules.pfm2 [papi-3-2-0] 1.1.2.19:
		Generate the libpapi.so.ver instead

	* src/ctests/multiattach.c [papi-3-2-0] 1.1.2.4:
	* src/ctests/papi_test.h [papi-3-2-0] 1.20.12.6:
	* src/ctests/zero_attach.c [papi-3-2-0] 1.1.2.4:
		Ptrace only in files that need it

	* src/Makefile.solaris-ultra [papi-3-2-0] 1.60.8.1.2.2:
	* src/Makefile.solaris-ultra-64bit [papi-3-2-0] 1.14.8.1.2.2:
	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.5:
		UltraSparc Update

2006-11-06	you
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.17:
		rm -O2 for Matrix-hl to avoid compilation error on solaris

2006-11-06	terpstra
	* HISTORY.txt [papi-3-2-0] 1.6.10.1:
		Deprecated This file has no meaningful content and just adds 
		clutter.

	* src/genpapifdef.c [papi-3-2-0] 1.32.2.13:
	* src/papi.h [papi-3-2-0] 1.142.4.26:
		Remove deprecated defines for old PAPI_dmem interface.

	* src/papi.h [papi-3-2-0] 1.142.4.27:
	* src/t3e_events.c [papi-3-2-0] 1.10.12.1:
		Remove support files for deprecated Alpha and T3E platforms.
		Bump papi.h version number to 3.5.0.0.

2006-11-04	mucci
	* src/configure [papi-3-2-0] 1.34.2.2.2.35:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.35:
		Fixes for setting CC and F77

2006-11-03	mucci
	* src/ppc970_events.h [papi-3-2-0] 1.1.6.1.2.4:
		Someone missed a # in the include directive for PPC970

	* src/Makefile.linux-perfctr-POWER4 [papi-3-2-0] 1.1.2.5:
	* src/Makefile.linux-perfctr-POWER4-64bit [papi-3-2-0] 1.1.2.5:
	* src/Makefile.linux-perfctr-POWER5 [papi-3-2-0] 1.1.2.4:
	* src/Makefile.linux-perfctr-POWER5-64bit [papi-3-2-0] 1.1.2.4:
	* src/Makefile.linux-perfctr-PPC970 [papi-3-2-0] 1.1.2.2:
	* src/Makefile.linux-perfctr-PPC970-64bit [papi-3-2-0] 1.1.2.2:
		Removed unused and misleading SHRFLAGS

2006-11-03	terpstra
	* doc/PAPI_Prog_Ref.doc [papi-3-2-0] 1.5.8.1:
		Updated for the upcoming PAPI 3.5 release.
		The formatting isn't perfect, but it's readable.

2006-11-02	mucci
	* src/linux-memory.c [papi-3-2-0] 1.28.4.7:
		Fix for Core 2 CPUID, why this didn't work, I'll never know. The 
		real answer for linux is to eventually use /dev/cpu/#/cpuid as 
		in the code from http://www.etallen.com/cpuid.html

	* src/ctests/byte_profile.c [papi-3-2-0] 1.4.6.1.2.2:
	* src/ctests/earprofile.c [papi-3-2-0] 1.19.12.1:
	* src/ctests/overflow_single_event.c [papi-3-2-0] 1.38.6.3:
	* src/ctests/prof_utils.c [papi-3-2-0] 1.2.12.3:
	* src/ctests/prof_utils.h [papi-3-2-0] 1.4.2.1:
	* src/ctests/profile.c [papi-3-2-0] 1.51.2.1:
	* src/ctests/profile_twoevents.c [papi-3-2-0] 1.16.12.1:
	* src/ctests/sprofile.c [papi-3-2-0] 1.25.2.1:
		Pending profile cleanups...I was waiting for Dan's magic fix to 
		profiling for these cosmetic changes

	* src/linux-memory.c [papi-3-2-0] 1.28.4.8:
		What works on one machine, doesn't work somewhere else! cpuid is 
		pesky

2006-11-02	terpstra
	* doc/cat_progref.bat [papi-3-2-0] 1.5.12.1:
	* doc/papiprog.bat [papi-3-2-0] 1.6.12.1:
	* doc/procedure.txt [papi-3-2-0] 1.7.10.1:
	* doc/progref_template.doc [papi-3-2-0] 1.5.8.1:
		Updated support files for PAPI 3.5 release.

	* man/man3/PAPI_enum_event.3 [papi-3-2-0] 1.8.12.1:
		Updated man page for Itanium DAR and IAR info

	* doc/PAPI_USER_GUIDE.doc [papi-3-2-0] 1.4.14.1:
		Updated User Guide for the upcoming PAPI 3.5 release.

	* doc/README [papi-3-2-0] 1.2.20.1:
		Updated for the upcoming PAPI 3.5 release.

	* man/html/papi_enum_event.html [papi-3-2-0] 1.3.12.1:
	* man/html/papi_help.html [papi-3-2-0] 1.10.2.1:
	* man/html/papi_set_opt.html [papi-3-2-0] 1.9.12.1:
	* man/html/papif_get_clockrate.html [papi-3-2-0] 1.6.12.1:
	* man/html/papif_get_domain.html [papi-3-2-0] 1.6.12.1:
	* man/html/papif_get_exe_info.html [papi-3-2-0] 1.4.12.1:
	* man/html/papif_get_granularity.html [papi-3-2-0] 1.6.12.1:
	* man/html/papif_get_preload.html [papi-3-2-0] 1.6.12.1:
	* man/html/papif_set_event_domain.html [papi-3-2-0] 1.6.12.1:
		Updated html man pages that are linked to other pages.

2006-11-01	mucci
	* src/configure [papi-3-2-0] 1.34.2.2.2.34:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.34:
		Fix from Robbie Jiang for perfmon umasks, updates for 2.6.18 
		family names of IA64 processors, fix for unavailable PMC's 
		stolen for NMI. (Thanks to Andi Kleen for insisting on stealing 
		one of our counters. ;-) Thanks to Stefane E and Will C as well 
		as Christophe from Bull for testing this

2006-10-31	mucci
	* src/utils/native_avail.c [papi-3-2-0] 1.20.6.5:
		Skip first native event if it doesn't exist

	* src/configure [papi-3-2-0] 1.34.2.2.2.33:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.33:
		Added MX and ACPI configure support

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.31:
		Fix for montecito ita running at 1/4 core speed

2006-10-30	mucci
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.18:
		Missed copy from Rules.pfm2

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.30:
		Montecito fixes for Linux-ia64 L3 events, they need umask 
		specifiers

2006-10-29	mucci
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.22:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.17:
	* src/linux-memory.c [papi-3-2-0] 1.28.4.6:
		2 Fixes.
		
		1) Fix for coredump seen by folks on the Core 2 DUO (and my laptop). This was
		causes by a missing register clause in CPUID. At -O3 %edi was being overwritten and
		gcc was not told about this. This is fixed.
		
		2) Last remaining text relocations fixed in libpapi.so for LINUX! Hooray!
		readelf -d now shows no relocations on all platforms. Needed was -fPIC and -DPIC
		in addition to -shared to build the shared library. I love clean library code.
		
		Greetings from Barcelona.

2006-10-27	terpstra
	* man/html/papi.html [papi-3-2-0] 1.14.2.1:
	* man/html/papi_encode_events.html [papi-3-2-0] 1.1.2.1:
	* man/html/papi_get_dmem_info.html [papi-3-2-0] 1.3.12.2:
	* man/html/papi_get_opt.html [papi-3-2-0] 1.9.12.1:
	* man/html/papi_list_events.html [papi-3-2-0] 1.9.12.1:
	* man/html/papi_set_domain.html [papi-3-2-0] 1.9.12.1:
	* man/html/papi_set_event_info.html [papi-3-2-0] 1.1.2.1:
	* man/html/papi_thread_init.html [papi-3-2-0] 1.9.12.1:
	* man/man3/PAPI.3 [papi-3-2-0] 1.22.2.1:
	* man/man3/PAPI_get_opt.3 [papi-3-2-0] 1.18.4.1:
	* man/papiman.bat [papi-3-2-0] 1.10.2.1:
		Updated man pages and supporting files for the upcoming PAPI 3.5 
		release.

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.20:
		Fixed a syntax bug.
		That's what I get for checking in 'simple changes' without smoke testing...

	* src/papi.h [papi-3-2-0] 1.142.4.25:
		Tweaks to list of options for PAPI_{get,set}_opt.

2006-10-26	terpstra
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.12:
		Removed definition of PAPI_SUBSTRATE_SUPPORT,
		which was just an alias to PAPI_SUBSTRATEINFO.

	* src/ctests/overflow_force_software.c [papi-3-2-0] 1.13.2.5:
		Removed reference to PAPI_SUBSTRATE_SUPPORT,
		which was just an alias to PAPI_SUBSTRATEINFO.

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.19:
	* src/papi.h [papi-3-2-0] 1.142.4.24:
		Removed definition of PAPI_SUBSTRATE_SUPPORT,
		which was just an alias to PAPI_SUBSTRATEINFO.
		Also added an entry point for PAPI_detach for symmetry with PAPI_attach.

2006-10-25	mucci
	* src/ftests/Makefile [papi-3-2-0] 1.51.6.5:
		Added dummy targets for ear attach and range to prevent install 
		from failing

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.18:
		Bug fix to PAPI_list_threads. Returned improper value. Thank god 
		I read the man page.

	* man/man3/PAPI_thread_init.3 [papi-3-2-0] 1.14.12.1:
		./PAPI_list_events.3

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.10:
	* src/ftests/Makefile [papi-3-2-0] 1.51.6.6:
		More parallel build fixes, working completely

	* man/Makefile [papi-3-2-0] 1.8.4.1:
		Fixed install target for man pages

	* man/man3/PAPI_list_events.3 [papi-3-2-0] 1.12.12.1:
		Please check these files for new template. Included are removal of
		#include <papi.h> in favor of include "papi.h" which is more correct.
		
		Also, merged ERRORS and RETURN VALUES into one.
		
		Seems much cleaner. Also formatting of the C and Fortran interface definitions.

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.9:
		Minor dependency fix for ftests, ctests, utils, allows parallel 
		make. needed for gentoo distribution. This really builds fast on 
		Linux. try make -j3.

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.8:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.16:
		Fixes from Christophe at Bull. DESTDIR fixes for libpfm. Keep in 
		mind that DESTDIR should only be used when installing in a 
		temporary location AKA Gentoo Portage

2006-10-25	terpstra
	* man/man3/PAPI_encode_events.3 [papi-3-2-0] 1.1.2.1:
	* man/man3/PAPI_set_event_info.3 [papi-3-2-0] 1.1.2.1:
		Deprecated until a modifiable event structure is implemented.

2006-10-24	terpstra
	* src/Matlab/PAPI_Matlab.vcproj [papi-3-2-0] 1.2.2.1:
	* src/Matlab/PAPI_flops.vcproj [papi-3-2-0] 1.2.2.1:
		Project updates for Windows.

	* man/html/papi_get_dmem_info.html [papi-3-2-0] 1.3.12.1:
	* man/man3/PAPI_get_dmem_info.3 [papi-3-2-0] 1.6.12.1:
		Updates for PAPI_dmem_info documentation.

2006-10-20	terpstra
	* src/ctests/prof_utils.c [papi-3-2-0] 1.2.12.2:
		Fixed the 64-bit profile addressing problem. Turns out it was *always* wrong;
		an artifact of a math error in the displayed address calculation.
		We were dividing the offset by 2 instead of multiplying by 2.

2006-10-19	mucci
	* src/Makefile.in [papi-3-2-0] 1.5.4.7:
	* src/Makefile.linux-perfctr-athlon [papi-3-2-0] 1.13.6.1:
	* src/Makefile.linux-perfctr-em64t [papi-3-2-0] 1.5.6.1:
	* src/Makefile.linux-perfctr-em64t-32bit [papi-3-2-0] 1.1.6.1:
	* src/Makefile.linux-perfctr-opteron [papi-3-2-0] 1.18.6.1:
	* src/Makefile.linux-perfctr-opteron-32bit [papi-3-2-0] 1.1.6.1:
	* src/Makefile.linux-perfctr-p3 [papi-3-2-0] 1.25.2.3:
	* src/Makefile.linux-perfctr-p4 [papi-3-2-0] 1.40.6.1:
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.21:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.15:
	* src/configure [papi-3-2-0] 1.34.2.2.2.32:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.32:
		Fixes for 32-bit build on 64 bit x86 platforms. If we can remove 
		the hardware definitions in the Makefiles, we can then merge all 
		makefiles into 3, pfm, pfm2 and perfctr. Some tests still depend 
		on CPP definitions and those tests will likely break for mixed 
		mode builds.

2006-10-18	mucci
	* src/threads.h [papi-3-2-0] 1.3.6.3:
		Conditionalize update of _papi_hwi_thread_head to reduce 
		cacheline traffic and implicit barriers

	* src/threads.h [papi-3-2-0] 1.3.6.4:
		Fix warnings

	* src/threads.c [papi-3-2-0] 1.25.2.4:
	* src/threads.h [papi-3-2-0] 1.3.6.2:
		Added volatile type to _papi_hwi_thread_head, which is needed to 
		avoid over optimization on SMP and NUMA platforms

2006-10-18	terpstra
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.17:
		Back out previous cast. It caused a warning everywhere else 
		besides X1...

2006-10-17	mucci
	* src/pfmwrap.h [papi-3-2-0] 1.22.6.8:
		Added debug messages to trace down PFM_LOAD_CONTEXT failure on 
		Altix for Dan

2006-10-17	terpstra
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.16:
		Add a cast to a return value to eliminate a warning message on 
		X1.

	* src/x1.c [papi-3-2-0] 1.25.2.5:
		Set sub_info.num_mpx_cntrs == sub_info.num_cntrs.
		This fixes the multiplexing bug for X1.

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.29:
		Comment out a debug message that was flooding the io stream.

	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.14:
		ATTACH is apparently unsupported on itanium.
		At least these tests SKIP on hp01, hp03 and altix.

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.20:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.13:
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.16:
		Add support for an ATTACH target for tests.
		This allows the attach tests to be removed from non-compliant platforms like X1.
		Needs testing, particularly on Itanium.

2006-10-16	you
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.16:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.13:
		add CORE2 support

2006-10-13	mucci
	* src/config.h.in [papi-3-2-0] 1.3.2.7:
	* src/config.h.in [papi-3-2-0] 1.3.2.8:
	* src/configure [papi-3-2-0] 1.34.2.2.2.30:
	* src/configure [papi-3-2-0] 1.34.2.2.2.31:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.30:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.31:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.27:
	* src/pfmwrap.h [papi-3-2-0] 1.22.6.7:
		Added one more test for libpfm features

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.28:
		Last fix for altix

	* src/config.h.in [papi-3-2-0] 1.3.2.6:
	* src/configure [papi-3-2-0] 1.34.2.2.2.29:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.29:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.26:
		Added HAVE_PFM_MSG_PFM_GEN_MSG_MSG_TYPE test

	* src/pfmwrap.h [papi-3-2-0] 1.22.6.6:
		Fixes for bad ordering of pfm_create_context, how this ever 
		worked before is beyond me

2006-10-13	terpstra
	* src/ctests/encode.c [papi-3-2-0] 1.4.4.3:
	* src/ctests/encode2.c [papi-3-2-0] 1.2.2.3:
		Tweaks for deprecated PAPI_encode.

	* src/ppc970_events.h [papi-3-2-0] 1.1.6.1.2.3:
		Added "papiStdEventDefs.h" per Eric's fix of Haihang's catch.

2006-10-12	terpstra
	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.10:
		Another conditional compile for modifiable events.

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.15:
	* src/papi_internal.c [papi-3-2-0] 1.102.2.13:
	* src/papi_preset.h [papi-3-2-0] 1.12.2.5:
		Conditionally compile PAPI_set_event_info, PAPI_encode_events, and _papi_hwi_set_event_info
		and deprecate the code until we can properly implement per thread instantiation of const data structures.

2006-10-10	mucci
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.11:
		Undo previous change

	* src/genpapifdef.c [papi-3-2-0] 1.32.2.10:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.13:
		Fix for circular dependency, eventually genpapiifdef should be 
		linked with libpapi and run as part of the install process, 
		except for on cross systems.

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.22:
		More MMTIMER fixes straight from SGIs manual

2006-10-10	you
	* src/power4_events.h [papi-3-2-0] 1.6.2.1.2.2:
	* src/power5_events.h [papi-3-2-0] 1.1.6.1.2.3:
		add inlcude "papiStdEventDefs.h" to make it compile

2006-10-10	terpstra
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.24:
		Inverted computation of mmdev_ratio to eliminate spurious 
		zeros...

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.23:
		Minor changes to get Phil's debug mods to compile.

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.25:
		Removed debug statement in get_cycles.
		It was flooding the io stream.

2006-10-09	mucci
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.21:
		more debugging for MMTIMER

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.20:
		Set close on exec flag for MMTIMER and for PFM Fd's, also lots 
		of MMTIMER debugging code for Dan

2006-10-09	terpstra
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.9:
		Modify to minimize dependence on external structures.

	* src/papi_data.c [papi-3-2-0] 1.23.2.5:
		Modify for partial inclusion in genpapifdef. Recognize that data structures
		but not code needs to be available for fortran header generation.
		This was the reason for the recently deprecated papi_data.h file.

2006-10-08	mucci
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.8:
	* src/papi_data.c [papi-3-2-0] 1.23.2.3:
	* src/papi_internal.c [papi-3-2-0] 1.102.2.12:
	* src/papi_preset.h [papi-3-2-0] 1.12.2.4:
		Static initializer problems again have surfaced, this is because 
		of the initializations in papi_data.c of the hwi_presets 
		structure, all NON-const structures must ALWAYS be initialized 
		inside of papi_internal.c

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.7:
	* src/papi_data.c [papi-3-2-0] 1.23.2.4:
		Removed papi_data.h, not needed

	* src/ftests/Makefile [papi-3-2-0] 1.51.6.4:
		Tests go to datadir/ftests

2006-10-05	mucci
	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.8:
		Oh how I hate the hwi_setup_all_preset code. There is not a 
		single debug statement in the entire file. Added a few to help 
		debug bogus preset search maps. Also, WHY would we ever want to 
		define a preset that doesn't have any NATIVE terms? If this is 
		for encode, it should not be done here. This function is 
		initialization time loading of actual events that are specified 
		by the substrate, not user defined preset maps, which should be 
		done elsewhere.

	* src/papi.h [papi-3-2-0] 1.142.4.23:
		All definitions should be of the form PAPI_major_minor_flag, 
		like PAPI_ENUM_PRESET_AVAIL, this just adds one and makes a note

	* src/ctests/calibrate.c [papi-3-2-0] 1.29.14.3:
		Converted to low level API and to add a -e event argument

	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.9:
		Comments within comments are a nono.

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.14:
		PAPI_enum_event rewritten for clarity and to actually check the 
		value of the modifier

2006-10-05	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.15:
		Tweaks to support redefinition of FP_OPS event on opteron.
		Tested using both environment variables and compile-time #defines.
		Mimics P4 implementation; supports:
		> setenv PAPI_OPTERON_FP {RETIRED, SSE_SP, SSE_DP, SPECULATIVE}
		or
		-DPAPI_OPTERON_FP_{RETIRED, SSE_SP, SSE_DP, SPECULATIVE}
		to produce FP_OPS event as indicated.
		Default is SPECULATIVE;  FP_INS is defined as RETIRED.

2006-10-04	terpstra
	* src/ctests/test_utils.c [papi-3-2-0] 1.53.4.2.2.5:
		Mods to support derived FP_OPS events in add_two_events
		as long as there's enough counter space to also add the cycle counter.

	* src/ctests/calibrate.c [papi-3-2-0] 1.29.14.2:
		Rewrite to support single or double precision.
		Changed the way input options are handled to be more unix-like
		Added support for -h
		Functionalized work blocks to make them easier to parse.
		The codes still ugly, but it's better.

	* src/p3_events.c [papi-3-2-0] 1.48.2.14:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.12:
		First cut changes to support redefinition of FP_OPS event on opteron.
		Untested.

	* src/papi_internal.c [papi-3-2-0] 1.102.2.11:
		Added a debug statement to show native events by name as they 
		are added.

	* src/win2k/substrate/WinPAPI.def [papi-3-2-0] 1.10.14.2:
		Updated list of entry points for PAPI library

2006-10-03	mucci
	* src/linux-ia64-memory.c [papi-3-2-0] 1.18.12.2:
		Rename of PAPI_MH_MAX_LEVELS

	* src/genpapifdef.c [papi-3-2-0] 1.32.2.7:
		Added PAPI_MH_MAX_LEVELS

	* src/linux-memory.c [papi-3-2-0] 1.28.4.5:
		Removed clobbering of EBX register by CPUID. This is a NONO in shared libraries
		because EBX is used for things. This showed up because I used code from this
		inside my perfmon.c file and got errors when making the shared library,
		basically EBX register pressure. The CPUID function has been replaced to
		save and restore EBX after the call.

	* src/papi.h [papi-3-2-0] 1.142.4.22:
		Changed VENDOR_UNKNOWN to 0.
		Added definition for PAPI_MH_MAX_LEVELS to remove hardcoded [2]

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.15:
	* src/ctests/papi_test.h [papi-3-2-0] 1.20.12.5:
	* src/ctests/test_utils.c [papi-3-2-0] 1.53.4.2.2.4:
		Ok, I know this is frightening, but a test case was never written for
		PAPI_hw_info...
		
		Also added is a 'validate_string' utility which makes sure a string returned
		from PAPI is not the null pointer or length 0.

2006-10-02	you
	* INSTALL.txt [papi-3-2-0] 1.15.6.2.2.2:
		add BG/L installation notes

2006-10-02	terpstra
	* src/ppc970_events.h [papi-3-2-0] 1.1.6.1.2.2:
		Folded in ERic K.'s changes for clean compilation on PPC970.

2006-09-29	terpstra
	* src/power4_events.h [papi-3-2-0] 1.6.2.1.2.1:
	* src/power4_events_map.c [papi-3-2-0] 1.1.6.1.2.2:
	* src/power5_events.h [papi-3-2-0] 1.1.6.1.2.2:
	* src/power5_events_map.c [papi-3-2-0] 1.1.6.1.2.1:
	* src/ppc64_events.c [papi-3-2-0] 1.1.2.3:
	* src/ppc64_events.h [papi-3-2-0] 1.1.4.1.2.2:
	* src/ppc970_events.h [papi-3-2-0] 1.1.6.1.2.1:
	* src/ppc970_events_map.c [papi-3-2-0] 1.1.6.1.2.1:
		Commit from Eric K @ IBM to resynchronize the event tables for 
		Power/Linux platforms.

2006-09-28	mucci
	* src/papi.h [papi-3-2-0] 1.142.4.21:
		Changed confusing comment

2006-09-28	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.13:
		Set opteron FP_INS back to old speculative definition.
		At least it works for the test cases.
		We need a better answer here.

	* src/unicosmp-memory.c [papi-3-2-0] 1.2.12.1:
	* src/x1.c [papi-3-2-0] 1.25.2.4:
		First cut implementation of current substrate sub_info model.
		For some reason PAPI_INHERIT was still defined and active.
		Also, reimplementation of dmem_info, but with only 2 fields supported.
		Identical to current irix implementation.

	* src/irix-memory.c [papi-3-2-0] 1.18.12.3:
		Added a note cross-linking dmem_info to identical code in X1.

2006-09-27	mucci
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.12:
		Fix to use the right PFM version, thanks to robbie jiang for 
		reporting this

2006-09-26	mucci
	* src/ctests/overflow_single_event.c [papi-3-2-0] 1.38.6.2:
		Minor threshold fixup

	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.9:
		Fixup to use native_name_map.index in ntv_code_to_bits

2006-09-25	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.12:
		Until we figure out what's going on, let's restore Opteron FLOPS 
		to the simple event that passes our tests...

2006-09-22	mucci
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.18:
		Minor catamount fix

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.19:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.11:
		Minor build fix for pfm and perfctr

2006-09-22	you
	* src/ctests/papi_test.h [papi-3-2-0] 1.20.12.4:
		not include dlfcn.h for BGL

2006-09-21	mucci
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.10:
		Make this substrate honor DEBUGFLAGS from configure

	* src/configure [papi-3-2-0] 1.34.2.2.2.28:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.28:
		More informative error messages when things go wrong

	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.7:
		When generating all presets, PAPI_NULL is the terminator in the 
		native array, missed this on cleanup

	* src/config.h.in [papi-3-2-0] 1.3.2.5:
	* src/configure [papi-3-2-0] 1.34.2.2.2.27:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.27:
	* src/pfmwrap.h [papi-3-2-0] 1.22.6.5:
		Added a new configure option to check for a change in 
		pfm_dispatch_events in the latest pfm 3.x that broke API 
		compatability

2006-09-21	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.11:
		Add 6 HT events to Opteron enum list to match table size.
		This is now needed to pass the more restrictive table size checking.
		Change ntv_name and ntv_descr to return pointers to null strings
		rather than NULL pointers on error so that strcpy won't segfault.
		Also re-enable error checking that was commented out while testing table size logic.

2006-09-20	mucci
	* src/configure [papi-3-2-0] 1.34.2.2.2.26:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.26:
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.15:
	* src/papi.h [papi-3-2-0] 1.142.4.20:
		Update for Freescale vendor information and PPC32

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.17:
	* src/configure [papi-3-2-0] 1.34.2.2.2.24:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.24:
		This was a good catch by Dan. 64 bit and 32 bit are extremely sensitive to
		what configure decides what the cpu is. I have updated this so that its more
		related to what ARCH says. If arch says x86_64, then default is 64 bit unless
		bitmode overrides. It arch says x86, then any bitmode other than 32 is no good.
		This should handle funny things like the core, athlon64 and any funny 64
		bit p4 variants that don't show up as an em64t.
		
		Change in Rules.perfctr was to remove a $^

	* src/ctests/do_loops.c [papi-3-2-0] 1.27.10.1.2.1:
		Updated for new flags, added RMW to do_misses instead of write

	* src/Makefile.in [papi-3-2-0] 1.5.4.6:
	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.6:
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.16:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.9:
	* src/config.h.in [papi-3-2-0] 1.3.2.4:
	* src/configure [papi-3-2-0] 1.34.2.2.2.23:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.23:
	* src/extras.c [papi-3-2-0] 1.129.2.8:
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.13:
	* src/papi.h [papi-3-2-0] 1.142.4.19:
	* src/papi_data.c [papi-3-2-0] 1.23.2.2:
	* src/papi_internal.c [papi-3-2-0] 1.102.2.10:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.12:
	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.6:
	* src/papi_preset.h [papi-3-2-0] 1.12.2.3:
	* src/papi_protos.h [papi-3-2-0] 1.53.2.8:
	* src/threads.c [papi-3-2-0] 1.25.2.3:
	* src/threads.h [papi-3-2-0] 1.3.6.1:
		Major makefile changes to support GNU standard autoconf and similar options
		include PREFIX, EXECPREFIX, LIBDIR, BINDIR, INCDIR, DATADIR and DESTDIR.
		Also, loads of new and tested configure options for specifing directories
		of dependent libraries as well as testing the presense of those. Linux
		rules rewritten to reference these as well as main Makefile rules.
		
		The only thing that is not standard at the moment is installing the utils
		into share. This is bad, but those codes aren't good enough for /bin anyways.
		So we'll leave them there for now.
		
		Other changes:
		
		papi.c: Addition of PAPI_list_threads() call that uses existing functionality
		        Support for PAPI_PROFIL_INST_EAR and PAPI_PROFIL_DATA_EAR sampling modes
		papi.h: Added PAPI_ENUM_GROUPS/BITS/COMBOS as with Pentium 4/PWR4 and aliased them
		        so we can remove the machine specific defs in the future.
		extras.c: Proper null termination of strings
		papi_data.c: Error checking for _papi_hwi_derived_type
		papi_internal.c: Major strcpy fixes. A review of source and dest and their sizes turned up a bunch
		                 of mismatches. Now sized to the size of the destination if the decl is static.
		papi_internal.h: removed conditional include of config.h for catamount and BGL
		papi_preset.[ch]: Minor code cleanup for readability and removal of a def in the header
		papi_protos.h: Changed type of derived_type function to handle errors
		threads.c: Minor changes against the functionality that allows one to gather all thr spec info
		threads.h: removed all conditionals at the beginning of the file for the __thread keyword. This
		           can be specified at configure time now and it is tested there. Nice.
		perfmon.c
		perfmon.h Major changes in both of these:
		
		Support for DATA SPACE profiling based on EARs as well as precise IP sampling based on EARS.
		Also support for unit masks and selection of them. As well as enumeration of them. Also, montecito
		support for everything and a montecito event map.
		
		I don't guarantee that I haven't missed any corner cases, but the changes to core PAPI are small.
		Bugs to me

	* src/p3_events.c [papi-3-2-0] 1.48.2.9:
		Make a new synthetic native event that combines X87 and SSE 
		SCALAR for Opteron systems for PAPI_FP_INS and PAPI_FP_OPS

	* src/utils/Makefile [papi-3-2-0] 1.4.2.2:
	* src/utils/avail.c [papi-3-2-0] 1.32.6.5:
	* src/utils/native_avail.c [papi-3-2-0] 1.20.6.4:
		Major cleanups to these two, the output looks a lot nicer, added 
		option parsing to native_avail

	* src/linux.c [papi-3-2-0] 1.45.2.3.2.13:
		Don't forget to update the vendor map when you add a CPU

	* src/ftests/Makefile [papi-3-2-0] 1.51.6.3:
		Missed a -I

	* src/configure [papi-3-2-0] 1.34.2.2.2.25:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.25:
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.14:
		Interesting AC_CONST and AC_INLINE macros no workie on PPC64. Removed.
		Added IBM as vendor string because its not found on POWER4/Linux in cpuinfo.

	* src/Makefile.linux-perfctr-POWER4 [papi-3-2-0] 1.1.2.4:
	* src/Makefile.linux-perfctr-POWER4-64bit [papi-3-2-0] 1.1.2.4:
	* src/Makefile.linux-perfctr-POWER5 [papi-3-2-0] 1.1.2.3:
	* src/Makefile.linux-perfctr-POWER5-64bit [papi-3-2-0] 1.1.2.3:
		Remove -g -DDEBUG from production build

2006-09-20	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.10:
		Fixed reference to Phil's newly defined composite native event.
		Jury's still out whether counting retired FP ops prodiuces any better results.

2006-09-18	terpstra
	* src/p4_events.c [papi-3-2-0] 1.49.6.3:
		Added traps to native event code to test for reasonableness.
		These traps use computed values instead of num_native_events to
		accomodate the size of the static native table not including the custom table
		which is handled elsewhere.

	* src/p3_events.c [papi-3-2-0] 1.48.2.8:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.11:
		Entries were added to each enum list to allow compile-time computation of num_native_events.
		Extern variables were added to make these values accessible to the init routine in perfctr-p3.c
		Traps were added for reasonableness checks on event codes.
		This implementation uncovered a sequence error in the Core 2 Duo table, so it has already
		demonstrated it's usefulness.

	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.11:
		Reworked the NO_VARARG_MACRO case to define the various DEBUG options in terms of calls to PAPIDEBUG.
		This cleans up the code for this case, which is used in Windows.

2006-09-13	terpstra
	* src/ctests/all_events.c [papi-3-2-0] 1.11.12.3:
		Reworked to provide more information on failure.

2006-09-11	mucci
	* src/perfctr-p3.h [papi-3-2-0] 1.37.6.1.2.6:
	* src/perfctr-p4.h [papi-3-2-0] 1.34.12.5:
	* src/perfctr-ppc64.h [papi-3-2-0] 1.1.6.2.2.6:
		More informative error message for when perfctr open fails

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.14:
		This test passes a good and bad value to event_code_to_name, be 
		on the lookout for seg faults

2006-09-11	terpstra
	* src/papi.h [papi-3-2-0] 1.142.4.18:
		Version # bump to 3.4.9.1 in preparation for a beta release.

2006-09-09	mucci
	* src/perfctr-p4.h [papi-3-2-0] 1.34.12.4:
		Guard against redef of USE_GNU

2006-09-08	mucci
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.7:
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.8:
		Small montecito fix

2006-09-08	you
	* src/p3_events.c [papi-3-2-0] 1.48.2.7:
		new tweaks for core.

2006-09-07	mucci
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.12:
		Fix for PPC32 clocks (scale by tb factor) and PPC64 (use upper bits of TB
		register) Dan to test...

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.13:
		never specify /usr/include with -I even for broken AIX ORNL 
		installations, this breaks everyone elses builds

	* src/utils/Makefile [papi-3-2-0] 1.4.2.1:
		never specify /usr/include in a build with -I

2006-09-07	terpstra
	* src/utils/native_avail.c [papi-3-2-0] 1.20.6.3:
		Format tweaks.

	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.8:
		Fix _papi_hwd_ntv_enum_events by checking against MAX_NATNAME_MAP_INDEX.
		Since this is defined for all platforms that use this substrate, it should prevent walking off the end of the array.
		Tested for power4 and passes on papi_native_avail, strtest.f and all_native_events.c

	* src/ftests/native.F [papi-3-2-0] 1.44.10.1.2.4:
		Now PASSes on Intel Core.

2006-09-06	terpstra
	* src/ftests/strtest.F [papi-3-2-0] 1.15.12.4:
		Address line length problems on Catamount, where the fixed-
		length-132 switch doesn't work.

2006-09-05	mucci
	* src/papi_fwrappers.c [papi-3-2-0] 1.70.6.2:
		All linux platforms have length at the end of fortran string 
		args

	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.8:
		Added install rules for 3.x and 2.x

	* src/ppc64_events.c [papi-3-2-0] 1.1.2.2:
		Added num_native_events support

2006-09-05	terpstra
	* src/Makefile.linux-perfctr-POWER4 [papi-3-2-0] 1.1.2.3:
	* src/Makefile.linux-perfctr-POWER4-64bit [papi-3-2-0] 1.1.2.3:
		Added CPU_MODEL to FFLAGS so tests like native.F can properly 
		identify themselves.

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.12:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.10:
	* src/papi_memory.c [papi-3-2-0] 1.3.6.2.2.4:
		Added DEBUG_LEAK and fully supported DEBUG_MEMORY to suppress those
		pesky MEMORY LEAK messages when DEBUG is turned on.
		Now DEBUG_MEMORY displays normal memory allocation messages;
		DEBUG_LEAK displays memory leak and pointer overflow messages.
		setenv PAPI_DEBUG LEAK
		or
		setenv PAPI_DEBUG MEMORY

	* src/ftests/native.F [papi-3-2-0] 1.44.10.1.2.3:
		Added PPC970 case to decode logic. This test now passes on 
		PPC64.

2006-09-04	mucci
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.12:
	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.8:
		Removed circular data range dependency, added MIPS-linux test

	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.7:
		Renamed data_range to avoid circular dependency

2006-08-31	mucci
	* src/p4_events.c [papi-3-2-0] 1.49.6.2:
		num_native_event support, thanks Dan

	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.5:
		One line fix that increments num_presets instead of assigns 
		num_presets in hwi_setup_all_presets

2006-08-31	terpstra
	* src/ctests/byte_profile.c [papi-3-2-0] 1.4.6.1.2.1:
	* src/ctests/encode.c [papi-3-2-0] 1.4.4.2:
	* src/ctests/encode2.c [papi-3-2-0] 1.2.2.2:
		Rework byte_profile events to count on P4;
		Provide more informative diagnostic messages for encode and encode2.

	* src/ftests/strtest.F [papi-3-2-0] 1.15.12.3:
		Oops.
		A stray #endif got left in the file.
		It won't compile!
		And after I yelled at Phil about this, too.
		Boy, egg on my face!

	* src/ftests/strtest.F [papi-3-2-0] 1.15.12.2:
		Rewrite to use PAPIf_get_event_info instead of the deprecated PAPIf_describe_event.
		Also cleaned up some unused variable warnings and changed the syntax of some calls
		to match the usage of _get_event_info. There's some redundancy here, and some
		unexercised functionality, but it should at least work predictably.

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.15:
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.11:
		p4_lst_ins now *only* runs on p4.

2006-08-30	mucci
	* src/extras.c [papi-3-2-0] 1.129.2.7:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.19:
	* src/papi_protos.h [papi-3-2-0] 1.53.2.7:
		Renamed dispatch_profile to _papi_hwi_dispatch_profile since its 
		a global symbol

	* src/pfmwrap.h [papi-3-2-0] 1.22.6.4:
		Num native events workaround for compiler bug and faulty logic, 
		double whammy

	* src/ftests/Makefile [papi-3-2-0] 1.51.6.2:
	* src/ftests/strtest.F [papi-3-2-0] 1.15.12.1:
		Enabled this test...its important

	* src/libpfm-2.x/config.mk [papi-3-2-0] 1.1.1.1.2.1:
		Lowered to -O -g to remove compiler bug (and possible library 
		corruption)

	* src/libpfm-2.x/libpfm/pfmlib_common.c [papi-3-2-0] 1.1.1.1.2.1:
		Off by one error that misses the last event in get_next_event

2006-08-29	terpstra
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.10:
		Tweaks to make sure new test categories get cleaned up.

	* src/Makefile.linux-acpi [papi-3-2-0] 1.2.4.1:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.6:
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.9:
		Reworked serial target to split out platform specific tests, 
		like ear and data_range for Itanium.

	* src/Makefile.linux-acpi [papi-3-2-0] 1.2.4.2:
		Changed acpi tag to avoid namespace collisions.

2006-08-28	mucci
	* src/utils/avail.c [papi-3-2-0] 1.32.6.4:
	* src/utils/event_chooser.c [papi-3-2-0] 1.2.6.1:
	* src/utils/native_avail.c [papi-3-2-0] 1.20.6.2:
		One line change:
		
		diff -r1.20.6.1 native_avail.c
		49c49
		<       printf("Max Multiplex Counters   : %d\n", PAPI_MPX_DEF_DEG);
		---
		>       printf("Max Multiplex Counters   : %d\n", PAPI_get_opt(PAPI_MAX_MPX_CTRS, NULL));

	* src/ctests/multiplex2.c [papi-3-2-0] 1.24.10.2:
		The event browsing of this test was broken on machines with only 
		a few presets

2006-08-28	terpstra
	* src/configure [papi-3-2-0] 1.34.2.2.2.22:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.22:
		Add a case to map Pentium D (family 15, model 4) to em64t make file.
		Bump version number to 3.5.0 in prep for release.

	* src/ftests/ftests_util.F [papi-3-2-0] 1.38.6.2:
		Tweak to eliminate a casting warning on some platforms.

	* src/papi_internal.c [papi-3-2-0] 1.102.2.9:
	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.4:
		Fix for the calls to papi_valid_free when PAPI_NO_MEMORY_MANAGEMENT is defined.
		This implementation has a small possibility of stranding pointers and creating memory leaks.

	* src/ctests/matrix-hl.c [papi-3-2-0] 1.10.14.1:
		Add PPC64 to conditional inclusion of dummy(r) call.
		This appears to fix an over-reporting of flops on Linux/PPC64.

2006-08-25	mucci
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.11:
	* src/papi.h [papi-3-2-0] 1.142.4.17:
		Fixed up profiling, needed to refer to kernel_profil substrate 
		bit, not kernel_intr

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.18:
		Base support for Montecito working thanks to Michael Kluges help,
		 only eventmap changes

	* src/Makefile.linux-perfctr-POWER4 [papi-3-2-0] 1.1.2.2:
	* src/Makefile.linux-perfctr-POWER4-64bit [papi-3-2-0] 1.1.2.2:
	* src/Makefile.linux-perfctr-POWER5 [papi-3-2-0] 1.1.2.2:
	* src/Makefile.linux-perfctr-POWER5-64bit [papi-3-2-0] 1.1.2.2:
	* src/Makefile.linux-perfctr-PPC970 [papi-3-2-0] 1.1.2.1:
	* src/Makefile.linux-perfctr-PPC970-64bit [papi-3-2-0] 1.1.2.1:
		Removed NEED_FFSLL, tested

2006-08-25	terpstra
	* src/perfctr-p3.h [papi-3-2-0] 1.37.6.1.2.5:
		Conditionally add _GNU_SOURCE for Catamount

2006-08-24	mucci
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.9:
		Include config.h IF we are not on BGL, CATAMOUNT or WIN32.

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.17:
		If pfm_find_event returns an error, its a PAPI_EBUG not a 
		PAPI_ENOEVENT, thanks to Michael Kluge

2006-08-24	you
	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.7:
		add test for core

2006-08-24	terpstra
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.11:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.10:
	* src/perfctr-p3.h [papi-3-2-0] 1.37.6.1.2.4:
	* src/perfctr-p4.c [papi-3-2-0] 1.86.2.6:
	* src/perfctr-p4.h [papi-3-2-0] 1.34.12.3:
	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.7:
	* src/perfctr-ppc64.h [papi-3-2-0] 1.1.6.2.2.5:
		Changes to better support rvperfctr calls:
		- casting structures to avoid warnings;
		- added a uniqe error message;
		- removed some commented file references;
		- removed a multiple define of __USE_GNUC in ppc64

2006-08-23	mucci
	* src/extras.c [papi-3-2-0] 1.129.2.6:
		HAVE_FFSLL

	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.9:
	* src/perfctr-p3.h [papi-3-2-0] 1.37.6.1.2.3:
	* src/perfctr-p4.c [papi-3-2-0] 1.86.2.5:
	* src/perfctr-p4.h [papi-3-2-0] 1.34.12.2:
	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.6:
	* src/perfctr-ppc64.h [papi-3-2-0] 1.1.6.2.2.4:
		Added remote support based on work from Todd Miller of Wisconsin. tested and
		working on P6.

	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.8:
	* src/papi_protos.h [papi-3-2-0] 1.53.2.6:
		papi_internal now includes config.h
		
		Changed NEED_FFSLL to HAVE_FFSLL as defined in config.h

	* src/linux-acpi.h [papi-3-2-0] 1.2.2.1:
	* src/linux-mx.h [papi-3-2-0] 1.1.2.1:
		Removed NEED_FFSLL to now be a config option, HAVE_FFSLL

	* src/ppc64_events.c [papi-3-2-0] 1.1.2.1:
		Include internal.h instead of SUBSTRATE

	* src/config.h.in [papi-3-2-0] 1.3.2.3:
	* src/configure [papi-3-2-0] 1.34.2.2.2.21:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.21:
		Ok, removed a bunch of unused tests. Configure runs in about 4 seconds now.
		Put in some forced checks for montecito. If you run with your own PFM on montecito
		you're boned.
		
		Note that much needs to be done to configure still:
		
		* check for conflicting arguments of pfm,pfm_prefix,perfctr,perfctr_prefix
		* construct cflags, ldflags and libs for the above tests
		* test for MONTECITO_H in any of pfm or pfm_prefix if not using built in
		  3.x
		* check for kernel version to force pfm-2.x for < 2.6 kernels
		* specify --with-cc --with-f77 --with-cc-threads etc corresponding to the
		environment variables to be able to force different complers insteads of
		relying on environment variables.
		* Check for -pthread argument to compiler to generate threaded executables if not using
		gcc

	* src/linux.c [papi-3-2-0] 1.45.2.3.2.10:
		Attach functionality. I hate this file.

2006-08-23	terpstra
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.8:
		Change counter enable model back to original P6 model; wrap CORE switch blocks with
		ifdefs so it'll compile clean with older perfctrs.

	* src/ctests/dmem_info.c [papi-3-2-0] 1.4.14.2:
		Minor casting changes to avoid compiler warnings in print 
		statements.

2006-08-18	you
	* src/p3_events.c [papi-3-2-0] 1.48.2.6:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.7:
		Core duo import

2006-08-15	mucci
	* src/pfmwrap.h [papi-3-2-0] 1.22.6.3:
		Added get_num_counters and get_num_events

	* src/config.h.in [papi-3-2-0] 1.3.2.2:
	* src/configure [papi-3-2-0] 1.34.2.2.2.20:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.20:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.16:
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.6:
		Montecito fixes and IA64-2 fixes

	* src/configure [papi-3-2-0] 1.34.2.2.2.19:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.19:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.15:
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.5:
		Initial monte support for kernels < 2.6.17 with perfmon2. This is
		for old kernels with /proc/perfmon. Still requires configure to be
		updated to check for the header file perfmon/pfmlib_montecito.h. Unfortunately
		this requires deciding the include listing inside of configure.
		
		Currently we don't process LDFLAGS or CFLAGS on the basis of pfm,pfm_prefix,perfctr,
		perfctr_prefix etc and this throws all the tests off.
		
		If you want montecito support you have to edit config.h  after your done.

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.14:
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.4:
		Fixes for montecito

2006-08-15	you
	* src/Makefile.irix-mips [papi-3-2-0] 1.51.4.2:
	* src/Makefile.irix-mips-64bit [papi-3-2-0] 1.18.4.2:
		need to use native compilers

2006-08-15	terpstra
	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.6:
		Mods to work on Windows; cleanup memory allocation.

	* src/linux-memory.c [papi-3-2-0] 1.28.4.4:
		First cut implementation of a dmem_info function for Windows.

	* src/win2k/substrate/cpuinfo.c [papi-3-2-0] 1.10.14.2:
		Standardize model_string values to more closely match perfctr.

	* src/x1.c [papi-3-2-0] 1.25.2.3:
		One character fix for problem in overcounting cycles as 
		identified by Nikhil.

2006-08-14	terpstra
	* src/ctests/calibrate.c [papi-3-2-0] 1.29.14.1:
		Make calibrate a little more forgiving for Windows by 
		conditionally increasing the error limit.

	* src/win2k/substrate/cpuinfo.c [papi-3-2-0] 1.10.14.1:
	* src/win2k/substrate/cpuinfo.h [papi-3-2-0] 1.6.14.2:
		Changes to get the Windows substrate to properly recognize 
		Opterons

	* src/linux-memory.c [papi-3-2-0] 1.28.4.3:
		Remove a no longer needed Windows conditional.

2006-08-12	mucci
	* src/papi_internal.c [papi-3-2-0] 1.102.2.8:
		Now initialize, clear and read from arrays of num_mpx_cntrs 
		length, this change also makes it possible in the future to 
		support derived events from multiplexed measurements (PAPI SW 
		multiplexing

	* src/irix-mips.c [papi-3-2-0] 1.103.6.1.2.6:
		Hooray, fully working support for kernel multiplexing on this platform.
		Many changes throughout...but the upside is that PAPI can soon support
		derived measurements event with PAPI SW multiplexing if we move MPX_read
		into the HWI layer. But for now, on platforms that support kernel
		multiplexing, we can use derived events and things still work great. Tested
		on R16K at PDC/KTH.

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.10:
		More option fixups for multiplexing, pass to hwd_ctl for 
		kernel_multiplexing substrates

2006-08-11	mucci
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.6:
		Rename of PAPI_MULTIPLEX_USEC

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.9:
		Better multiplex option handling, checks for PAPI_ATTACHED when 
		setting running_eventset

	* src/any-null.c [papi-3-2-0] 1.41.2.2:
	* src/linux-acpi.c [papi-3-2-0] 1.2.2.3:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.13:
	* src/linux-mx.c [papi-3-2-0] 1.1.2.3:
	* src/papi_protos.h [papi-3-2-0] 1.53.2.5:
	* src/papi_vector.c [papi-3-2-0] 1.7.2.4:
	* src/papi_vector.h [papi-3-2-0] 1.3.2.4:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.6:
	* src/perfctr-p4.c [papi-3-2-0] 1.86.2.4:
	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.5:
	* src/pmapi-ppc64.c [papi-3-2-0] 1.1.4.1.2.2:
	* src/power3.c [papi-3-2-0] 1.38.2.2:
	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.4:
	* src/x1.c [papi-3-2-0] 1.25.2.2:
		Added return code to _papi_hwi_init_control_state. Needed for various reasons.
		All platforms have been updated with a return(PAPI_OK).
		
		BTW, can someone built the T3E version?

	* src/irix-mips.c [papi-3-2-0] 1.103.6.1.2.5:
	* src/irix-mips.h [papi-3-2-0] 1.31.12.1:
		Check if the EventSet has been set to multiplexing before 
		allowing multiplexing

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.8:
		Added multiattach case, both pass on perfmon2 BTW

	* src/papi_internal.c [papi-3-2-0] 1.102.2.7:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.6:
		Added multiplex internal option, changed arg of 
		convert_eventset_to_mpx to take that option, added some static 
		definitions instead of global

	* src/papi.h [papi-3-2-0] 1.142.4.15:
		Renamed PAPI_MULTIPLEX_USEC to PAPI_DEF_MPX_USEC

	* src/unicos-ev5.c [papi-3-2-0] 1.63.2.1:
		Updated domain handling code. Added return code to 
		hwd_init_control_state.

	* src/configure [papi-3-2-0] 1.34.2.2.2.18:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.18:
		better check for ALTIX (run the ioctl for MMTIMER) and allow 
		forcing of perfctr builds

2006-08-11	terpstra
	* src/win2k/winpmc/WinPMC.c [papi-3-2-0] 1.4.14.4:
	* src/win2k/winpmc/pmclib.c [papi-3-2-0] 1.6.14.1:
	* src/win2k/winpmc/pmclib.h [papi-3-2-0] 1.6.14.2:
		Windows kernel driver changes for PAPI 3.3 and Opteron support.

	* src/perfctr-p3.h [papi-3-2-0] 1.37.6.1.2.2:
		Removed Windows specific stuff; it now resides in win2k/
		substrate/os_windows.h

	* src/extras.c [papi-3-2-0] 1.129.2.5:
	* src/multiplex.c [papi-3-2-0] 1.62.2.4:
	* src/papi.h [papi-3-2-0] 1.142.4.16:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.7:
	* src/papi_vector.c [papi-3-2-0] 1.7.2.5:
	* src/papi_vector.h [papi-3-2-0] 1.3.2.5:
		Tweaks to get Windows working.

	* src/ctests/overflow.c [papi-3-2-0] 1.56.6.2:
		Changes to clean up memory leaks.
		Added while debugging overflow on XT3 and Windows.

	* src/ctests/overflow.c [papi-3-2-0] 1.56.6.3:
		Oops.
		Shoulda done a test compile.
		Fixed missing curly brace.

2006-08-10	mucci
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.5:
		Restructured option defs for ease of additions

	* src/papi_protos.h [papi-3-2-0] 1.53.2.4:
		Added flags argument to _papi_hwi_convert_eventset_to_multiplex 
		to determine if we're forcing SW multiplex

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.12:
		Fix for compile warning.

	* src/irix-mips.c [papi-3-2-0] 1.103.6.1.2.4:
		num_cntrs=2,num_mpx_cntrs=HWPERF_EVENTMAX(32) for IRIX

	* src/papi_internal.c [papi-3-2-0] 1.102.2.6:
		Rewrite of convert_papi_eventset_to_multiplex to now honor the new
		behavior when we have kernel multiplexing. The good news is that
		we no longer have to malloc and copy, because we always malloc arrays
		in the size of num_mpx_cntrs for the ESI.
		
		Also, changed EventSetInfoLen(ESI) to return num_mpx_counters most
		of the time.
		
		Changed allocation length in allocate_EventSet.

	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.5:
		Added EventSetOptions for attach and multiplex, added new check 
		for EventSetMultiplexing _papi_hwi_is_sw_multiplex(ESI)

	* src/papi.c [papi-3-2-0] 1.291.6.1.2.8:
		Added PAPI_MAX_MPX_CTRS get_opt, ATTACH/DETACH case, changed 
		code that detects if an eventset is using PAPI SW multiplexing

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.7:
	* src/ctests/papi_test.h [papi-3-2-0] 1.20.12.3:
		Replaced PAPI_MPX_DEF_DEG with PAPI_get_opt(PAPI_MAX_MPX_CTR).
		
		PAPI_MPX_DEF_DEG now only contains the maximum number of MPX counters
		for PAPI SW multiplexing. User code should always use the above get_opt().
		
		Added attach case for Wisconsin. Currently will be skipped on all
		platforms.

	* src/papi.h [papi-3-2-0] 1.142.4.14:
		Added PAPI_ATTACH/DETACH for future use, Attach option, 
		PAPI_MULTIPLEX_FORCE_SW option, PAPI_ATTACHED ESI state

2006-08-10	terpstra
	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.4:
		Changes for subinfo structure support submitted by Eric 
		Kjeldergaard a month ago.

	* src/Makefile.linux-perfctr-p3 [papi-3-2-0] 1.25.2.2:
		Remove TRAP_DERIVED_UNDERFLOW flag, since it isn't supported in 
		the code anymore.

2006-08-09	mucci
	* src/irix-mips.c [papi-3-2-0] 1.103.6.1.2.2:
		Fixes for domain and other globals.

	* src/configure [papi-3-2-0] 1.34.2.2.2.15:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.15:
		Added uniq line to SGI/IRIX to the invocation of hinv -t cpu to get
		only 1 cpu line.

	* src/configure [papi-3-2-0] 1.34.2.2.2.17:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.17:
		Added AC_PROG(CPP)

	* src/configure [papi-3-2-0] 1.34.2.2.2.16:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.16:
		Only test timers on linux platforms.

	* src/Makefile.in [papi-3-2-0] 1.5.4.5:
	* src/Makefile.irix-mips [papi-3-2-0] 1.51.4.1:
	* src/Makefile.irix-mips-64bit [papi-3-2-0] 1.18.4.1:
	* src/irix-mips.c [papi-3-2-0] 1.103.6.1.2.3:
	* src/multiplex.c [papi-3-2-0] 1.62.2.3:
		Fixes for IRIX. sdsc is still bailing, but subinfo
		is reporting the correct data. zero passes as well.
		
		IRIX has kernel multiplexing and something seems to be
		interfering with that. IRIX should never use PAPI soft
		multiplexing, but it seems the conditional code to do this
		has disappeared somewhere. Multiplexing on this platform
		still needs investigation.
		
		In actuality, this platform should report 2 counters. But as with
		before, it reports the number of counters that the kernel multiplexes
		namely 32.
		
		What should happen is that the higher level code should check the
		kernel multiplex bit and do things as appropriate there. num_counters
		should be set to the actual number of counters. We should probably have
		a field in sub_info that says the maximum number of kernel multiplex counters.

2006-08-06	mucci
	* src/run_tests.sh [papi-3-2-0] 1.19.6.1:
		Fix for ALTIX as reported by GFDL. This was because we weren't honoring
		previously set LD_LIBRARY_PATH values in our test script.

2006-08-05	mucci
	* src/configure [papi-3-2-0] 1.34.2.2.2.14:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.14:
	* src/irix-memory.c [papi-3-2-0] 1.18.12.2:
		Small IRIX fix. Configure seems to still try gcc first.

2006-08-04	mucci
	* src/configure [papi-3-2-0] 1.34.2.2.2.12:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.12:
		Runtime test for ALTIX. Fix for systems that SGI is shipping...

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.14:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.5:
	* src/irix-mips.c [papi-3-2-0] 1.103.6.1.2.1:
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.7:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.4:
	* src/perfctr-p4.c [papi-3-2-0] 1.86.2.3:
	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.3:
	* src/threads.c [papi-3-2-0] 1.25.2.2:
	* src/x1.c [papi-3-2-0] 1.25.2.1:
		Remove occurances of PAPI_SIGNAL replaced by dynamic member of 
		subinfo

	* src/Makefile.in [papi-3-2-0] 1.5.4.4:
	* src/config.h.in [papi-3-2-0] 1.3.2.1:
	* src/configure [papi-3-2-0] 1.34.2.2.2.11:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.11:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.11:
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.3:
		Added new per-thread timer that is 3 times faster than the existing one.
		This is through the syscall interface to clock_gettime().
		
		Added lots of configure code to detect this case, the broken times() case
		and the proc timer case.
		
		Added code to detect perfmon2 in configure script.
		
		Added code to better detect the Altix.
		
		Removed PTTIMER definition from Rules files as now it's in config.h

	* src/configure [papi-3-2-0] 1.34.2.2.2.13:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.13:
		Bug fix...

2006-08-04	you
	* src/Makefile.linux-perfctr-p3 [papi-3-2-0] 1.25.2.1:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.5:
		update for woodbridge

2006-08-03	mucci
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.4:
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.6:
	* src/papi.h [papi-3-2-0] 1.142.4.13:
	* src/papi_protos.h [papi-3-2-0] 1.53.2.3:
	* src/threads.c [papi-3-2-0] 1.25.2.1:
		Added function to get all thread specific data. This was requested by another
		user. Test case is in thrspecific (as well as other tests). This affects no
		core code. Also improved naming definitions in fortran output as well as
		added define for PAPI_ALL_THREADS and structure to get all the data.
		
		  PAPI_all_thr_spec_t data;
		
		   data.num = 10; /* Max number to return */
		   data.id = (unsigned long *)malloc(data.num*sizeof(unsigned long));
		   data.data = (void **)malloc(data.num*sizeof(void *));
		
		   retval = PAPI_get_thr_specific(PAPI_USR1_TLS|PAPI_TLS_ALL_THREADS,(void **)&data);
		
		   for (i=0;i<data.num;i++)
		     {
		       printf("Entry %d, Thread 0x%lx, Data Pointer %p, Value %d\n",
		              i,data.id[i],data.data[i],*(int *)data.data[i]);
		     }
		
		This is useful at the end of the run to print out all the threads data.

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.6:
		Added threadspecific test to suite, as well as get all thread specific data
		functionality.

2006-08-02	mucci
	* src/ctests/clockres_pthreads.c [papi-3-2-0] 1.7.14.1:
	* src/ctests/derived.c [papi-3-2-0] 1.17.12.2:
	* src/ctests/encode.c [papi-3-2-0] 1.4.4.1:
	* src/ctests/encode2.c [papi-3-2-0] 1.2.2.1:
	* src/ctests/exeinfo.c [papi-3-2-0] 1.2.14.2:
	* src/ctests/first.c [papi-3-2-0] 1.44.12.3:
	* src/ctests/inherit.c [papi-3-2-0] 1.11.12.1:
	* src/ctests/johnmay2.c [papi-3-2-0] 1.14.12.1:
	* src/ctests/kufrin.c [papi-3-2-0] 1.5.6.1:
	* src/ctests/locks_pthreads.c [papi-3-2-0] 1.7.12.1:
	* src/ctests/mendes-alt.c [papi-3-2-0] 1.10.14.1:
	* src/ctests/mpifirst.c [papi-3-2-0] 1.8.12.2:
	* src/ctests/multiplex1.c [papi-3-2-0] 1.43.12.1:
	* src/ctests/multiplex1_pthreads.c [papi-3-2-0] 1.42.12.1:
	* src/ctests/multiplex2.c [papi-3-2-0] 1.24.10.1:
	* src/ctests/multiplex3_pthreads.c [papi-3-2-0] 1.31.4.1:
	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.5:
	* src/ctests/nineth.c [papi-3-2-0] 1.23.12.2:
	* src/ctests/overflow.c [papi-3-2-0] 1.56.6.1:
	* src/ctests/overflow2.c [papi-3-2-0] 1.19.6.1:
	* src/ctests/overflow3_pthreads.c [papi-3-2-0] 1.15.12.1:
	* src/ctests/overflow_force_software.c [papi-3-2-0] 1.13.2.4:
	* src/ctests/overflow_index.c [papi-3-2-0] 1.4.12.1:
	* src/ctests/overflow_one_and_read.c [papi-3-2-0] 1.1.10.1:
	* src/ctests/overflow_pthreads.c [papi-3-2-0] 1.32.12.1:
	* src/ctests/overflow_single_event.c [papi-3-2-0] 1.38.6.1:
	* src/ctests/overflow_twoevents.c [papi-3-2-0] 1.21.6.1:
	* src/ctests/pernode.c [papi-3-2-0] 1.7.12.1:
	* src/ctests/prof_utils.c [papi-3-2-0] 1.2.12.1:
	* src/ctests/profile_pthreads.c [papi-3-2-0] 1.31.12.1:
	* src/ctests/realtime.c [papi-3-2-0] 1.8.12.1:
	* src/ctests/second.c [papi-3-2-0] 1.34.8.6:
	* src/ctests/shlib.c [papi-3-2-0] 1.15.8.1:
	* src/ctests/tenth.c [papi-3-2-0] 1.31.2.2:
	* src/ctests/test_utils.c [papi-3-2-0] 1.53.4.2.2.3:
	* src/ctests/val_omp.c [papi-3-2-0] 1.2.8.1:
	* src/ctests/version.c [papi-3-2-0] 1.1.12.1:
	* src/ctests/zero.c [papi-3-2-0] 1.31.12.3:
	* src/ctests/zero_flip.c [papi-3-2-0] 1.10.12.2:
	* src/ctests/zero_fork.c [papi-3-2-0] 1.4.12.2:
	* src/ctests/zero_omp.c [papi-3-2-0] 1.30.12.1:
	* src/ctests/zero_pthreads.c [papi-3-2-0] 1.25.12.1:
	* src/ctests/zero_smp.c [papi-3-2-0] 1.26.12.1:
		Moved PAPI_set_debug into tests_quiet so we can get error messages
		fromPAPI_library_init. This is very helpful in debugging.

	* src/ftests/accum.F [papi-3-2-0] 1.19.12.1:
	* src/ftests/cost.F [papi-3-2-0] 1.16.12.1:
	* src/ftests/description.F [papi-3-2-0] 1.15.12.1:
	* src/ftests/first.F [papi-3-2-0] 1.21.12.1:
	* src/ftests/fmultiplex1.F [papi-3-2-0] 1.25.12.1:
	* src/ftests/fmultiplex2.F [papi-3-2-0] 1.19.8.1:
	* src/ftests/ftests_util.F [papi-3-2-0] 1.38.6.1:
	* src/ftests/johnmay2.F [papi-3-2-0] 1.15.12.1:
	* src/ftests/native.F [papi-3-2-0] 1.44.10.1.2.2:
	* src/ftests/nineth.F [papi-3-2-0] 1.19.12.1:
	* src/ftests/second.F [papi-3-2-0] 1.25.12.1:
	* src/ftests/tenth.F [papi-3-2-0] 1.23.12.1:
	* src/ftests/zero.F [papi-3-2-0] 1.16.12.1:
		Moved set_debug into tests_quiet so we can see errors from init

2006-07-28	terpstra
	* src/utils/avail.c [papi-3-2-0] 1.32.6.3:
		Pretty printing: suppress empty parens for non-existent notes.

	* src/win2k/shell/WinPAPIShell.c [papi-3-2-0] 1.13.14.2:
		Tweaked 'do_loops' test for exercising counting in the kernel 
		driver without the PAPI library.

	* src/win2k/winpmc/WinPMC.c [papi-3-2-0] 1.4.14.3:
	* src/win2k/winpmc/pmc_x86.c [papi-3-2-0] 1.3.14.2:
		Updated to count on Windows/Opteron.

2006-07-27	mucci
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.10:
		Added PAPI_FP_OPS for Montecito, Itanium2 in perfmon.c
		Fixup for overflow message for perfmon2 + libpfm

2006-07-25	mucci
	* src/utils/avail.c [papi-3-2-0] 1.32.6.2:
		Missed the spot for the test. Better now.

	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.3:
		replaced a structure copy by *a = b (!!!!) to memcpy.
		
		There is still a leak in this code on line 52. Not sure where or who is
		supposed to clean this up.
		
		Note that also there can be leaks if memory is allocated inside of
		init_substrate.
		
		Ideally, we could probably keep ref counts or else use a global shutdown routine.

	* src/utils/avail.c [papi-3-2-0] 1.32.6.1:
		Bug fix for avail, better test for derived and available

2006-07-25	you
	* src/Makefile.solaris-ultra [papi-3-2-0] 1.60.8.1.2.1:
	* src/Makefile.solaris-ultra-64bit [papi-3-2-0] 1.14.8.1.2.1:
		
		modify some flags for gcc to compile.

	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.3:
		
		add available domain and granularity, now second passes.

2006-07-24	mucci
	* src/extras.c [papi-3-2-0] 1.129.2.4:
		Fixed the test in native_event_info. PAPI preset maps for 
		perfmon2.

2006-07-24	you
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.13:
		add $(BITFLAGS) to make 32bit compilable on opteron

	* src/configure [papi-3-2-0] 1.34.2.2.2.10:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.10:
		let configure generate fpapi.h f77papi.h f90papi.h

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.9:
		minor change to get exeinfo.address right.

	* src/papi_preset.h [papi-3-2-0] 1.12.2.2:
		add extern hwi_search_t *preset_search_map;

2006-07-24	terpstra
	* src/ctests/first.c [papi-3-2-0] 1.44.12.2:
		Corrected verification output text; the columns are added, not 
		multiplied.

	* src/win2k/shell/WinPAPIShell.c [papi-3-2-0] 1.13.14.1:
	* src/win2k/shell/WinPAPIShell.rc [papi-3-2-0] 1.11.14.3:
	* src/win2k/shell/resource.h [papi-3-2-0] 1.7.14.2:
		Changes to add more kernel testing; in process.

	* src/win2k/substrate/WinPAPI.def [papi-3-2-0] 1.10.14.1:
		Removed linux cruft from windows files;
		minor tweaks to get PAPI counting on Windows.
		We really need to rethink how files are organized for WinPMC/perfctr.
		But that should wait for the revamp of linux.c in PAPI 4.

	* src/win2k/winpmc/WinPMC.c [papi-3-2-0] 1.4.14.2:
	* src/win2k/winpmc/WinPMC.h [papi-3-2-0] 1.3.14.1:
	* src/win2k/winpmc/instpmcfre.bat [papi-3-2-0] 1.2.14.1:
		Tweaks to add functionality to the winpmc kernel driver.

	* src/ctests/all_events.c [papi-3-2-0] 1.11.12.2:
		Added a PAPI_destroy_eventset to eliminate memory leak.

2006-07-22	terpstra
	* src/ctests/all_events.c [papi-3-2-0] 1.11.12.1:
	* src/ctests/second.c [papi-3-2-0] 1.34.8.5:
		Tweaks for clean compile on Windows.

2006-07-21	mucci
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.5:
		Many fixes for PAPI_set_domain and PAPI_set_granularity. Should do the
		right thing now without required support for the substrate. Checks for
		valid substrate supported arguments. If PAPI_DOM_ALL is set, it enables
		all supported DOMAINS. Pretty cool.
		
		Also fixes for granularity, not supported yet though.

	* src/papi.h [papi-3-2-0] 1.142.4.12:
		Two new fields. Will not affect any builds. edge_detect and invert. These are
		two easy things to support on various platforms. We can support them through
		a PAPI_INVERT and PAPI_EDGE_DETECT options now in papi.h. This will not
		affect any builds. Current target just x86 < PIV for now.

	* src/genpapifdef.c [papi-3-2-0] 1.32.2.3:
		Added new definitions

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.5:
	* src/ctests/papi_test.h [papi-3-2-0] 1.20.12.2:
	* src/ctests/second.c [papi-3-2-0] 1.34.8.4:
	* src/ctests/test_utils.c [papi-3-2-0] 1.53.4.2.2.2:
		Added reset test case. testing on perfmon revealed poor coverage for
		how start/stop and reset work together.
		
		Added better output to second.c
		
		Added edge detect and invert to subinfo.
		
		Added function approx_equals(double *a, double *b) to test_utils that
		compares against TOLERANCE in papi_test.h
		
		Used like this
		      if (!approx_equals(values[0][i],values[1][i]))
		         test_fail(__FILE__, __LINE__, ((i == 0) ? add_event_str : "PAPI_TOT_CYC"), 1);

	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.4:
		Bug fix. I had PERFCTR_OBJS instead of PFM_OBJS. Haihang, builds should
		work for you now.

2006-07-21	terpstra
	* src/papi_memory.c [papi-3-2-0] 1.3.6.2.2.3:
		Casting some void * pointers to char * to avoid compiler errors 
		on Windows.

	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.3:
		Tweaked DEBUG output in hwi_stop to provide more complete 
		information.

2006-07-20	mucci
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.8:
		Bug fix: Missing lseek on the per thread timer

	* src/papi_internal.c [papi-3-2-0] 1.102.2.5:
		Really, 0 is not a valid character. Null string is defined as '\0';
		
		<       info->derived[0] = 0;
		<       info->postfix[0] = 0;
		---
		>       info->derived[0] = '\0';
		>       info->postfix[0] = '\0';

2006-07-19	you
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.7:
		changes to make it compile

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.5:
		CFLAGS  += cause problem on some non-linux platform. Change it 
		back.

2006-07-17	mucci
	* src/papi.h [papi-3-2-0] 1.142.4.10:
	* src/papi_internal.c [papi-3-2-0] 1.102.2.4:
		Added field to sub_info, num_native_events. Initialize it if you can. P4
		seemed difficult.

	* src/extras.c [papi-3-2-0] 1.129.2.3:
	* src/papi.h [papi-3-2-0] 1.142.4.11:
	* src/papi_preset.h [papi-3-2-0] 1.12.2.1:
	* src/utils/native_avail.c [papi-3-2-0] 1.20.6.1:
		Bug in extras.c, wrong string length passed to ntv_bits_to_info.
		Removed padding of strings in event info...
		Removed extern of preset_map causing problems on some platforms.
		Filling in native info bits of perfmon.c

2006-07-17	you
	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.2:
		
		minor changes to make it compile

2006-07-15	mucci
	* src/configure [papi-3-2-0] 1.34.2.2.2.9:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.9:
		Some code to detect Montecito. If someone sends me a /proc/cpuinfo, that would
		help.

2006-07-12	you
	* src/aix.c [papi-3-2-0] 1.60.2.2.2.3:
		set available_granularities = PAPI_GRN_THR

	* src/power3.c [papi-3-2-0] 1.38.2.1:
		minor changes to comply phil's changes

2006-07-12	terpstra
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.4:
		Tweaks to get Windows code compiling again.

2006-07-11	you
	* src/aix.c [papi-3-2-0] 1.60.2.2.2.2:
	* src/ctests/second.c [papi-3-2-0] 1.34.8.3:
	* src/papi.h [papi-3-2-0] 1.142.4.9:
		fix the supervisor problem

2006-07-10	you
	* src/papi_internal.c [papi-3-2-0] 1.102.2.3:
		set default domain and granularity:
		default_domain = PAPI_DOM_USER
		default_granularity = PAPI_GRN_THR

	* src/multiplex.c [papi-3-2-0] 1.62.2.2:
	* src/pmapi-ppc64.c [papi-3-2-0] 1.1.4.1.2.1:
		minor fixex to comply phil's changes

	* src/aix.c [papi-3-2-0] 1.60.2.2.2.1:
		minor changes to comply phil's changes

2006-07-10	terpstra
	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.4:
		ifdef the clause that identifies x86 processor types.
		There must be a slicker way to do this, but it works...
		Contributed by Haihang and by Maynard Johnson.

	* src/linux.c [papi-3-2-0] 1.45.2.3.2.9:
		Oops.
		Had the code in the wrong place.

	* src/Makefile.catamount-perfctr-opteron [papi-3-2-0] 1.2.6.1.2.1:
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.8:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.2:
	* src/perfctr-p3.h [papi-3-2-0] 1.37.6.1.2.1:
		Minor modifications for Catamount.

2006-07-09	mucci
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.11:
		Explicit libperfctr.a, missed a PERFCTR_ROOT definition.

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.3:
		Removed Makefile and config.h when someone does clobber

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.4:
		*** empty log message ***

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.12:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.3:
		Added NFS code to exit from a recursive make if we need to build perfctr
		or libpfm. This is because we do a recursive make in the papi directory
		to reset the PFM/PERFCTR_OBJS variable to the ar t <lib> of the library.
		i.e. we don't explicitly list the objects in the rules file any more.
		What was needed was an exit, because with NFS, make wasn't detecting that
		the targets were all up to date.
		
		This may be avoided in a better way...

2006-07-07	terpstra
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.4:
		Made MAX_HWCTRS alias to MAX_CTRS for now. We can split this 
		definition at a later date, but as of now there is only one 
		field in the structure.

	* src/linux.c [papi-3-2-0] 1.45.2.3.2.7:
		Removed   _papi_hwi_system_info.supports_hw_profile reference in CATAMOUNT specific code.
		I believe this was replaced by sub_info.kernel_profile

2006-07-06	you
	* src/ctests/overflow_force_software.c [papi-3-2-0] 1.13.2.3:
		change supports_hw_overflow to hardware_inr. This is due to 
		change in papi.h

2006-07-06	terpstra
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.10:
		Mods to define MEMSUBSTR for ARCH = x86_64

2006-07-01	mucci
	* src/any-null-memory.c [papi-3-2-0] 1.7.12.2:
	* src/any-null.c [papi-3-2-0] 1.41.2.1:
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.2:
	* src/linux-acpi.c [papi-3-2-0] 1.2.2.2:
	* src/linux-mx.c [papi-3-2-0] 1.1.2.2:
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.6:
	* src/multiplex.c [papi-3-2-0] 1.62.2.1:
	* src/p3_events.c [papi-3-2-0] 1.48.2.5:
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.3:
	* src/papi.h [papi-3-2-0] 1.142.4.8:
	* src/papi_internal.c [papi-3-2-0] 1.102.2.2:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.3:
	* src/papi_memory.c [papi-3-2-0] 1.3.6.2.2.2:
	* src/papi_memory.h [papi-3-2-0] 1.4.6.2.2.1:
	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.2:
	* src/papi_protos.h [papi-3-2-0] 1.53.2.2:
	* src/perfctr-p3.c [papi-3-2-0] 1.63.2.1:
	* src/perfctr-p4.c [papi-3-2-0] 1.86.2.2:
	* src/tru64-alpha.c [papi-3-2-0] 1.62.2.1:
		This commit adds PAPI_get_substrate_info for Linux/P3 and Linux/P4. Lots
		of other code will need to be updated.
		
		There is now a new structure in papi_mdi called PAPI_substrate_info_t. It
		collects lots of globals that were scattered around before...Many are tunable
		like the multiplex interval, now set with PAPI_MULTIPLEX_USEC.
		
		Most of the changes around are due to fields moving and being renamed
		but the fields are pretty self explanatory. If you find yourself refering
		to a global for a substrate in multiple places, perhaps it belongs here.
		
		It contains:
		identifiers
		tunables
		feature_bits
		
		The user can now ask if there is a fast, this, fast that, etc...
		
		I'm sure all of your substrates will break upon this comment. Best thing is
		to look at linux.c for what you need. Keep in mind some defaults are set
		in papi_internal.c and they probably need to be changed at times. (Like
		signal number)
		
		Questions complaints and comments send my way...
		
		   typedef struct _papi_substrate_option {
		     char name[PAPI_MAX_STR_LEN];            /* Name of the substrate we're using, usually CVS RCS Id */
		     char version[PAPI_MIN_STR_LEN];         /* Version of this substrate, usually CVS Revision */
		     char support_version[PAPI_MIN_STR_LEN]; /* Version of the support library */
		     char kernel_version[PAPI_MIN_STR_LEN];  /* Version of the kernel PMC support driver */
		     int num_cntrs;               /* Number of hardware counters the substrate supports */
		     int num_preset_events;       /* Number of preset events the substrate supports */
		     int default_domain;          /* The default domain when this substrate is used */
		     int available_domains;       /* Available domains */
		     int default_granularity;     /* The default granularity when this substrate is used */
		     int available_granularities; /* Available granularities */
		     int multiplex_timer_sig;     /* Signal number used by the multiplex timer, 0 if not */
		     int multiplex_timer_num;     /* Number of the itimer or POSIX 1 timer used by the multiplex timer */
		     int multiplex_timer_us;   /* uS between switching of sets */
		     int hardware_intr_sig;       /* Signal used by hardware to deliver PMC events */
		     int opcode_match_width;      /* Width of opcode matcher if exists, 0 if not */
		     int reserved_ints[4];
		     unsigned int hardware_intr:1;         /* Needs hw overflow intr to be emulated in software*/
		     unsigned int precise_intr:1;          /* Performance interrupts happen precisely */
		     unsigned int posix1b_timers:1;        /* Using POSIX 1b interval timers (timer_create) instead of setitimer */
		     unsigned int kernel_profile:1;        /* Needs kernel profile support (buffered interrupts) to be emulated */
		     unsigned int kernel_multiplex:1;      /* In kernel multiplexing */
		     unsigned int data_address_range:1;    /* Supports data address range limiting */
		     unsigned int instr_address_range:1;   /* Supports instruction address range limiting */
		     unsigned int fast_counter_read:1;     /* Has a user level PMC read instruction */
		     unsigned int fast_real_timer:1;       /* Has a fast real timer */
		     unsigned int fast_virtual_timer:1;    /* Has a fast virtual timer */
		     unsigned int data_address_smpl:1;     /* Supports data/instr miss address sampling */
		     unsigned int branch_tracing:1;        /* Supports branch trace buffering */
		     unsigned int tlb_address_smpl:1;      /* Supports TLB miss address sampling */
		     unsigned int grouped_cntrs:1;         /* Underlying hardware uses counter groups */
		     unsigned int reserved_bits:18;
		   } PAPI_substrate_info_t;

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.4:
		PAPI_get_substrate_info test case

2006-06-30	mucci
	* src/ctests/derived.c [papi-3-2-0] 1.17.12.1:
	* src/ctests/first.c [papi-3-2-0] 1.44.12.1:
	* src/ctests/mpifirst.c [papi-3-2-0] 1.8.12.1:
	* src/ctests/nineth.c [papi-3-2-0] 1.23.12.1:
	* src/ctests/overflow_force_software.c [papi-3-2-0] 1.13.2.1:
	* src/ctests/papi_test.h [papi-3-2-0] 1.20.12.1:
	* src/ctests/tenth.c [papi-3-2-0] 1.31.2.1:
	* src/ctests/test_utils.c [papi-3-2-0] 1.53.4.2.2.1:
	* src/ctests/zero.c [papi-3-2-0] 1.31.12.2:
	* src/ctests/zero_flip.c [papi-3-2-0] 1.10.12.1:
		stringify_domains now replaced with stringify_all_domains which
		allows the default domain to be more than one, i.e. PAPI_DOM_USER|PAPI_DOM_KERNEL
		
		Added stringify_all_domains and stringify_all_granularities

	* src/Makefile.in [papi-3-2-0] 1.5.4.3:
	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.2:
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.8:
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.2:
	* src/configure [papi-3-2-0] 1.34.2.2.2.8:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.8:
		Added the following options:
		
		  --with-debug=<no,yes,memory>     Build a debugging version of the library
		  --with-perfctr=<path>     Specify path to prebuilt perfctr distribution
		  --with-perfctr-prefix=<path>     Specify prefix to installed perfctr distribution
		  --with-pfm=<path>     Specify path to prebuilt pfm distribution
		  --with-pfm-prefix=<path>     Specify prefix to installed pfm distribution
		
		Also, simplified the Rules files...removing the explicit listing of archive
		members from pfm and perfctr.
		
		Added checks for library compilation and better errors in configure.
		
		Added substrate to CFLAGS and not just LIBCFLAGS

2006-06-30	you
	* src/ctests/overflow_force_software.c [papi-3-2-0] 1.13.2.2:
		hardware_inr is not defined. change back to supports_hw_overflow

2006-06-30	terpstra
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.9:
		Patch to select proper compiler for Catamount.

	* src/linux-memory.c [papi-3-2-0] 1.28.4.2:
		Mods for compilation on Windows.

2006-06-29	you
	* src/Makefile.aix-powerpc.common [papi-3-2-0] 1.1.4.1.2.2:
		remove -DPAPI_NO_VECTOR

2006-06-29	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.4:
		Added a reminder about possible future redefinition of PAPI_FP_OPS similar to P4.
		Only matters for SP SSE optimized codes...

2006-06-28	terpstra
	* src/perfctr-p4.h [papi-3-2-0] 1.34.12.1:
		Added HW_OVERFLOW flag, which was mysteriously missing.

	* src/ftests/native.F [papi-3-2-0] 1.44.10.1.2.1:
		Changes from 3.0.8.1+ folded forward.

	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.3:
		Folded forward Phil's excellent restructuring of this test from 3.0.8.1+
		Tested on PIII, P4, Athlon, Opteron; needs confirmation elsewhere.

2006-06-06	terpstra
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.5:
		The reference to pfm_get_event_description that was merged from PAPI 3081+
		causes a link problem on Altix pfm 2.0 for DOD eagle
		I backed it out pending further tests.

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.6:
	* src/pfmwrap.h [papi-3-2-0] 1.22.6.2:
		Conditioned use of pfm_get_event_description on ALTIX 
		environment variable.

2006-06-02	maynardj
	* ChangeLogP321.txt [papi-3-2-0] 1.1.2.3:
	* man/man3/PAPI_set_domain.3 [papi-3-2-0] 1.11.12.1:
	* src/ctests/second.c [papi-3-2-0] 1.34.8.2:
	* src/papi.h [papi-3-2-0] 1.142.4.7:
	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.2:
	* src/perfctr-ppc64.h [papi-3-2-0] 1.1.6.2.2.3:
		Add capability to count events in supervisor (aka `hypervisor`) 
		context.

2006-06-02	terpstra
	* src/Makefile.aix-powerpc.common [papi-3-2-0] 1.1.4.1.2.1:
	* src/ctests/exeinfo.c [papi-3-2-0] 1.2.14.1:
	* src/ctests/zero.c [papi-3-2-0] 1.31.12.1:
	* src/ctests/zero_fork.c [papi-3-2-0] 1.4.12.1:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.4:
	* src/papi_internal.c [papi-3-2-0] 1.102.2.1:
	* src/pmapi-ppc64.h [papi-3-2-0] 1.1.4.1.2.1:
	* src/power4_events_map.c [papi-3-2-0] 1.1.6.1.2.1:
	* src/power5_events.h [papi-3-2-0] 1.1.6.1.2.1:
	* src/ppc64_events.h [papi-3-2-0] 1.1.4.1.2.1:
	* src/solaris-ultra.c [papi-3-2-0] 1.107.2.1:
		Merging residual changes from the 3.0.8.1+ branch forward into the 3.2.0 branch.
		The 3.0.8.1+ branch is now officially deprecated.
		Commit to it at your own risk.
		These changes have NOT been tested.
		Some files remain to be merged, including:
		ctests/native.c
		ftests/native.F
		Rules.perfctr
		etc.
		I suspect several of the remaining files (ppc64) are ok because they are under active development in the 3.2.0 branch.

2006-05-31	terpstra
	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.2:
		Tweaks to make these tests work on PPC32.
		The use of (linux) as a qualifer in native.c doesn't seem properly placed in some cases.

2006-05-25	terpstra
	* src/perfctr-p4.c [papi-3-2-0] 1.86.2.1:
		Tweak a few debug strings for correctness.

	* src/linux.c [papi-3-2-0] 1.45.2.3.2.5:
		Minor tweaks for PPC32 support.

2006-05-24	terpstra
	* src/linux-ppc64-memory.c [papi-3-2-0] 1.2.2.1:
	* src/perfctr-ppc64.h [papi-3-2-0] 1.1.6.2.2.2:
		Mods from Maynard for dmem_info and locks on ppc64

2006-05-23	mucci
	* src/Rules.pfm [papi-3-2-0] 1.16.10.1.2.1:
	* src/linux-ia64.c [papi-3-2-0] 1.126.2.3:
		More commits for the times() fix. Working and building on our 
		IA64 hp05.

	* src/linux.c [papi-3-2-0] 1.45.2.3.2.4:
		Missing tb_scale_factor from virtual timer measurements.

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.2:
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.2:
		Code for getting per thread times out of /proc/pid/task/tid/stat instead
		of times on linux 2.6. This will affect all linux platforms once perfctr
		is phased out.
		
		The problem? times() reports per process not per thread on Linux 2.6
		
		Thanks to Todd Miller of DynInst for helping me with this.

2006-05-23	you
	* src/Makefile.in [papi-3-2-0] 1.5.4.2:
	* src/configure [papi-3-2-0] 1.34.2.2.2.6:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.6:
		
		add checking for per thread timer

	* src/configure [papi-3-2-0] 1.34.2.2.2.7:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.7:
		new test from Phil.

2006-05-19	terpstra
	* src/configure [papi-3-2-0] 1.34.2.2.2.5:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.5:
		Minor tweak to recognize Intel Family 15, Model 6 as em64t.

2006-05-10	terpstra
	* src/aix-memory.c [papi-3-2-0] 1.13.12.1:
	* src/alpha-memory.c [papi-3-2-0] 1.9.12.1:
	* src/any-null-memory.c [papi-3-2-0] 1.7.12.1:
	* src/genpapifdef.c [papi-3-2-0] 1.32.2.1:
	* src/irix-memory.c [papi-3-2-0] 1.18.12.1:
	* src/linux-acpi-memory.c [papi-3-2-0] 1.1.2.1:
	* src/linux-acpi.c [papi-3-2-0] 1.2.2.1:
	* src/linux-ia64-memory.c [papi-3-2-0] 1.18.12.1:
	* src/linux-memory.c [papi-3-2-0] 1.28.4.1:
	* src/linux-mx-memory.c [papi-3-2-0] 1.1.2.1:
	* src/linux-mx.c [papi-3-2-0] 1.1.2.1:
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.3:
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.2:
	* src/papi.h [papi-3-2-0] 1.142.4.6:
	* src/papi_fwrappers.c [papi-3-2-0] 1.70.6.1:
	* src/papi_protos.h [papi-3-2-0] 1.53.2.1:
	* src/papi_vector.c [papi-3-2-0] 1.7.2.3:
	* src/papi_vector.h [papi-3-2-0] 1.3.2.3:
	* src/solaris-memory.c [papi-3-2-0] 1.10.12.1:
	* src/unicos-memory.c [papi-3-2-0] 1.10.12.1:
		Re-implementation of dynamic memory stuff based on Phil's new model for linux.
		Implemented everywhere, but only ested on Pentium 4.
		Should work as well on Itanium.
		Minimal implementations everywhere else.

	* src/ctests/dmem_info.c [papi-3-2-0] 1.4.14.1:
		Reworked for new implementation of dynamic memory stuff based on 
		Phil's new model for linux.

	* src/ftests/Makefile [papi-3-2-0] 1.51.6.1:
		New Fortran test to illustrate implementation of dynamic memory 
		stuff based on Phil's new model for linux.

2006-05-04	terpstra
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.7:
		Added support for i686, i586, i486.
		(They all default to i386)
		586 and 486 are probably not needed, but for some reason our Pentium 4
		was being identified as i686 and causing a failure in the make.

	* PAPI_FAQ.html [papi-3-2-0] 1.4.6.1:
		Added a new FAQ to describe behavior of PAPI_LD_INS, PAPI_SR_INS 
		and PAPI_LST_INS.

	* src/ctests/Makefile [papi-3-2-0] 1.126.2.3:
		Added a new test to illustrate behavior of PAPI_LD_INS, PAPI_SR_INS and PAPI_LST_INS.
		This test is only intended for Pentium 4, but should work anywhere.
		It demonstrates that these events should not be counted together.

	* src/p4_events.c [papi-3-2-0] 1.49.6.1:
		Cleaned up the cache mapping for L2 and L3.
		Also removed all suspect cache events.
		We desperately need L1 data cache event definitions.

2006-05-02	mucci
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.6:
	* src/linux.c [papi-3-2-0] 1.45.2.3.2.2:
		iMore PPC32 support. Dan still has to vectorize this.
		
		Note, I REALLY HATE linux.c
		It is not linux,it has all sorts of arch specific defines
		as well as PERFCTR isms and tons of #ifdefs.
		
		The goal of this file was linux specific but not arch specific
		or substrate specific functions. Even hwd_dispatch is in here which
		uses vperfctr calls. Bad bad bad.
		
		Note to developers, take this file and SHOOT it for PAPI 4.0.

	* src/configure [papi-3-2-0] 1.34.2.2.2.4:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.4:
		PPC32 support

2006-05-02	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.3:
		My bad.
		When I added the most recent events to the Opteron native table,
		I did not update the enumeration list.
		Since the native event used in PAPI_TOT_CYC is last in that list, it was pointing at a bogus entry.
		All better now...

2006-05-01	mucci
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.5:
		Commit from Maynard...

2006-04-29	mucci
	* src/Makefile.in [papi-3-2-0] 1.5.4.1:
	* src/configure [papi-3-2-0] 1.34.2.2.2.3:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.3:
		Added AC_SUBST of PAPI_DATADIR to make sure it is defined in the makefile.
		This caused install to fail on PPC64

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.4:
		perfctr 2.7.x didn't install to lib64...this should work now..Install
		on 32 bit mode works.

	* src/Rules.perfctr [papi-3-2-0] 1.24.2.3:
		More fixes...Removed ugliness of x86_64 and i386 stuff for 
		perfctr.

	* src/linux.c [papi-3-2-0] 1.45.2.3.2.1:
		Need a cast to long long here to shift by 32.

2006-04-28	mucci
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.1:
		Cleanup for i386/x86_64 install targets...A little nicer now.
		
		Also, added CONFIG_HEADER to the targets, which means the
		BUILD WILL FAIL IF YOU DON"T RUN CONFIGURE.

	* src/Makefile.inc [papi-3-2-0] 1.108.6.1.2.1:
		Added LIB_SUFFIX to targets...(x86_64)
		
		Thanks to Dong Ahn

	* src/Makefile.linux-perfctr-POWER4 [papi-3-2-0] 1.1.2.1:
	* src/Makefile.linux-perfctr-POWER4-64bit [papi-3-2-0] 1.1.2.1:
	* src/Makefile.linux-perfctr-POWER5 [papi-3-2-0] 1.1.2.1:
	* src/Makefile.linux-perfctr-POWER5-64bit [papi-3-2-0] 1.1.2.1:
	* src/Rules.perfctr [papi-3-2-0] 1.24.2.2:
		config.h now hardcoded to tbe build, not needed in Makefiles.

2006-04-27	terpstra
	* src/win2k/substrate/cpuinfo.h [papi-3-2-0] 1.6.14.1:
		Modify so this file is only included once.
		It will need to be updated to support newer processor types.

	* src/win2k/substrate/win_extras.h [papi-3-2-0] 1.5.14.1:
		Modify for better POSIX compliance; define a few more 
		equivalences.

	* INSTALL.txt [papi-3-2-0] 1.15.6.2.2.1:
		Add a note indicating that our configure script lives in /src, 
		not papi.

	* src/win2k/shell/WinPAPIShell.rc [papi-3-2-0] 1.11.14.2:
	* src/win2k/shell/resource.h [papi-3-2-0] 1.7.14.1:
		These files are generated by the Visual Studio environment, but 
		I suppose they should be updated for consistency.

	* src/extras.c [papi-3-2-0] 1.129.2.2:
	* src/p3_events.c [papi-3-2-0] 1.48.2.2:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.2:
	* src/papi_memory.c [papi-3-2-0] 1.3.6.2.2.1:
	* src/papi_vector.c [papi-3-2-0] 1.7.2.2:
	* src/papi_vector.h [papi-3-2-0] 1.3.2.2:
	* src/papi_vector_redefine.h [papi-3-2-0] 1.1.2.1:
		Modified as a first cut for supporting Windows.
		Compiles and links on Windows, but has not been tested;
		ompiles, links and runs on linux-p4.

2006-04-18	terpstra
	* src/win2k/shell/WinPAPIShell.rc [papi-3-2-0] 1.11.14.1:
		Remove reference to non-existent bitmap.

	* src/papi.h [papi-3-2-0] 1.142.4.5:
		Update version number for 3.2.2 beta 1 (3.2.1.1)

2006-04-11	you
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.2:
		add data_range test case

	* src/linux-ia64.c [papi-3-2-0] 1.126.2.1:
	* src/linux-ia64.h [papi-3-2-0] 1.41.6.1:
	* src/papi.c [papi-3-2-0] 1.291.6.1.2.1:
	* src/papi.h [papi-3-2-0] 1.142.4.4:
	* src/papi_internal.h [papi-3-2-0] 1.158.6.1.2.1:
	* src/pfmwrap.h [papi-3-2-0] 1.22.6.1:
		data range support

2006-04-10	terpstra
	* src/win2k/winpmc/SOURCES [papi-3-2-0] 1.1.20.1:
	* src/win2k/winpmc/WinPMC.c [papi-3-2-0] 1.4.14.1:
	* src/win2k/winpmc/pmc_kernel.h [papi-3-2-0] 1.4.14.1:
	* src/win2k/winpmc/pmc_x86.c [papi-3-2-0] 1.3.14.1:
	* src/win2k/winpmc/pmc_x86.h [papi-3-2-0] 1.1.20.1:
	* src/win2k/winpmc/pmclib.h [papi-3-2-0] 1.6.14.1:
		Updates to support AMD64 and restructured build.

2006-04-07	you
	* src/ctests/Makefile [papi-3-2-0] 1.126.2.1:
	* src/ctests/native.c [papi-3-2-0] 1.49.6.2.2.1:
		modified tests for bgl

	* src/extras.c [papi-3-2-0] 1.129.2.1:
	* src/papi.h [papi-3-2-0] 1.142.4.3:
	* src/papiStdEventDefs.h [papi-3-2-0] 1.33.2.1:
	* src/papi_data.c [papi-3-2-0] 1.23.2.1:
	* src/papi_preset.c [papi-3-2-0] 1.17.6.1.2.1:
	* src/papi_vector.c [papi-3-2-0] 1.7.2.1:
	* src/papi_vector.h [papi-3-2-0] 1.3.2.1:
		
		bgl support

2006-04-07	terpstra
	* src/p3_events.c [papi-3-2-0] 1.48.2.1:
		Added new opteron events identified by Sarah Anderson of Cray.
		There are more new events available.
		This table should reviewed against current AMD docs.

2006-03-16	terpstra
	* src/configure [papi-3-2-0] 1.34.2.2.2.2:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.2:
		Maynard's fix for building PPC64-bit

2006-03-09	terpstra
	* ChangeLogP321.txt [papi-3-2-0] 1.1.2.2:
	* src/ctests/second.c [papi-3-2-0] 1.34.8.1:
	* src/perfctr-ppc64.c [papi-3-2-0] 1.1.2.1:
	* src/perfctr-ppc64.h [papi-3-2-0] 1.1.6.2.2.1:
		Maynard's domain propagation changes for ppc64 linux

2006-03-03	terpstra
	* src/configure [papi-3-2-0] 1.34.2.2.2.1:
	* src/configure.in [papi-3-2-0] 1.33.2.2.2.1:
		Changed detection string for newer Opterons per input from 
		gwh@allinea.com

