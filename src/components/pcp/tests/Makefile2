# To use this file, specify make -f Makefile2 ...targets...
# This allows construction of executables needed to do
#  performance bench-testing of the PCP component. 

NAME=pcp
include ../../Makefile_comp_tests.target

retZero.o: retZero.c
	$(CC) -O0 $(INCLUDE) -c retZero.c -o retZero.o
 
benchPCP.o:	benchPCP.c
	$(CC) $(CFLAGS) $(OPTFLAGS) $(INCLUDE) -c benchPCP.c -o benchPCP.o -fverbose-asm -Wa,-adhln=benchPCP.s

benchPCP: benchPCP.o $(UTILOBJS) $(PAPILIB)
	$(CC) $(INCLUDE) -o benchPCP benchPCP.o $(UTILOBJS) $(PAPILIB) $(LDFLAGS) -Xlinker -Map=benchPCP_link.map

benchStats.o:	benchStats.c
	$(CC) $(CFLAGS) $(OPTFLAGS) $(INCLUDE) -c benchStats.c -o benchStats.o 

benchStats: benchStats.o $(UTILOBJS) $(PAPILIB)
	$(CC) $(INCLUDE) -o benchStats benchStats.o $(UTILOBJS) $(PAPILIB) $(LDFLAGS) -lm 

# This code will time Standalone PCP operations (not through PAPI) for a baseline to assess PAPI added overhead.
benchSAPCP.o:	benchSAPCP.c
	$(CC) $(CFLAGS) $(OPTFLAGS) $(INCLUDE) -c benchSAPCP.c -o benchSAPCP.o

benchSAPCP: benchSAPCP.o $(UTILOBJS) $(PAPILIB) retZero.o 
	$(CC) $(INCLUDE) -o benchSAPCP benchSAPCP.o retZero.o $(UTILOBJS) $(PAPILIB) $(LDFLAGS) -Xlinker -Map=benchSAPCP_link.map

clean:
	rm -f benchPCP benchPCP.o benchPCP.s benchPCP_link.map 
	rm -f benchStats benchStats.o
	rm -f benchSAPCP benchSAPCP.o
	rm -f retZero.o
