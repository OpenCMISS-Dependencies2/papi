.TH LIBPFM 3  "October, 2007" "" "Linux Programmer's Manual"
.SH NAME
libpfm_x86_64 - support for AMD64 processors
.SH SYNOPSIS
.nf
.B #include <perfmon/pfmlib.h>
.B #include <perfmon/pfmlib_amd64.h>
.sp
.SH DESCRIPTION
The libpfm library provides full support for the AMD64 processor family 15 and 16 when
running in either 32 or 64 bit mode. The interface is defined in \fBpfmlib_amd64.h\fR. It consists
of a set of functions and structures which describe and allow access to the
AMD64 specific PMU features. Note that it does not support Intel EM64T processors.
.sp
When AMD64 processor-specific features are needed to support a measurement their descriptions must be passed
as model-specific input arguments to the \fBpfm_dispatch_events\fR call. The AMD64 processor-specific 
input arguments are described in the \fBpfmlib_amd64_input_param_t\fR structure and the output
parameters in \fBpfmlib_amd64_output_param_t\fR. They are defined as follows:
.sp
.nf
typedef struct {
	unsigned int	cnt_mask;
	unsigned int	flags;
} pfmlib_amd64_counter_t;

typedef struct {
	pfmlib_amd64_counter_t	pfp_amd64_counters[PMU_AMD64_NUM_COUNTERS];
	uint64_t		reserved[4];
} pfmlib_amd64_input_param_t;

typedef struct {
	uint64_t	reserved[8];
} pfmlib_amd64_output_param_t;
.fi
.sp
.sp
The X86-64 processor provides a few additional per-event features for 
counters: thresholding, inversion, edge detection. They can be set using the 
\fBpfp_amd64_counters\fR data structure for each event.  The \fBflags\fR
field can be initialized as follows:
.TP
.B PFMLIB_AMD64_SEL_INV
Inverse the results of the \fBcnt_mask\fR comparison when set
.TP
.B PFMLIB_AMD64_SEL_EDGE
Enables edge detection of events. 
.LP

The \fBcnt_mask\fR field contains is used to set the event threshold.
The value of the counter is incremented each time the number of occurrences
per cycle of the event is greater or equal to the value of the field. When
zero all occurrences are counted.
.sp
.LP
.SH ERRORS
Refer to the description of \fBpfm_dispatch_events()\fR for errors.
.SH SEE ALSO
pfm_dispatch_events(3) and set of examples shipped with the library
.SH AUTHOR
Stephane Eranian <eranian@hpl.hp.com>
.PP
