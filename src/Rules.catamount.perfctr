# $Id$

DESCR   = "Catamount with PerfCtr $(VERSION) patch and library"
LIBRARY = libpapi.a
#SHLIB   = libpapi.so
SUBSTR  = perfctr-$(CPU)
MSUBSTR = linux-perfctr-$(CPU)
MEMSUBSTR= linux
LIBS    = static
#LIBS    = static shared
TARGETS = serial
#TARGETS = serial multiplex_and_pthreads shared

#
# GNU G77/GCC section
#

F77   		= g77 -Wall
CC			= qk-gcc -Wall -E
CC_R    	= $(CC) -pthread
CC_SHR		= $(CC) $(SHRFLAGS) -shared -Xlinker "-soname" -Xlinker "libpapi.so" -Xlinker "-rpath" -Xlinker "$(PREFIX)/lib"
GCCVER3		= $(shell gcc -v 2>&1 | grep version | cut -f3 -d" " | grep "^3")
FFLAGS		= -ffixed-line-length-132
ifeq (,$(GCCVER3))
OPTFLAGS	= 
else
GCCVER33	= $(shell gcc -v 2>&1 | tail -n 1 | grep version | cut -f3 -d" " | cut -f2 -d"." | grep "^3")
ifeq (,$(GCCVER33))
OPTFLAGS	= $(GCC3ARGS)
else
OPTFLAGS	= $(GCC3ARGS)
endif
endif

ARCH		:= $(shell uname -m | grep x86_64)
ifeq (x86_64,$(ARCH))
SHRFLAGS		:= -fPIC
LIB_SUFFIX		:= 64
endif

# 
# Portland Group section
# 

ifeq (PGROUP, $(COMPILER))
F77       = pgf77
CC	  = pgcc
FFLAGS    = 
OPTFLAGS  =
TARGETS	  += omp
endif

# 
# Pathscale Group PGF77 section
# 

ifeq (PATHSCALE, $(COMPILER))
F77       = pathf90
CC	  = pathcc
CC_R      = pathcc
FFLAGS    = 
OPTFLAGS  =
endif

#
#  Intel compilers
#

ifeq (INTEL, $(COMPILER))
IFCVER7  = $(shell ifc -V 2>&1 | grep "Version 7")
ifneq (,$(IFCVER7))
F77      = ifc
LDFLAGS  = -Vaxlib
else
F77      = ifort
endif
CC	 = icc
CC_R	 = $(CC) -pthread
CC_SHR	 = $(CC) $(SHRFLAGS) -shared -Xlinker "-soname" -Xlinker "libpapi.so" -Xlinker "-rpath" -Xlinker "$(PREFIX)/lib"
OMPCFLGS = -openmp
OPTFLAGS = -ip
FFLAGS   = -132
TARGETS	 += omp
endif

OPTFLAGS	+= -O3 $(EVENTFLAGS)
FFLAGS        	+= -Dlinux
TOPTFLAGS	+= -O  
FTOPTFLAGS	= $(TOPTFLAGS)

#
# DO NOT TOUCH BELOW HERE UNLESS YOU KNOW WHAT YOU ARE DOING
#

ifeq (,$(PERFCTR_PREFIX))
PERFCTR ?= ./perfctr-$(VERSION)
PERFCTR_LIB_PATH ?= $(PERFCTR)/usr.lib
PERFCTR_INC_PATH ?= $(PERFCTR)/usr.lib
PERFCTR_KINC_PATH ?= $(PERFCTR)/linux/include
else
ifeq (x86_64,$(ARCH))
# Early perfctrs didn't put stuff into lib64
DUMMY		:= $(shell ls $(PERFCTR_PREFIX)/lib64/libperfctr.so 2> /dev/null)
ifeq (,${DUMMY})
     PERFCTR_LIB_SUFFIX	:= 
else
     PERFCTR_LIB_SUFFIX := 64
endif
else
     PERFCTR_LIB_SUFFIX := 
endif
PERFCTR_LIB_PATH ?= $(PERFCTR_PREFIX)/lib$(PERFCTR_LIB_SUFFIX)
PERFCTR_INC_PATH ?= $(PERFCTR_PREFIX)/include
PERFCTR_KINC_PATH ?= $(PERFCTR_INC_PATH)
endif

CFLAGS  += -D__CATAMOUNT__ -DDEBUG
CFLAGS  += -I$(PERFCTR_INC_PATH) -I$(PERFCTR_KINC_PATH)

CFLAGS-2.6.x := -DPERFCTR26
CFLAGS-2.7.x := $(CFLAGS-2.6.x)

PERFCTR_OBJS-2.4.5 := libperfctr.o
PERFCTR_OBJS-2.4.x := $(PERFCTR_OBJS-2.4.5)
PERFCTR_OBJS-2.5.4 := global.o misc.o virtual.o event_set.o event_set_amd.o catamount.o x86_64.o
PERFCTR_OBJS-2.6.x := marshal.o global.o misc.o virtual.o x86.o
PERFCTR_OBJS-2.7.x := $(PERFCTR_OBJS-2.6.x)

CFLAGS	+= $(CFLAGS-$(VERSION))
PERFCTR_OBJS := $(PERFCTR_OBJS-$(VERSION))

MISCHDRS = perfctr-$(CPU).h
#SHLIBDEPS = -L$(PERFCTR_LIB_PATH) -lperfctr
MISCSRCS = linux.c $(CPU)_events.c
MISCOBJS = $(PERFCTR_OBJS) $(MISCSRCS:.c=.o) 

#POST_BUILD = cp $(PERFCTR_LIB_PATH)/libperfctr.so .;ln -s libperfctr.so libperfctr.so.5
#SPECIAL_REMOVE = rm -f libperfctr.so*

include Makefile.catamount.inc

$(PERFCTR_LIB_PATH)/libperfctr.a:
ifeq (,${PERFCTR_PREFIX})
	$(MAKE) -C $(PERFCTR)
else
	@echo '$@ not installed!'; exit 1
endif

$(PERFCTR_OBJS): $(PERFCTR_LIB_PATH)/libperfctr.a
	ar xv $<

$(CPU)_events.o: $(CPU)_events.c
	$(CC) $(LIBCFLAGS) $(OPTFLAGS) -c $^ -o $@

linux.o: linux.c
	$(CC) $(LIBCFLAGS) $(OPTFLAGS) -c $^ -o $@

native_clean:
ifeq (,${PERFCTR_PREFIX})
	$(MAKE) -C $(PERFCTR) clean
endif

native_install:
ifeq (,${PERFCTR_PREFIX})
ifeq (${VERSION},2.4.x)
native_install:
	#cp -p $(PERFCTR)/usr.lib/libperfctr.so $(PREFIX)/lib$(LIB_SUFFIX)
	cp -p $(PERFCTR)/usr.lib/event_codes.h $(PREFIX)/include
	cp -p $(PERFCTR)/usr.lib/libperfctr.h  $(PREFIX)/include
else
native_install:
	$(MAKE) -C $(PERFCTR) PREFIX=$(PREFIX) install
endif
endif

native_clobber:
ifeq (,${PFM_PREFIX})
	$(MAKE) -C $(PERFCTR) distclean
endif
