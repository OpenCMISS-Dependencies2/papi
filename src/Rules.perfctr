# $Id$

# File: Rules.perfctr
# Mods: Maynard Johnson
#       maynardj@us.ibm.com

DESCR   = "Linux with PerfCtr $(VERSION) patch and library"
LIBS    = static shared
TARGETS = serial attach multiplex_and_pthreads shared
LIBRARY = libpapi.a
SHLIB   = libpapi.so
SUBSTR  = perfctr-$(CPU)
ARCH	= $(shell uname -m)

ifeq (p4,$(CPU))
TARGETS += p4
endif

ifeq (i686,$(ARCH))
ARCH = i386
endif

ifeq (i586,$(ARCH))
ARCH = i386
endif

ifeq (i486,$(ARCH))
ARCH = i386
endif

#
# GNU G77/GCC section
#

ifeq (x86_64,$(ARCH))
ifeq (32,$(BITS))
BITFLAGS	?= -m32 
else
LIB_SUFFIX	:= 64
endif
MEMSUBSTR	:= linux
endif

ifeq (i386,$(ARCH))
MEMSUBSTR	:= linux
endif

ifeq (ppc,$(ARCH))
CFLAGS 		+= -DPPC32
MEMSUBSTR 	= linux-ppc64
endif

ifeq ($(ARCH),ppc64)
ifeq (32,$(BITS))
BITFLAGS	?= -m32
else
LIB_SUFFIX	:= 64
ifeq (64,$(BITS))
BITFLAGS	?= -m64
endif
endif
CFLAGS 		+= -DPPC64
ARCH_SPEC_EVTS	:= $(ARCH_EVENTS)_map.c
MEMSUBSTR 	= linux-ppc64
endif

CC_R    	:= $(CC) -pthread
CC_SHR		:= $(CC) -fPIC -DPIC -shared -Xlinker "-soname" -Xlinker "libpapi.so" -Xlinker "-rpath" -Xlinker "$(PREFIX)/lib"
GCCVER3		= $(shell gcc -v 2>&1 | grep version | cut -f3 -d" " | grep "^3")
FFLAGS		+= -Wall -ffixed-line-length-132 $(BITFLAGS)
CFLAGS		+= -D_GNU_SOURCE -Wall $(NOTLS) $(BITFLAGS)

ifeq (,$(GCCVER3))
OPTFLAGS	= 
else
GCCVER33	= $(shell gcc -v 2>&1 | tail -n 1 | grep version | cut -f3 -d" " | cut -f2 -d"." | grep "^3")
ifeq (,$(GCCVER33))
OPTFLAGS	= $(GCC3ARGS)
else
OPTFLAGS	= $(GCC3ARGS)
endif
endif

ifneq (,$(XMLFLAG))
LDFLAGS		= -lexpat
CFLAGS		+= -DXML
endif

# 
# Catamount section
# 

ifeq (CATAMOUNT, $(COMPILER))
LIBS    	= static
TARGETS 	= serial
MEMSUBSTR	= linux
FFLAGS		= $(BITFLAGS)
endif

# 
# Portland Group section
# 

ifeq (PGROUP, $(COMPILER))
F77       	= pgf77
CC	  	= pgcc
FFLAGS    	= 
OPTFLAGS  	=
TARGETS	  	+= omp
endif

# 
# Pathscale Group PGF77 section
# 

ifeq (PATHSCALE, $(COMPILER))
F77       	= pathf90
CC	  	= pathcc
CC_R      	= pathcc
FFLAGS    	= 
OPTFLAGS  	=
endif

#
#  Intel compilers
#

ifeq (INTEL, $(COMPILER))
IFCVER7  	= $(shell ifc -V 2>&1 | grep "Version 7")
ifneq (,$(IFCVER7))
F77      	= ifc
LDFLAGS  	= -Vaxlib
else
F77      	= ifort
endif
CC	 	= icc
CC_R	 	= $(CC) -pthread
CC_SHR	 	= $(CC) -fPIC -DPIC -shared -Xlinker "-soname" -Xlinker "libpapi.so" -Xlinker "-rpath" -Xlinker "$(PREFIX)/lib"
OMPCFLGS 	= -openmp
OPTFLAGS 	= -ip
FFLAGS   	= -132
TARGETS	 	+= omp
endif

ifeq (,$(findstring -DDEBUG,$(DEBUGFLAGS)))
ifeq ($(ARCH),ppc64)
#Workaround to gcc bug (see gcc bug #20611)
OPTFLAGS        += -O2 $(DEBUGFLAGS)
else
OPTFLAGS	+= -O3 $(DEBUGFLAGS)
endif
else
OPTFLAGS	+= -g $(DEBUGFLAGS)
endif

FFLAGS        	+= -Dlinux $(FARGS)
TOPTFLAGS	+= -g -O  
FTOPTFLAGS	= $(TOPTFLAGS)

#
# DO NOT TOUCH BELOW HERE UNLESS YOU KNOW WHAT YOU ARE DOING
#

ifeq (,$(PERFCTR_LIB_PATH))
ifeq (,$(PERFCTR_ROOT))
	PERFCTR_ROOT := ./perfctr-$(VERSION)
endif
	PERFCTR_LIB_PATH := $(PERFCTR_ROOT)/usr.lib
endif
ifeq (,$(PERFCTR_INC_PATH))
ifeq (,$(PERFCTR_ROOT))
	PERFCTR_ROOT := ./perfctr-$(VERSION)
endif
	PERFCTR_INC_PATH := $(PERFCTR_ROOT)/usr.lib
	PERFCTR_KINC_PATH := $(PERFCTR_ROOT)/linux/include
else
	PERFCTR_KINC_PATH := $(PERFCTR_INC_PATH)
endif

CFLAGS-2.5.4 := -DPERFCTR25
CFLAGS-2.6.x := -DPERFCTR26
CFLAGS-2.7.x := $(CFLAGS-2.6.x)
CFLAGS += $(EVENTFLAGS) -I$(PERFCTR_INC_PATH) -I$(PERFCTR_KINC_PATH) $(CFLAGS-$(VERSION))

MISCHDRS = perfctr-$(CPU).h
MISCSRCS =  $(CPU)_events.c linux.c $(ARCH_SPEC_EVTS)
SHLIBDEPS = -L$(PERFCTR_LIB_PATH) -lperfctr
PERFCTR_OBJS = $(shell ar t $(PERFCTR_LIB_PATH)/libperfctr.a 2> /dev/null)
ifeq (,$(PERFCTR_OBJS))
$(PERFCTR_LIB_PATH)/libperfctr.a:
ifneq (,${PERFCTR_ROOT})
 ifeq (ppc64,${ARCH})
	$(MAKE) CC='$(CC) $(BITFLAGS)' -C $(PERFCTR_ROOT)
 endif
 ifeq (CATAMOUNT, $(COMPILER))
	$(MAKE) CC='$(CC)' -C $(PERFCTR_ROOT)
 else
  ifeq (x86_64,${ARCH})
   ifeq (32,${BITS})
	$(MAKE) CC='$(CC) $(BITFLAGS)' LD_FLAGS="-melf_i386" ARCH="i386" -C $(PERFCTR_ROOT)
   else
	$(MAKE) -C $(PERFCTR_ROOT)
   endif
  else
	$(MAKE) -C $(PERFCTR_ROOT)
  endif
 endif
else
	@echo '$@ not installed!'; exit 1
endif
	$(MAKE) $(MAKEFLAGS)
endif
MISCOBJS = $(PERFCTR_OBJS) $(MISCSRCS:.c=.o) 

#Dynamic linking loader needs correct version of libperfctr
ifeq ($(VERSION),2.7.x)
	SO_ABIVER=6
else
ifeq ($(VERSION),2.6.x)
	i386_ABIVER=5
	x86_64_ABIVER=6
	ppc_ABIVER=5
	SO_ABIVER=$($(ARCH)_ABIVER)
endif
endif
POST_BUILD = cp $(PERFCTR_LIB_PATH)/libperfctr.so .;ln -fs libperfctr.so libperfctr.so.$(SO_ABIVER)
SPECIAL_REMOVE = rm -f libperfctr.so*

include Makefile.inc

config.h:
	@echo 'Please clobber your build and run ./configure. Direct Makefile access has been deprecated.'

$(PERFCTR_OBJS): $(PERFCTR_LIB_PATH)/libperfctr.a
	ar xv $<
	
$(CPU)_events.o: $(CPU)_events.c $(HEADERS)
	$(CC) $(LIBCFLAGS) $(OPTFLAGS) -c $(CPU)_events.c -o $@

linux.o: linux.c $(HEADERS)
	$(CC) $(LIBCFLAGS) $(OPTFLAGS) -c linux.c -o $@

$(ARCH_EVENTS)_map.o: $(ARCH_EVENTS)_map.c $(HEADERS)
	$(CC) $(LIBCFLAGS) $(OPTFLAGS) -c  $(ARCH_EVENTS)_map.c -o $@

native_clean:
	-rm -f $(MISCOBJS)
ifneq (,${PERFCTR_ROOT})
	$(MAKE) -C $(PERFCTR_ROOT) clean
endif

native_install: 
ifeq ($(ARCH),ppc64)
	-mkdir -p $(DATADIR)
	-chmod go+rx $(DATADIR)
	cp -Rf ./event_data $(DATADIR)
endif
ifneq (,${PERFCTR_ROOT})
ifeq (${VERSION},2.4.x)
	cp -p $(PERFCTR_ROOT)/usr.lib/libperfctr.so $(PREFIX)/lib$(LIB_SUFFIX)
	cp -p $(PERFCTR_ROOT)/usr.lib/event_codes.h $(PREFIX)/include
	cp -p $(PERFCTR_ROOT)/usr.lib/libperfctr.h  $(PREFIX)/include
else
ifeq (x86_64,${ARCH})
ifeq (32,${BITS})
	$(MAKE) -C $(PERFCTR_ROOT) PREFIX=$(PREFIX) BINDIR=$(BINDIR) LIBDIR=$(LIBDIR) INCLDIR=$(INCDIR) ARCH="i386" install
else
	$(MAKE) -C $(PERFCTR_ROOT) PREFIX=$(PREFIX) BINDIR=$(BINDIR) LIBDIR=$(LIBDIR) INCLDIR=$(INCDIR) install
endif
else
	$(MAKE) -C $(PERFCTR_ROOT) PREFIX=$(PREFIX) BINDIR=$(BINDIR) LIBDIR=$(LIBDIR) INCLDIR=$(INCDIR) install
endif
endif
endif

native_clobber:
ifneq (,${PERFCTR_ROOT})
	$(MAKE) -C $(PERFCTR_ROOT) distclean
endif
