--- linux-2.6.6-perfctr/CREDITS.~1~	2004-05-10 11:14:35.000000000 +0200
+++ linux-2.6.6-perfctr/CREDITS	2004-05-10 11:40:56.000000000 +0200
@@ -2527,6 +2527,7 @@
 E: mikpe@csd.uu.se
 W: http://www.csd.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.6.6-perfctr/Documentation/ioctl-number.txt.~1~	2004-03-11 14:01:25.000000000 +0100
+++ linux-2.6.6-perfctr/Documentation/ioctl-number.txt	2004-05-10 11:40:56.000000000 +0200
@@ -187,5 +187,7 @@
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	see drivers/perfctr/
+					<mailto:mikpe@csd.uu.se>
 0xDD	00-3F	ZFCP device driver	see drivers/s390/scsi/
 					<mailto:aherrman@de.ibm.com>
--- linux-2.6.6-perfctr/MAINTAINERS.~1~	2004-05-10 11:14:35.000000000 +0200
+++ linux-2.6.6-perfctr/MAINTAINERS	2004-05-10 11:40:56.000000000 +0200
@@ -1619,6 +1619,12 @@
 L:	linux-net@vger.kernel.org
 S:	Supported
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PNP SUPPORT
 P:	Adam Belay
 M:	ambx1@neo.rr.com
--- linux-2.6.6-perfctr/arch/i386/Kconfig.~1~	2004-05-10 11:14:35.000000000 +0200
+++ linux-2.6.6-perfctr/arch/i386/Kconfig	2004-05-10 11:40:56.000000000 +0200
@@ -851,6 +851,8 @@
 	generate incorrect output with certain kernel constructs when
 	-mregparm=3 is used.
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 
--- linux-2.6.6-perfctr/arch/i386/kernel/entry.S.~1~	2004-05-10 11:14:35.000000000 +0200
+++ linux-2.6.6-perfctr/arch/i386/kernel/entry.S	2004-05-10 11:40:56.000000000 +0200
@@ -412,6 +412,16 @@
 /* The include is where all of the SMP etc. interrupts come from */
 #include "entry_arch.h"
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	pushl $LOCAL_PERFCTR_VECTOR-256
+	SAVE_ALL
+	pushl %esp
+	call smp_perfctr_interrupt
+	addl $4, %esp
+	jmp ret_from_intr
+#endif
+
 ENTRY(divide_error)
 	pushl $0			# no error code
 	pushl $do_divide_error
--- linux-2.6.6-perfctr/arch/i386/kernel/i8259.c.~1~	2004-05-10 11:14:35.000000000 +0200
+++ linux-2.6.6-perfctr/arch/i386/kernel/i8259.c	2004-05-10 11:40:56.000000000 +0200
@@ -23,6 +23,7 @@
 #include <asm/apic.h>
 #include <asm/arch_hooks.h>
 #include <asm/i8259.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -432,6 +433,8 @@
 	 */
 	intr_init_hook();
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.6.6-perfctr/arch/i386/kernel/process.c.~1~	2004-05-10 11:14:35.000000000 +0200
+++ linux-2.6.6-perfctr/arch/i386/kernel/process.c	2004-05-10 11:40:56.000000000 +0200
@@ -32,6 +32,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
@@ -300,6 +301,7 @@
 		tss->io_bitmap_base = INVALID_IO_BITMAP_OFFSET;
 		put_cpu();
 	}
+	perfctr_exit_thread(&tsk->thread);
 }
 
 void flush_thread(void)
@@ -362,6 +364,8 @@
 	savesegment(fs,p->thread.fs);
 	savesegment(gs,p->thread.gs);
 
+	perfctr_copy_thread(&p->thread);
+
 	tsk = current;
 	if (unlikely(NULL != tsk->thread.io_bitmap_ptr)) {
 		p->thread.io_bitmap_ptr = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
@@ -507,6 +511,8 @@
 
 	/* never put a printk in __switch_to... printk() calls wake_up*() indirectly */
 
+	perfctr_suspend_thread(prev);
+
 	__unlazy_fpu(prev_p);
 
 	/*
@@ -569,6 +575,9 @@
 			 */
 			tss->io_bitmap_base = INVALID_IO_BITMAP_OFFSET;
 	}
+
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.6-perfctr/arch/ppc/Kconfig.~1~	2004-05-10 11:14:36.000000000 +0200
+++ linux-2.6.6-perfctr/arch/ppc/Kconfig	2004-05-10 11:40:56.000000000 +0200
@@ -214,6 +214,8 @@
 	depends on 4xx || 8xx
 	default y
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 menu "Platform options"
--- linux-2.6.6-perfctr/arch/ppc/kernel/process.c.~1~	2004-05-10 11:14:36.000000000 +0200
+++ linux-2.6.6-perfctr/arch/ppc/kernel/process.c	2004-05-10 11:40:56.000000000 +0200
@@ -35,6 +35,7 @@
 #include <linux/init_task.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
+#include <linux/perfctr.h>
 
 #include <asm/pgtable.h>
 #include <asm/uaccess.h>
@@ -253,7 +254,9 @@
 		new->thread.regs->msr |= MSR_VEC;
 	new_thread = &new->thread;
 	old_thread = &current->thread;
+	perfctr_suspend_thread(&prev->thread);
 	last = _switch(old_thread, new_thread);
+	perfctr_resume_thread(&current->thread);
 	local_irq_restore(s);
 	return last;
 }
@@ -322,6 +325,7 @@
 		last_task_used_math = NULL;
 	if (last_task_used_altivec == current)
 		last_task_used_altivec = NULL;
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -408,6 +412,8 @@
 
 	p->thread.last_syscall = -1;
 
+	perfctr_copy_thread(&p->thread);
+
 	return 0;
 }
 
--- linux-2.6.6-perfctr/arch/x86_64/Kconfig.~1~	2004-05-10 11:14:36.000000000 +0200
+++ linux-2.6.6-perfctr/arch/x86_64/Kconfig	2004-05-10 11:40:56.000000000 +0200
@@ -309,6 +309,8 @@
 	bool
 	default y
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 
--- linux-2.6.6-perfctr/arch/x86_64/kernel/entry.S.~1~	2004-05-10 11:14:36.000000000 +0200
+++ linux-2.6.6-perfctr/arch/x86_64/kernel/entry.S	2004-05-10 11:40:56.000000000 +0200
@@ -557,6 +557,11 @@
 	apicinterrupt SPURIOUS_APIC_VECTOR,smp_spurious_interrupt
 #endif
 				
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	apicinterrupt LOCAL_PERFCTR_VECTOR,smp_perfctr_interrupt
+#endif
+ 		
 /*
  * Exception entry points.
  */ 		
--- linux-2.6.6-perfctr/arch/x86_64/kernel/i8259.c.~1~	2004-05-10 11:14:36.000000000 +0200
+++ linux-2.6.6-perfctr/arch/x86_64/kernel/i8259.c	2004-05-10 11:40:56.000000000 +0200
@@ -24,6 +24,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -485,6 +486,8 @@
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.6.6-perfctr/arch/x86_64/kernel/process.c.~1~	2004-05-10 11:14:36.000000000 +0200
+++ linux-2.6.6-perfctr/arch/x86_64/kernel/process.c	2004-05-10 11:40:56.000000000 +0200
@@ -32,6 +32,7 @@
 #include <linux/delay.h>
 #include <linux/irq.h>
 #include <linux/ptrace.h>
+#include <linux/perfctr.h>
 #include <linux/version.h>
 
 #include <asm/uaccess.h>
@@ -262,6 +263,7 @@
 		tss->io_bitmap_base = INVALID_IO_BITMAP_OFFSET;
 		put_cpu();
 	}
+	perfctr_exit_thread(&me->thread);
 }
 
 void flush_thread(void)
@@ -365,6 +367,8 @@
 	asm("movl %%es,%0" : "=m" (p->thread.es));
 	asm("movl %%ds,%0" : "=m" (p->thread.ds));
 
+	perfctr_copy_thread(&p->thread);
+
 	if (unlikely(me->thread.io_bitmap_ptr != NULL)) { 
 		p->thread.io_bitmap_ptr = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
 		if (!p->thread.io_bitmap_ptr) 
@@ -411,6 +415,8 @@
 	int cpu = smp_processor_id();  
 	struct tss_struct *tss = init_tss + cpu;
 
+	perfctr_suspend_thread(prev);
+
 	unlazy_fpu(prev_p);
 
 	/*
@@ -514,6 +520,8 @@
 		}
 	}
 
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.6-perfctr/drivers/Makefile.~1~	2004-04-04 13:49:10.000000000 +0200
+++ linux-2.6.6-perfctr/drivers/Makefile	2004-05-10 11:40:56.000000000 +0200
@@ -49,4 +49,5 @@
 obj-$(CONFIG_MCA)		+= mca/
 obj-$(CONFIG_EISA)		+= eisa/
 obj-$(CONFIG_CPU_FREQ)		+= cpufreq/
+obj-$(CONFIG_KPERFCTR)		+= perfctr/
 obj-y				+= firmware/
--- linux-2.6.6-perfctr/include/asm-i386/mach-default/irq_vectors.h.~1~	2004-05-10 11:14:37.000000000 +0200
+++ linux-2.6.6-perfctr/include/asm-i386/mach-default/irq_vectors.h	2004-05-10 11:40:56.000000000 +0200
@@ -56,14 +56,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.6-perfctr/include/asm-i386/mach-pc9800/irq_vectors.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.6-perfctr/include/asm-i386/mach-pc9800/irq_vectors.h	2004-05-10 11:40:56.000000000 +0200
@@ -59,14 +59,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.6-perfctr/include/asm-i386/mach-visws/irq_vectors.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.6-perfctr/include/asm-i386/mach-visws/irq_vectors.h	2004-05-10 11:40:56.000000000 +0200
@@ -35,14 +35,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.6-perfctr/include/asm-i386/processor.h.~1~	2004-05-10 11:14:37.000000000 +0200
+++ linux-2.6.6-perfctr/include/asm-i386/processor.h	2004-05-10 11:40:56.000000000 +0200
@@ -427,6 +427,8 @@
 	unsigned int		saved_fs, saved_gs;
 /* IO permissions */
 	unsigned long	*io_bitmap_ptr;
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {							\
--- linux-2.6.6-perfctr/include/asm-ppc/processor.h.~1~	2004-05-10 11:14:37.000000000 +0200
+++ linux-2.6.6-perfctr/include/asm-ppc/processor.h	2004-05-10 11:40:56.000000000 +0200
@@ -119,6 +119,7 @@
 	unsigned long	vrsave;
 	int		used_vr;	/* set if process has used altivec */
 #endif /* CONFIG_ALTIVEC */
+	struct vperfctr *perfctr;	/* performance counters */
 };
 
 #define ARCH_MIN_TASKALIGN 16
--- linux-2.6.6-perfctr/include/asm-x86_64/hw_irq.h.~1~	2004-02-18 11:09:53.000000000 +0100
+++ linux-2.6.6-perfctr/include/asm-x86_64/hw_irq.h	2004-05-10 11:40:56.000000000 +0200
@@ -65,14 +65,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in irq.h */
+#define FIRST_SYSTEM_VECTOR	0xee   /* duplicated in irq.h */
 
 
 #ifndef __ASSEMBLY__
--- linux-2.6.6-perfctr/include/asm-x86_64/irq.h.~1~	2004-05-10 11:14:37.000000000 +0200
+++ linux-2.6.6-perfctr/include/asm-x86_64/irq.h	2004-05-10 11:40:56.000000000 +0200
@@ -29,7 +29,7 @@
  */
 #define NR_VECTORS 256
 
-#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in hw_irq.h */
+#define FIRST_SYSTEM_VECTOR	0xee   /* duplicated in hw_irq.h */
 
 #ifdef CONFIG_PCI_USE_VECTOR
 #define NR_IRQS FIRST_SYSTEM_VECTOR
--- linux-2.6.6-perfctr/include/asm-x86_64/processor.h.~1~	2004-05-10 11:14:37.000000000 +0200
+++ linux-2.6.6-perfctr/include/asm-x86_64/processor.h	2004-05-10 11:40:56.000000000 +0200
@@ -253,6 +253,8 @@
 	unsigned long	*io_bitmap_ptr;
 /* cached TLS descriptors. */
 	u64 tls_array[GDT_ENTRY_TLS_ENTRIES];
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {}
--- linux-2.6.6-perfctr/kernel/sched.c.~1~	2004-05-10 11:14:37.000000000 +0200
+++ linux-2.6.6-perfctr/kernel/sched.c	2004-05-10 11:40:56.000000000 +0200
@@ -38,6 +38,7 @@
 #include <linux/rcupdate.h>
 #include <linux/cpu.h>
 #include <linux/percpu.h>
+#include <linux/perfctr.h>
 #include <linux/kthread.h>
 
 #ifdef CONFIG_NUMA
@@ -2726,6 +2727,8 @@
 	migration_req_t req;
 	runqueue_t *rq;
 
+	perfctr_set_cpus_allowed(p, new_mask);
+
 	rq = task_rq_lock(p, &flags);
 	if (any_online_cpu(new_mask) == NR_CPUS) {
 		ret = -EINVAL;
--- linux-2.6.6-perfctr/kernel/timer.c.~1~	2004-05-10 11:14:37.000000000 +0200
+++ linux-2.6.6-perfctr/kernel/timer.c	2004-05-10 11:40:56.000000000 +0200
@@ -31,6 +31,7 @@
 #include <linux/time.h>
 #include <linux/jiffies.h>
 #include <linux/cpu.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/div64.h>
@@ -800,6 +801,7 @@
 	do_process_times(p, user, system);
 	do_it_virt(p, user);
 	do_it_prof(p);
+	perfctr_sample_thread(&p->thread);
 }	
 
 /*
