--- linux-2.4.22-1.2179.nptl-perfctr/CREDITS.~1~	2004-04-13 15:49:45.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/CREDITS	2004-04-22 17:48:40.000000000 +0200
@@ -2409,6 +2409,7 @@
 E: mikpe@csd.uu.se
 W: http://www.csd.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.4.22-1.2179.nptl-perfctr/Documentation/Configure.help.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/Documentation/Configure.help	2004-04-22 17:48:40.000000000 +0200
@@ -4570,6 +4570,65 @@
 
   If unsure, say N.
 
+Performance-monitoring counters support
+CONFIG_PERFCTR
+  This driver provides access to the performance-monitoring counter
+  registers available in some (but not all) modern processors.
+  These special-purpose registers can be programmed to count low-level
+  performance-related events which occur during program execution,
+  such as cache misses, pipeline stalls, etc.
+
+  You can safely say Y here, even if you intend to run the kernel
+  on a processor without performance-monitoring counters.
+
+  You can also say M here to compile the driver as a module; the
+  module will be called `perfctr.o'.
+
+Additional internal consistency checks
+CONFIG_PERFCTR_DEBUG
+  This option enables additional internal consistency checking in
+  the perfctr driver. The scope of these checks is unspecified and
+  may vary between different versions of the driver.
+
+  Enabling this option will reduce performance, so say N unless you
+  are debugging the driver.
+
+Init-time hardware tests
+CONFIG_PERFCTR_INIT_TESTS
+  This option makes the driver perform additional hardware tests
+  during initialisation, and log their results in the kernel's
+  message buffer. For most supported processors, these tests simply
+  measure the runtime overheads of performance counter operations.
+
+  If you have a less well-known processor (one not listed in the
+  etc/costs/ directory in the user-space package), you should enable
+  this option and email the results to the perfctr developers.
+
+  If unsure, say N.
+
+Virtual performance counters support
+CONFIG_PERFCTR_VIRTUAL
+  The processor's performance-monitoring counters are special-purpose
+  global registers. This option adds support for virtual per-process
+  performance-monitoring counters which only run when the process
+  to which they belong is executing. This improves the accuracy of
+  performance measurements by reducing "noise" from other processes.
+
+  Say Y.
+
+Global performance counters support
+CONFIG_PERFCTR_GLOBAL
+  This option adds driver support for global-mode (system-wide)
+  performance-monitoring counters. In this mode, the driver allows
+  each performance-monitoring counter on each processor to be
+  controlled and read. The driver provides a sampling timer to
+  maintain 64-bit accumulated event counts.
+
+  Global-mode performance counters cannot be used if some process
+  is currently using virtual-mode performance counters, and vice versa.
+
+  Say Y.
+
 VGA text console
 CONFIG_VGA_CONSOLE
   Saying Y here will allow you to use Linux in text mode through a
--- linux-2.4.22-1.2179.nptl-perfctr/Documentation/ioctl-number.txt.~1~	2001-07-12 01:35:37.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/Documentation/ioctl-number.txt	2004-04-22 17:48:40.000000000 +0200
@@ -187,5 +187,7 @@
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	in development:
+					<mailto:mikpe@csd.uu.se>
 
 0xFE	00-9F	Logical Volume Manager	<mailto:linux-lvm@sistina.com>
--- linux-2.4.22-1.2179.nptl-perfctr/MAINTAINERS.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/MAINTAINERS	2004-04-22 17:48:40.000000000 +0200
@@ -1437,6 +1437,12 @@
 L:	linux-net@vger.kernel.org
 S:	Maintained
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PERMEDIA 3 FRAMEBUFFER DRIVER
 P:	Romain Dolbeau
 M:	dolbeau@irisa.fr
--- linux-2.4.22-1.2179.nptl-perfctr/Makefile.~1~	2004-04-13 15:55:36.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/Makefile	2004-04-22 17:48:40.000000000 +0200
@@ -206,6 +206,7 @@
 DRIVERS-$(CONFIG_CRYPTO) += crypto/crypto.o
 
 DRIVERS-$(CONFIG_SENSORS) += drivers/sensors/sensor.o
+DRIVERS-$(CONFIG_KPERFCTR) += drivers/perfctr/kperfctr.o
 DRIVERS := $(DRIVERS-y)
 
 
--- linux-2.4.22-1.2179.nptl-perfctr/arch/i386/config.in.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/arch/i386/config.in	2004-04-22 17:48:40.000000000 +0200
@@ -301,6 +301,9 @@
 if [ "$CONFIG_SMP" = "y" -a "$CONFIG_X86_CMPXCHG" = "y" ]; then
    define_bool CONFIG_HAVE_DEC_LOCK y
 fi
+
+source drivers/perfctr/Config.in
+
 endmenu
 
 mainmenu_option next_comment
--- linux-2.4.22-1.2179.nptl-perfctr/arch/i386/kernel/i8259.c.~1~	2001-09-18 08:03:09.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/arch/i386/kernel/i8259.c	2004-04-22 17:48:40.000000000 +0200
@@ -21,6 +21,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -95,6 +96,9 @@
 BUILD_SMP_TIMER_INTERRUPT(apic_timer_interrupt,LOCAL_TIMER_VECTOR)
 BUILD_SMP_INTERRUPT(error_interrupt,ERROR_APIC_VECTOR)
 BUILD_SMP_INTERRUPT(spurious_interrupt,SPURIOUS_APIC_VECTOR)
+#ifdef CONFIG_KPERFCTR
+BUILD_SMP_TIMER_INTERRUPT(perfctr_interrupt,LOCAL_PERFCTR_VECTOR)
+#endif
 #endif
 
 #define IRQ(x,y) \
@@ -489,6 +493,8 @@
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.4.22-1.2179.nptl-perfctr/arch/i386/kernel/process.c.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/arch/i386/kernel/process.c	2004-04-22 17:48:40.000000000 +0200
@@ -33,6 +33,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 #include <linux/mman.h>
 #include <linux/random.h>
@@ -535,7 +536,7 @@
  */
 void exit_thread(void)
 {
-	/* nothing to do ... */
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -592,6 +593,8 @@
 	savesegment(fs,p->thread.fs);
 	savesegment(gs,p->thread.gs);
 
+	perfctr_copy_thread(&p->thread);
+
 	tsk = current;
 	unlazy_fpu(tsk);
 	struct_cpy(&p->thread.i387, &tsk->thread.i387);
@@ -721,6 +724,8 @@
 
 	/* never put a printk in __switch_to... printk() calls wake_up*() indirectly */
 
+	perfctr_suspend_thread(prev);
+
 	unlazy_fpu(prev_p);
 	if (next_p->mm)
 		load_user_cs_desc(cpu, next_p->mm);
@@ -784,6 +789,9 @@
 			 */
 			tss->bitmap = INVALID_IO_BITMAP_OFFSET;
 	}
+
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/config.in.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/config.in	2004-04-22 17:48:40.000000000 +0200
@@ -77,6 +77,8 @@
    fi
 fi
 
+source drivers/perfctr/Config.in
+
 endmenu
 
 mainmenu_option next_comment
--- linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/kernel/entry.S.~1~	2004-04-13 15:49:55.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/kernel/entry.S	2004-04-22 17:48:40.000000000 +0200
@@ -419,6 +419,9 @@
 	BUILD_SMP_INTERRUPT spurious_interrupt,SPURIOUS_APIC_VECTOR
 #endif
 		
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+	BUILD_SMP_INTERRUPT perfctr_interrupt,LOCAL_PERFCTR_VECTOR
+#endif
 		
 /*
  * Exception entry points.
--- linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/kernel/i8259.c.~1~	2003-06-13 16:51:32.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/kernel/i8259.c	2004-04-22 17:48:40.000000000 +0200
@@ -23,6 +23,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -438,6 +439,8 @@
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+	perfctr_vector_init();
+
 #ifndef CONFIG_VISWS
 	setup_irq(2, &irq2);
 #endif
--- linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/kernel/process.c.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/arch/x86_64/kernel/process.c	2004-04-22 17:48:40.000000000 +0200
@@ -40,6 +40,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/ctype.h>
 #include <linux/slab.h>
 
@@ -386,6 +387,7 @@
 		kfree(me->thread.io_bitmap_ptr); 
 		me->thread.io_bitmap_ptr = NULL; 		
 	} 
+	perfctr_exit_thread(&me->thread);
 }
 
 void flush_thread(void)
@@ -566,6 +568,8 @@
 	asm("movl %%es,%0" : "=m" (p->thread.es));
 	asm("movl %%ds,%0" : "=m" (p->thread.ds));
 
+	perfctr_copy_thread(&p->thread);
+
 	unlazy_fpu(current);	
 	p->thread.i387 = current->thread.i387;
 
@@ -636,6 +640,8 @@
 
 	/* never put a printk in __switch_to... printk() calls wake_up*() indirectly */
 
+	perfctr_suspend_thread(prev);
+
 	unlazy_fpu(prev_p);
 
 	/*
@@ -742,6 +748,7 @@
 		}
 	}
 
+	perfctr_resume_thread(next);
 
 	return prev_p;
 }
--- linux-2.4.22-1.2179.nptl-perfctr/drivers/Makefile.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/drivers/Makefile	2004-04-22 17:48:40.000000000 +0200
@@ -50,4 +50,7 @@
 
 subdir-$(CONFIG_BLUEZ)		+= bluetooth
 
+mod-subdirs += perfctr
+subdir-$(CONFIG_KPERFCTR)	+= perfctr
+
 include $(TOPDIR)/Rules.make
--- linux-2.4.22-1.2179.nptl-perfctr/include/asm-i386/apic.h.~1~	2004-04-13 15:50:15.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/include/asm-i386/apic.h	2004-04-22 17:48:40.000000000 +0200
@@ -94,6 +94,9 @@
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern struct pm_dev *nmi_pmdev;
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 extern int phys_proc_id[NR_CPUS];
--- linux-2.4.22-1.2179.nptl-perfctr/include/asm-i386/hw_irq.h.~1~	2004-04-13 15:50:15.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/include/asm-i386/hw_irq.h	2004-04-22 17:48:40.000000000 +0200
@@ -50,14 +50,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 extern int irq_vector[NR_IRQS];
 #define IO_APIC_VECTOR(irq)	irq_vector[irq]
--- linux-2.4.22-1.2179.nptl-perfctr/include/asm-i386/processor.h.~1~	2004-04-13 15:50:15.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/include/asm-i386/processor.h	2004-04-22 17:48:40.000000000 +0200
@@ -393,6 +393,8 @@
 /* IO permissions */
 	int		ioperm;
 	unsigned long	io_bitmap[IO_BITMAP_SIZE+1];
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {						\
--- linux-2.4.22-1.2179.nptl-perfctr/include/asm-x86_64/apic.h.~1~	2003-06-13 16:51:38.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/include/asm-x86_64/apic.h	2004-04-22 17:48:40.000000000 +0200
@@ -96,6 +96,9 @@
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern struct pm_dev *nmi_pmdev;
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 #define clustered_apic_mode 0
--- linux-2.4.22-1.2179.nptl-perfctr/include/asm-x86_64/hw_irq.h.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/include/asm-x86_64/hw_irq.h	2004-04-22 17:48:40.000000000 +0200
@@ -60,14 +60,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #ifndef __ASSEMBLY__
 extern int irq_vector[NR_IRQS];
--- linux-2.4.22-1.2179.nptl-perfctr/include/asm-x86_64/processor.h.~1~	2004-04-13 15:49:55.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/include/asm-x86_64/processor.h	2004-04-22 17:48:40.000000000 +0200
@@ -329,6 +329,8 @@
 /* floating point info */
 	union i387_union	i387;
 	u32	*io_bitmap_ptr;
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {						\
--- linux-2.4.22-1.2179.nptl-perfctr/include/linux/config.h.~1~	2004-04-13 15:50:15.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/include/linux/config.h	2004-04-22 17:48:40.000000000 +0200
@@ -3,4 +3,8 @@
 
 #include <linux/autoconf.h>
 
+/* describe relevant differences from the base kernel */
+#define HAVE_SET_CPUS_ALLOWED 1
+#define HAVE_CPUMASK_T 1
+
 #endif
--- linux-2.4.22-1.2179.nptl-perfctr/kernel/sched.c.~1~	2004-04-13 15:49:55.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/kernel/sched.c	2004-04-22 17:48:40.000000000 +0200
@@ -31,6 +31,7 @@
 #include <linux/blkdev.h>
 #include <linux/delay.h>
 #include <linux/timer.h>
+#include <linux/perfctr.h>
 
 #ifdef CONFIG_NUMA
 #define cpu_to_node_mask(cpu) node_to_cpumask(cpu_to_node(cpu))
@@ -2748,6 +2749,8 @@
 	if (!new_mask)
 		return -EINVAL;
 
+	perfctr_set_cpus_allowed(p, new_mask);
+
 	rq = task_rq_lock(p, &flags);
 	p->cpus_allowed = new_mask;
 	/*
--- linux-2.4.22-1.2179.nptl-perfctr/kernel/timer.c.~1~	2004-04-13 15:49:57.000000000 +0200
+++ linux-2.4.22-1.2179.nptl-perfctr/kernel/timer.c	2004-04-22 17:48:40.000000000 +0200
@@ -22,6 +22,7 @@
 #include <linux/smp_lock.h>
 #include <linux/interrupt.h>
 #include <linux/kernel_stat.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 
@@ -586,6 +587,7 @@
 	do_process_times(p, user, system);
 	do_it_virt(p, user);
 	do_it_prof(p);
+	perfctr_sample_thread(&p->thread);
 }	
 
 /*
