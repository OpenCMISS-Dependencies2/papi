/* Perfctr Definition */

#define FAST_RDPMC (1 << 31)

/* Definitions from IA32 Intel Arch. SW. Dev. Man. V3: Appendix A, Table A-1 */

/* Non-retirement events */

#define BR_RET_ESCR 0x6
#define BR_RET_ESCR_MASK_NT_PR 0x1
#define BR_RET_ESCR_MASK_NT_MPR 0x2
#define BR_RET_ESCR_MASK_T_PR 0x4
#define BR_RET_ESCR_MASK_T_MPR 0x8
#define BR_RET_CCCR 0x5
/* ESCR2: 12, 13, 16
   ESCR3: 14, 15, 17 */

#define MPR_BR_RET_ESCR 0x3
#define MPR_BR_RET_ESCR_MASK_NBOGUS 0x1
#define MPR_BR_RET_CCCR 0x4
/* ESCR0: 12, 13, 16
   ESCR1: 14, 15, 17 */

#define TC_DLVR_ESCR 0x1
#define TC_DLVR_ESCR_MASK_DLVR 0x4
#define TC_DLVR_ESCR_MASK_BUILD 0x20
#define TC_DLVR_CCCR 0x1
/* ESCR0: 4, 5
   ESCR1: 6, 7 */

#define BPU_FETCH_RQST_ESCR 0x3
#define BPU_FETCH_RQST_ESCR_MASK_TCMISS 0x1
#define BPU_FETCH_RQST_CCCR 0x0
/* ESCR0: 0, 1
   ESCR1: 2, 3 */

#define ITLB_REF_ESCR 0x18
#define ITLB_REF_ESCR_MASK_HIT 0x1
#define ITLB_REF_ESCR_MASK_MISS 0x2
#define ITLB_REF_ESCR_MASK_UCHIT 0x4
#define ITLB_REF_CCCR 0x03
/* ESCR0: 0, 1
   ESCR1: 2, 3 */

#define MEM_CANCEL_ESCR 0x2
#define MEM_CANCEL_ESCR_MASK_ST_RB_FULL 0x4
#define MEM_CANCEL_ESCR_MASK_64K_CONF 0x8
#define MEM_CANCEL_CCCR 0x5
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define MEM_CMPL_ESCR 0x8
#define MEM_CMPL_ESCR_MASK_LSC 0x1
#define MEM_CMPL_ESCR_MASK_SSC 0x2
#define MEM_CMPL_CCCR 0x2
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define LDPRT_RPL_ESCR 0x4
#define LDPRT_RPL_ESCR_MASK_SPLIT_LD 0x2
#define LDPRT_RPL_CCCR 0x2
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define SRPRT_RPL_ESCR 0x4
#define SRPRT_RPL_ESCR_MASK_SPLIT_SR 0x2
#define SRPRT_RPL_CCCR 0x2

#define MOB_LD_RPL_ESCR 0x3
#define MOB_LD_RPL_ESCR_MASK_NO_STA 0x2
#define MOB_LD_RPL_ESCR_MASK_NO_STD 0x8
#define MOB_LD_RPL_ESCR_MASK_PARTIAL_DATA 0x10
#define MOB_LD_RPL_ESCR_MASK_UNALGN_ADDR 0x20
#define MOB_LD_RPL_CCCR 0x2
/* ESCR0: 0, 1
   ESCR1: 2, 3 */

#define PG_WLK_ESCR 0x1
#define PG_WLK_ESCR_MASK_DTMISS 0x1
#define PG_WLK_ESCR_MASK_ITMISS 0x2
#define PG_WLK_CCCR 0x4
/* ESCR0: 0, 1
   ESCR1: 2, 3 */

#define BSQ_CREF_ESCR 0xc
#define BSQ_CREF_ESCR_MASK_2L_HT_SHR 0x1
#define BSQ_CREF_ESCR_MASK_2L_HT_EXC 0x2
#define BSQ_CREF_ESCR_MASK_2L_HT_MOD 0x4
#define BSQ_CREF_ESCR_MASK_2L_RD_MISS 0x100
#define BSQ_CREF_ESCR_MASK_2L_WR_MISS 0x400
#define BSQ_CREF_CCCR 0x7
/* ESCR0: 0, 1
   ESCR1: 2, 3 */

#define IOQ_ALLOC_ESCR 0x3
#define IOQ_ALLOC_ESCR_MASK_ALL_READ 0x20
#define IOQ_ALLOC_ESCR_MASK_ALL_WRITE 0x40
#define IOQ_ALLOC_ESCR_MASK_MEM_UC 0x80
#define IOQ_ALLOC_ESCR_MASK_MEM_WC 0x100
#define IOQ_ALLOC_ESCR_MASK_OWN 0x2000
#define IOQ_ALLOC_ESCR_MASK_OTHER 0x4000
#define IOQ_ALLOC_ESCR_MASK_PREFETCH 0x8000
#define IOQ_ALLOC_CCCR 0x6
/* ESCR0: 0, 1 */

#define FSB_DATA_ESCR 0x17
#define FSB_DATA_ESCR_MASK_DRDY_DRV 0x1
#define FSB_DATA_ESCR_MASK_DRDY_OWN 0x2
#define FSB_DATA_ESCR_MASK_DRDY_OTHER 0x4
#define FSB_DATA_ESCR_MASK_DBSY_DRV 0x8
#define FSB_DATA_ESCR_MASK_DBSY_OWN 0x10
#define FSB_DATA_ESCR_MASK_DBSY_OTHER 0x20
#define FSB_DATA_CCCR 0x6
/* ESCR0: 0, 1
   ESCR1: 2, 3 */

#define BSQ_ALLOC_ESCR 0x5
#define BSQ_ALLOC_ESCR_MASK_RQ_TYPE0 0x1
#define BSQ_ALLOC_ESCR_MASK_RQ_TYPE1 0x2
#define BSQ_ALLOC_ESCR_MASK_RQ_LEN0 0x4
#define BSQ_ALLOC_ESCR_MASK_RQ_LEN1 0x8
#define BSQ_ALLOC_ESCR_MASK_RQ_IO_TYPE 0x20
#define BSQ_ALLOC_ESCR_MASK_RQ_LOCK_TYPE 0x40
#define BSQ_ALLOC_ESCR_MASK_RQ_CACHE_TYPE 0x80
#define BSQ_ALLOC_ESCR_MASK_RQ_SPLIT_TYPE 0x100
#define BSQ_ALLOC_ESCR_MASK_RQ_DEM_TYPE 0x200
#define BSQ_ALLOC_ESCR_MASK_RQ_ORD_TYPE 0x400
#define BSQ_ALLOC_ESCR_MASK_MEM_TYPE0 0x800
#define BSQ_ALLOC_ESCR_MASK_MEM_TYPE1 0x1000
#define BSQ_ALLOC_ESCR_MASK_MEM_TYPE2 0x2000
#define BSQ_ALLOC_CCCR 0x7
/* ESCR0: 0, 1 */

#define X87_ASSIST_ESCR 0x3
#define X87_ASSIST_ESCR_MASK_FPSU 0x1
#define X87_ASSIST_ESCR_MASK_FPSO 0x2
#define X87_ASSIST_ESCR_MASK_POAO 0x4
#define X87_ASSIST_ESCR_MASK_POAU 0x8
#define X87_ASSIST_ESCR_MASK_PREA 0x10
#define X87_ASSIST_CCCR 0x5
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

#define SSE_ASSIST_ESCR 0x34
#define SSE_ASSIST_ESCR_MASK_ALL 0x8000
#define SSE_ASSIST_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define PACKED_SP_UOP_ESCR 0x8
#define PACKED_SP_UOP_ESCR_MASK_ALL 0x8000
#define PACKED_SP_UOP_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define PACKED_DP_UOP_ESCR 0xC
#define PACKED_DP_UOP_ESCR_MASK_ALL 0x8000
#define PACKED_DP_UOP_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define SCALAR_SP_UOP_ESCR 0xA
#define SCALAR_SP_UOP_ESCR_MASK_ALL 0x8000
#define SCALAR_SP_UOP_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define SCALAR_DP_UOP_ESCR 0xE
#define SCALAR_DP_UOP_ESCR_MASK_ALL 0x8000
#define SCALAR_DP_UOP_CCCR 0x1
/* ESCR0: 8, 9
   USER1: 10, 11 */

#define MMX_64_UOP_ESCR 0x2
#define MMX_64_UOP_ESCR_MASK_ALL 0x8000
#define MMX_64_UOP_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define MMX_128_UOP_ESCR 0x1A
#define MMX_128_UOP_ESCR_MASK_ALL 0x8000
#define MMX_128_UOP_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define X87_FP_UOP_ESCR 0x4
#define X87_FP_UOP_ESCR_MASK_ALL 0x8000
#define X87_FP_UOP_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define X87_SIMD_UOP_ESCR 0x2E
#define X87_SIMD_UOP_ESCR_MASK_ALLP0 0x8
#define X87_SIMD_UOP_ESCR_MASK_ALLP2 0x10
#define X87_SIMD_UOP_CCCR 0x1
/* ESCR0: 8, 9
   ESCR1: 10, 11 */

#define MACHINE_CLEAR_ESCR 0x2
#define MACHINE_CLEAR_ESCR_MASK_CLEAR 0x1
#define MACHINE_CLEAR_ESCR_MASK_MOCLEAR 0x4
#define MACHINE_CLEAR_ESCR_MASK_SMCLEAR 0x8
#define MACHINE_CLEAR_CCCR 0x5
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

/* At-retirement events */

#define FRONT_END_ESCR 0x8
#define FRONT_END_ESCR_MASK_NBOGUS 0x1
#define FRONT_END_ESCR_MASK_BOGUS 0x2
#define FRONT_END_CCCR 0x5
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

#define EXECUTION_ESCR 0xC
#define EXECUTION_ESCR_MASK_NBOGUS0 0x1
#define EXECUTION_ESCR_MASK_NBOGUS1 0x2
#define EXECUTION_ESCR_MASK_NBOGUS2 0x4
#define EXECUTION_ESCR_MASK_NBOGUS3 0x8
#define EXECUTION_ESCR_MASK_BOGUS0 0x10
#define EXECUTION_ESCR_MASK_BOGUS1 0x20
#define EXECUTION_ESCR_MASK_BOGUS2 0x40
#define EXECUTION_ESCR_MASK_BOGUS3 0x80
#define EXECUTION_CCCR 0x5
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

#define REPLAY_ESCR 0x9
#define REPLAY_ESCR_MASK_NBOGUS 0x1
#define REPLAY_ESCR_MASK_BOGUS 0x2
#define REPLAY_CCCR 0x5
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

#define INSTR_RET_ESCR 0x2
#define INSTR_RET_ESCR_MASK_NBOGUSNTAG 0x1
#define INSTR_RET_ESCR_MASK_NBOGUSTAG 0x2
#define INSTR_RET_ESCR_MASK_BOGUSNTAG 0x4
#define INSTR_RET_ESCR_MASK_BOGUSTAG 0x8
#define INSTR_RET_CCCR 0x4
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

#define UOPS_RET_ESCR 0x1
#define UOPS_RET_ESCR_MASK_NBOGUS 0x1
#define UOPS_RET_ESCR_MASK_BOGUS 0x2
#define UOPS_RET_CCCR 0x4
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

#define UOP_TYPE_ESCR 0x2
#define UOP_TYPE_ESCR_MASK_TAGLOADS 0x2
#define UOP_TYPE_ESCR_MASK_TAGSTORES 0x4
#define UOP_TYPE_CCCR 0x2
/* ESCR2: 12, 13, 16 */
/* ESCR3: 14, 15, 17 */

/* ESCR bit fields */

#define ESCR_EVENT_SEL(a) (a << 25)
#define EVENT_OF(a) ((a >> 25) & 0x3f)

#define ESCR_EVENT_MASK(a) (a << 9)
#define ESCR_TAG_VAL(a) (a << 5)
#define EVENTMASKTAG_OF(a) ((a >> 9) & 0xffff)

#define ESCR_TAG_ENABLE (1 << 4)
#define ESCR_T0_OS (1 << 3)
#define ESCR_T0_USR (1 << 2)
#define ESCR_T1_OS (1 << 1)
#define ESCR_T1_USR (1 << 0)

/* CCCR bit fields */

#define CCCR_ENABLE (1 << 12)
#define CCCR_ESCR_SEL(a) (a << 13)
#define ESCR_OF(a) ((a >> 13) & 0x7)

#define CCCR_THR_ANY 0x3
#define CCCR_THR_MODE(a) (a << 16)
#define CCCR_COMPARE (1 << 18)
#define CCCR_COMPLEMENT (1 << 19)
#define CCCR_THRESHOLD(a) (a << 20)
#define CCCR_EDGE (1 << 24)
#define CCCR_FORCE_OVF (1 << 25)
#define CCCR_OVF_PMI_T0 (1 << 26)
#define CCCR_OVF_PMI_T1 (1 << 27)
#define CCCR_CASCADE (1 << 30)
#define CCCR_OVF (1 << 31)

/* Old defs */

#define EVENT(a) ESCR_EVENT_SEL(a)
#define EVENTMASK(a) ESCR_EVENT_MASK(a)
#define ENABLE CCCR_ENABLE
#define ESCR(a) CCCR_ESCR_SEL(a)
#define HYPERTHREAD_ANY CCCR_THR_MODE(CCCR_THR_ANY)
#define COMPARE CCCR_COMPARE
#define COMPLEMENT CCCR_COMPLEMENT
#define THRESHOLD(a) CCCR_THRESHOLD(a)

#define COUNTER(a) (1 << a)
#define NBOGUSNTAG (1 << 9)
#define CPL(a) (a << 2)
#define PEBS_TAG (1 << 24)
#define PEBS_L1_MISS (1)
#define PEBS_L2_MISS (1 << 1)
#define PEBS_MV_LOAD (1)
#define PEBS_MV_STORE (1 << 1)

