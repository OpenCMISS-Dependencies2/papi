# $Id$

DESCR   = "Linux with PFM $(VERSION) kernel support and library"
LIBRARY = libpapi.a
SHLIB   = libpapi.so
TARGETS = ear serial forkexec_tests overflow_tests profile_tests multiplex_and_pthreads shared
SUBSTR	= perfmon
MEMSUBSTR = perfmon
MEMSUBSTRC = $(MEMSUBSTR)-memory.c
MEMSUBSTRO = $(MEMSUBSTR)-memory.o

#
# GNU G77/GCC section
#

ifneq (,$(shell $(CC) -v 2>&1 | grep version | cut -f3 -d" " | grep "^4.2"))
TARGETS += omp
OMPCFLGS = -fopenmp
endif

CC_R    	:= $(CC) -pthread
CC_SHR		:= $(CC) -fPIC -DPIC -shared -Wl,-soname -Wl,libpapi.so -Xlinker "-rpath" -Xlinker "$(LIBDIR)"
FFLAGS		+= -ffixed-line-length-132
CFLAGS		+= -D_GNU_SOURCE -Wall $(NOTLS) $(ALTIX) $(DEBUGFLAGS) -D_REENTRANT
TOPTFLAGS	:= -g -O
FTOPTFLAGS	:= $(FTOPTFLAGS)

ifeq (static,$(PFM_EVENTS))
	CFLAGS		 += -DSTATIC_PERFMON_EVENTS_TABLE
	PFM_EVENTS_TABLE := perfmon_events_table.h
endif

ifeq (y,$(PFM_OLD_PFMV2))
	CFLAGS		 += -DPFMLIB_OLD_PFMV2
endif

#
# DO NOT TOUCH BELOW HERE UNLESS YOU KNOW WHAT YOU ARE DOING
#

# The next section avoids setting BAD things like -I/usr/include -L/usr/lib. 

ifneq (/usr,$(PFM_PREFIX))
PWD = $(shell pwd)
ifeq (,$(PFM_LIB_PATH))
ifeq (,$(PFM_ROOT))
        PFM_ROOT := $(PWD)/libpfm-3.y
endif
        PFM_LIB_PATH := $(PFM_ROOT)/lib
	CC_SHR += -Wl,-rpath-link -Wl,$(PFM_LIB_PATH)
endif
ifeq (,$(PFM_INC_PATH))
ifeq (,$(PFM_ROOT))
        PFM_ROOT := $(PWD)/libpfm-3.y
endif
        PFM_INC_PATH := $(PFM_ROOT)/include
endif
ifneq (/usr/include,$(PFM_INC_PATH))
CFLAGS	+= -I$(PFM_INC_PATH) 
endif
endif

# I hate these platform dependencies, but this id's the existence of 
# _ntv_name_to_code in perfmon for extras optimization.
CFLAGS	+= -DPFM2

MISCHDRS = perfmon.h papi_pfm_events.h $(PFM_EVENTS_TABLE)
MISCSRCS = papi_pfm_events.c

ifneq (CRAYX2, $(COMPILER))
  ifneq (ia64, $(ARCH))
    ifneq (ppc64, $(ARCH))
      MISCSRCS +=  x86_cache_info.c
    endif
  endif
endif

# This is necessary to avoid text relocations. You cannot do -Lxx -lx because
# it will attempt to use the static library if a shared library ending in
# .so does not exist
SHLIBDEPS = -Bdynamic -L$(PFM_LIB_PATH) -lpfm

PFM_OBJS=$(shell $(AR) t $(PFM_LIB_PATH)/libpfm.a 2>/dev/null)
ifeq (,$(PFM_OBJS))
$(PFM_LIB_PATH)/libpfm.a:
ifneq (,${PFM_ROOT})
	$(MAKE) -C $(PFM_ROOT) ARCH="$(ARCH)" CC="$(CC)" CONFIG_PFMLIB_OLD_PFMV2="$(PFM_OLD_PFMV2)"
else
	@echo '$@ not installed!'; exit 1
endif
	$(MAKE)
endif
MISCOBJS = $(PFM_OBJS) $(MISCSRCS:.c=.o)

include Makefile.inc

config.h:
	@echo 'Please clobber your build and run ./configure."

$(PFM_OBJS): $(PFM_LIB_PATH)/libpfm.a
	$(AR) xv $<

x86_cache_info.o: x86_cache_info.c $(HEADERS)
	$(CC) $(LIBCFLAGS) $(OPTFLAGS) -c x86_cache_info.c -o $@

papi_pfm_events.o: papi_pfm_events.c $(HEADERS) $(PFM_EVENTS_TABLE)
	$(CC) $(LIBCFLAGS) $(OPTFLAGS) -c papi_pfm_events.c -o $@

$(PFM_EVENTS_TABLE):	perfmon_events.csv perfmon_events_table.sh
	sh perfmon_events_table.sh > $@

native_clean:
	-rm -f $(MISCOBJS) 
ifneq (,${PFM_ROOT})
	$(MAKE) -C $(PFM_ROOT) ARCH="$(ARCH)" clean
endif
ifeq (static,$(PFM_EVENTS))
	-rm -f $(PFM_EVENTS_TABLE)
endif

native_install:
ifneq (,${PFM_ROOT})
	-$(MAKE) -C $(PFM_ROOT) ARCH="$(ARCH)" DESTDIR=$(DESTDIR) PREFIX=$(PREFIX) install_prefix=$(PREFIX) LIBDIR=$(LIBDIR) INCDIR=$(INCDIR) MANDIR=$(MANDIR) install
endif
	-install -d $(DESTDIR)$(LIBDIR)
ifneq (,$(findstring shared,$(LIBS)))
	cp -p $(SHLIB) $(DESTDIR)$(LIBDIR)/libpapi.so.$(PAPIVER).$(PAPIREV).$(PAPIAGE)
	cd $(DESTDIR)$(LIBDIR); ln -sf libpapi.so.$(PAPIVER).$(PAPIREV).$(PAPIAGE) libpapi.so.$(PAPIVER)
	cd $(DESTDIR)$(LIBDIR); ln -sf libpapi.so.$(PAPIVER).$(PAPIREV).$(PAPIAGE) libpapi.so
endif
	-install -d $(DESTDIR)$(DATADIR)
	cp -f ./perfmon_events.csv $(DESTDIR)$(DATADIR)

native_clobber:
ifneq (,${PFM_ROOT})
	 $(MAKE) -C $(PFM_ROOT) ARCH="$(ARCH)" distclean
endif
