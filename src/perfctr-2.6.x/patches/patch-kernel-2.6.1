--- linux-2.6.1-perfctr/CREDITS.~1~	2004-01-09 13:19:09.000000000 +0100
+++ linux-2.6.1-perfctr/CREDITS	2004-01-12 01:20:50.113509000 +0100
@@ -2510,6 +2510,7 @@
 E: mikpe@csd.uu.se
 W: http://www.csd.uu.se/~mikpe/
 D: Miscellaneous fixes
+D: Performance-monitoring counters driver
 
 N: Reed H. Petty
 E: rhp@draper.net
--- linux-2.6.1-perfctr/Documentation/ioctl-number.txt.~1~	2003-10-09 00:24:52.000000000 +0200
+++ linux-2.6.1-perfctr/Documentation/ioctl-number.txt	2004-01-12 01:20:50.113509000 +0100
@@ -187,3 +187,5 @@
 0xB1	00-1F	PPPoX			<mailto:mostrows@styx.uwaterloo.ca>
 0xCB	00-1F	CBM serial IEC bus	in development:
 					<mailto:michael.klein@puffin.lb.shuttle.de>
+0xD0	all	performance counters	in development:
+					<mailto:mikpe@csd.uu.se>
--- linux-2.6.1-perfctr/MAINTAINERS.~1~	2004-01-09 13:19:09.000000000 +0100
+++ linux-2.6.1-perfctr/MAINTAINERS	2004-01-12 01:20:50.113509000 +0100
@@ -1575,6 +1575,12 @@
 L:	linux-net@vger.kernel.org
 S:	Supported
 
+PERFORMANCE-MONITORING COUNTERS DRIVER
+P:	Mikael Pettersson
+M:	mikpe@csd.uu.se
+W:	http://www.csd.uu.se/~mikpe/linux/perfctr/
+S:	Maintained
+
 PNP SUPPORT
 P:	Adam Belay
 M:	ambx1@neo.rr.com
--- linux-2.6.1-perfctr/arch/i386/Kconfig.~1~	2004-01-09 13:19:09.000000000 +0100
+++ linux-2.6.1-perfctr/arch/i386/Kconfig	2004-01-12 01:20:50.113509000 +0100
@@ -820,6 +820,8 @@
 	depends on (((X86_SUMMIT || X86_GENERICARCH) && NUMA) || (X86 && EFI))
 	default y
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 
--- linux-2.6.1-perfctr/arch/i386/kernel/entry.S.~1~	2003-11-24 12:00:31.000000000 +0100
+++ linux-2.6.1-perfctr/arch/i386/kernel/entry.S	2004-01-12 01:20:50.123509000 +0100
@@ -412,6 +412,16 @@
 /* The include is where all of the SMP etc. interrupts come from */
 #include "entry_arch.h"
 
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	pushl $LOCAL_PERFCTR_VECTOR-256
+	SAVE_ALL
+	pushl %esp
+	call smp_perfctr_interrupt
+	addl $4, %esp
+	jmp ret_from_intr
+#endif
+
 ENTRY(divide_error)
 	pushl $0			# no error code
 	pushl $do_divide_error
--- linux-2.6.1-perfctr/arch/i386/kernel/i8259.c.~1~	2004-01-09 13:19:10.000000000 +0100
+++ linux-2.6.1-perfctr/arch/i386/kernel/i8259.c	2004-01-12 01:20:50.133509000 +0100
@@ -23,6 +23,7 @@
 #include <asm/apic.h>
 #include <asm/arch_hooks.h>
 #include <asm/i8259.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -432,6 +433,8 @@
 	 */
 	intr_init_hook();
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.6.1-perfctr/arch/i386/kernel/process.c.~1~	2004-01-09 13:19:10.000000000 +0100
+++ linux-2.6.1-perfctr/arch/i386/kernel/process.c	2004-01-12 01:20:50.133509000 +0100
@@ -33,6 +33,7 @@
 #include <linux/delay.h>
 #include <linux/reboot.h>
 #include <linux/init.h>
+#include <linux/perfctr.h>
 #include <linux/mc146818rtc.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
@@ -295,6 +296,7 @@
 		kfree(tsk->thread.io_bitmap_ptr);
 		tsk->thread.io_bitmap_ptr = NULL;
 	}
+	perfctr_exit_thread(&tsk->thread);
 }
 
 void flush_thread(void)
@@ -357,6 +359,8 @@
 	savesegment(fs,p->thread.fs);
 	savesegment(gs,p->thread.gs);
 
+	perfctr_copy_thread(&p->thread);
+
 	tsk = current;
 	if (unlikely(NULL != tsk->thread.io_bitmap_ptr)) {
 		p->thread.io_bitmap_ptr = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
@@ -502,6 +506,8 @@
 
 	/* never put a printk in __switch_to... printk() calls wake_up*() indirectly */
 
+	perfctr_suspend_thread(prev);
+
 	__unlazy_fpu(prev_p);
 
 	/*
@@ -564,6 +570,9 @@
 			 */
 			tss->io_bitmap_base = INVALID_IO_BITMAP_OFFSET;
 	}
+
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.1-perfctr/arch/ppc/Kconfig.~1~	2003-10-09 00:24:52.000000000 +0200
+++ linux-2.6.1-perfctr/arch/ppc/Kconfig	2004-01-12 01:20:55.353509000 +0100
@@ -210,6 +210,8 @@
 	depends on 4xx || 8xx
 	default y
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 menu "Platform options"
--- linux-2.6.1-perfctr/arch/ppc/kernel/process.c.~1~	2003-10-18 11:59:45.000000000 +0200
+++ linux-2.6.1-perfctr/arch/ppc/kernel/process.c	2004-01-12 01:20:55.373509000 +0100
@@ -35,6 +35,7 @@
 #include <linux/init_task.h>
 #include <linux/module.h>
 #include <linux/kallsyms.h>
+#include <linux/perfctr.h>
 
 #include <asm/pgtable.h>
 #include <asm/uaccess.h>
@@ -246,7 +247,9 @@
 		new->thread.regs->msr |= MSR_VEC;
 	new_thread = &new->thread;
 	old_thread = &current->thread;
+	perfctr_suspend_thread(&prev->thread);
 	last = _switch(old_thread, new_thread);
+	perfctr_resume_thread(&current->thread);
 	local_irq_restore(s);
 	return last;
 }
@@ -305,6 +308,7 @@
 		last_task_used_math = NULL;
 	if (last_task_used_altivec == current)
 		last_task_used_altivec = NULL;
+	perfctr_exit_thread(&current->thread);
 }
 
 void flush_thread(void)
@@ -389,6 +393,8 @@
 
 	p->thread.last_syscall = -1;
 
+	perfctr_copy_thread(&p->thread);
+
 	return 0;
 }
 
--- linux-2.6.1-perfctr/arch/x86_64/Kconfig.~1~	2004-01-09 13:19:10.000000000 +0100
+++ linux-2.6.1-perfctr/arch/x86_64/Kconfig	2004-01-12 01:20:50.143509000 +0100
@@ -265,6 +265,8 @@
 	bool
 	default y
 
+source "drivers/perfctr/Kconfig"
+
 endmenu
 
 
--- linux-2.6.1-perfctr/arch/x86_64/kernel/entry.S.~1~	2003-11-24 12:00:31.000000000 +0100
+++ linux-2.6.1-perfctr/arch/x86_64/kernel/entry.S	2004-01-12 01:20:50.153509000 +0100
@@ -497,6 +497,11 @@
 	apicinterrupt SPURIOUS_APIC_VECTOR,smp_spurious_interrupt
 #endif
 				
+#if defined(CONFIG_X86_LOCAL_APIC) && defined(CONFIG_KPERFCTR)
+ENTRY(perfctr_interrupt)
+	apicinterrupt LOCAL_PERFCTR_VECTOR,smp_perfctr_interrupt
+#endif
+ 		
 /*
  * Exception entry points.
  */ 		
--- linux-2.6.1-perfctr/arch/x86_64/kernel/i8259.c.~1~	2004-01-09 13:19:10.000000000 +0100
+++ linux-2.6.1-perfctr/arch/x86_64/kernel/i8259.c	2004-01-12 01:20:50.153509000 +0100
@@ -23,6 +23,7 @@
 #include <asm/delay.h>
 #include <asm/desc.h>
 #include <asm/apic.h>
+#include <asm/perfctr.h>
 
 #include <linux/irq.h>
 
@@ -484,6 +485,8 @@
 	set_intr_gate(ERROR_APIC_VECTOR, error_interrupt);
 #endif
 
+	perfctr_vector_init();
+
 	/*
 	 * Set the clock to HZ Hz, we already have a valid
 	 * vector now:
--- linux-2.6.1-perfctr/arch/x86_64/kernel/process.c.~1~	2004-01-09 13:19:10.000000000 +0100
+++ linux-2.6.1-perfctr/arch/x86_64/kernel/process.c	2004-01-12 01:20:50.153509000 +0100
@@ -34,6 +34,7 @@
 #include <linux/delay.h>
 #include <linux/irq.h>
 #include <linux/ptrace.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/pgtable.h>
@@ -229,6 +230,7 @@
 		(init_tss + smp_processor_id())->io_bitmap_base = 
 			INVALID_IO_BITMAP_OFFSET;
 	}
+	perfctr_exit_thread(&me->thread);
 }
 
 void flush_thread(void)
@@ -328,6 +330,8 @@
 	asm("movl %%es,%0" : "=m" (p->thread.es));
 	asm("movl %%ds,%0" : "=m" (p->thread.ds));
 
+	perfctr_copy_thread(&p->thread);
+
 	if (unlikely(me->thread.io_bitmap_ptr != NULL)) { 
 		p->thread.io_bitmap_ptr = kmalloc(IO_BITMAP_BYTES, GFP_KERNEL);
 		if (!p->thread.io_bitmap_ptr) 
@@ -374,6 +378,8 @@
 	int cpu = smp_processor_id();  
 	struct tss_struct *tss = init_tss + cpu;
 
+	perfctr_suspend_thread(prev);
+
 	unlazy_fpu(prev_p);
 
 	/*
@@ -478,6 +484,8 @@
 		}
 	}
 
+	perfctr_resume_thread(next);
+
 	return prev_p;
 }
 
--- linux-2.6.1-perfctr/drivers/Makefile.~1~	2003-09-09 14:22:28.000000000 +0200
+++ linux-2.6.1-perfctr/drivers/Makefile	2004-01-12 01:20:50.153509000 +0100
@@ -49,3 +49,4 @@
 obj-$(CONFIG_MCA)		+= mca/
 obj-$(CONFIG_EISA)		+= eisa/
 obj-$(CONFIG_CPU_FREQ)		+= cpufreq/
+obj-$(CONFIG_KPERFCTR)		+= perfctr/
--- linux-2.6.1-perfctr/include/asm-i386/apic.h.~1~	2003-09-09 14:22:30.000000000 +0200
+++ linux-2.6.1-perfctr/include/asm-i386/apic.h	2004-01-12 01:20:50.163509000 +0100
@@ -99,6 +99,8 @@
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 #endif /* __ASM_APIC_H */
--- linux-2.6.1-perfctr/include/asm-i386/mach-default/irq_vectors.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.1-perfctr/include/asm-i386/mach-default/irq_vectors.h	2004-01-12 01:20:50.173509000 +0100
@@ -56,14 +56,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.1-perfctr/include/asm-i386/mach-pc9800/irq_vectors.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.1-perfctr/include/asm-i386/mach-pc9800/irq_vectors.h	2004-01-12 01:20:50.173509000 +0100
@@ -59,14 +59,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.1-perfctr/include/asm-i386/mach-visws/irq_vectors.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.1-perfctr/include/asm-i386/mach-visws/irq_vectors.h	2004-01-12 01:20:50.173509000 +0100
@@ -35,14 +35,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef
+#define FIRST_SYSTEM_VECTOR	0xee
 
 #define TIMER_IRQ 0
 
--- linux-2.6.1-perfctr/include/asm-i386/processor.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.1-perfctr/include/asm-i386/processor.h	2004-01-12 01:20:50.183509000 +0100
@@ -425,6 +425,8 @@
 	unsigned int		saved_fs, saved_gs;
 /* IO permissions */
 	unsigned long	*io_bitmap_ptr;
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {							\
--- linux-2.6.1-perfctr/include/asm-ppc/processor.h.~1~	2003-09-28 12:19:57.000000000 +0200
+++ linux-2.6.1-perfctr/include/asm-ppc/processor.h	2004-01-12 01:20:55.383509000 +0100
@@ -119,6 +119,7 @@
 	unsigned long	vrsave;
 	int		used_vr;	/* set if process has used altivec */
 #endif /* CONFIG_ALTIVEC */
+	struct vperfctr *perfctr;	/* performance counters */
 };
 
 #define INIT_SP		(sizeof(init_stack) + (unsigned long) &init_stack)
--- linux-2.6.1-perfctr/include/asm-x86_64/apic.h.~1~	2003-08-09 11:54:09.000000000 +0200
+++ linux-2.6.1-perfctr/include/asm-x86_64/apic.h	2004-01-12 01:20:50.193509000 +0100
@@ -92,6 +92,8 @@
 #define NMI_LOCAL_APIC	2
 #define NMI_INVALID	3
 
+extern unsigned int nmi_perfctr_msr;
+
 #endif /* CONFIG_X86_LOCAL_APIC */
 
 #define clustered_apic_mode 0
--- linux-2.6.1-perfctr/include/asm-x86_64/hw_irq.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.1-perfctr/include/asm-x86_64/hw_irq.h	2004-01-12 01:20:50.193509000 +0100
@@ -65,14 +65,15 @@
  * sources per level' errata.
  */
 #define LOCAL_TIMER_VECTOR	0xef
+#define LOCAL_PERFCTR_VECTOR	0xee
 
 /*
- * First APIC vector available to drivers: (vectors 0x30-0xee)
+ * First APIC vector available to drivers: (vectors 0x30-0xed)
  * we start at 0x31 to spread out vectors evenly between priority
  * levels. (0x80 is the syscall vector)
  */
 #define FIRST_DEVICE_VECTOR	0x31
-#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in irq.h */
+#define FIRST_SYSTEM_VECTOR	0xee   /* duplicated in irq.h */
 
 
 #ifndef __ASSEMBLY__
--- linux-2.6.1-perfctr/include/asm-x86_64/irq.h.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.1-perfctr/include/asm-x86_64/irq.h	2004-01-12 01:20:50.193509000 +0100
@@ -29,7 +29,7 @@
  */
 #define NR_VECTORS 256
 
-#define FIRST_SYSTEM_VECTOR	0xef   /* duplicated in hw_irq.h */
+#define FIRST_SYSTEM_VECTOR	0xee   /* duplicated in hw_irq.h */
 
 #ifdef CONFIG_PCI_USE_VECTOR
 #define NR_IRQS FIRST_SYSTEM_VECTOR
--- linux-2.6.1-perfctr/include/asm-x86_64/processor.h.~1~	2003-11-24 12:00:32.000000000 +0100
+++ linux-2.6.1-perfctr/include/asm-x86_64/processor.h	2004-01-12 01:20:50.193509000 +0100
@@ -252,6 +252,8 @@
 	unsigned long	*io_bitmap_ptr;
 /* cached TLS descriptors. */
 	u64 tls_array[GDT_ENTRY_TLS_ENTRIES];
+/* performance counters */
+	struct vperfctr *perfctr;
 };
 
 #define INIT_THREAD  {}
--- linux-2.6.1-perfctr/kernel/sched.c.~1~	2004-01-09 13:19:11.000000000 +0100
+++ linux-2.6.1-perfctr/kernel/sched.c	2004-01-12 01:20:50.203509000 +0100
@@ -37,6 +37,7 @@
 #include <linux/rcupdate.h>
 #include <linux/cpu.h>
 #include <linux/percpu.h>
+#include <linux/perfctr.h>
 
 #ifdef CONFIG_NUMA
 #define cpu_to_node_mask(cpu) node_to_cpumask(cpu_to_node(cpu))
@@ -2584,6 +2585,8 @@
 	if (any_online_cpu(new_mask) == NR_CPUS)
 		return -EINVAL;
 
+	perfctr_set_cpus_allowed(p, new_mask);
+
 	rq = task_rq_lock(p, &flags);
 	p->cpus_allowed = new_mask;
 	/*
--- linux-2.6.1-perfctr/kernel/timer.c.~1~	2003-11-24 12:00:32.000000000 +0100
+++ linux-2.6.1-perfctr/kernel/timer.c	2004-01-12 01:20:50.203509000 +0100
@@ -31,6 +31,7 @@
 #include <linux/time.h>
 #include <linux/jiffies.h>
 #include <linux/cpu.h>
+#include <linux/perfctr.h>
 
 #include <asm/uaccess.h>
 #include <asm/div64.h>
@@ -735,6 +736,7 @@
 	do_process_times(p, user, system);
 	do_it_virt(p, user);
 	do_it_prof(p);
+	perfctr_sample_thread(&p->thread);
 }	
 
 /*
