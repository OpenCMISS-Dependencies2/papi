# $Id$

DESCR   = "Linux with PFM $(VERSION) kernel support and library"
LIBRARY = libpapi.a
SHLIB   = libpapi.so
TARGETS = serial forkexec_tests overflow_tests profile_tests multiplex_and_pthreads shared ear range
SUBSTR  = linux-ia64
MEMSUBSTR= linux-ia64

#
# GNU G77/GCC section
#

ifneq (,$(shell $(CC) -v 2>&1 | grep version | cut -f3 -d" " | grep "^4.2"))
TARGETS += omp
OMPCFLGS = -fopenmp
endif

CC_R    	= $(CC) -pthread
CC_SHR		:= $(CC) -fPIC -DPIC -shared -Wl,-soname -Wl,$(SHLIB) -Xlinker "-rpath" -Xlinker "$(LIBDIR)"
FFLAGS		+= -ffixed-line-length-132
CFLAGS		+= -Wall 

KERNMINVER	= $(shell uname -r | cut -f2 -d.)
POST_BUILD	=
SPECIAL_REMOVE =

ifeq (4,$(KERNMINVER)) 
VERSION	?= 2.x
else
ifeq (2,$(KERNMINVER))
VERSION	?= 2.x
else
VERSION ?= 3.y
endif
endif
	
ifneq (,$(findstring -DDEBUG,$(DEBUGFLAGS)))
OPTFLAGS	+= -g $(DEBUGFLAGS)
endif
FFLAGS        	+= -Dlinux -DITANIUM$(CPU)
TOPTFLAGS	+= -O  
FTOPTFLAGS	= $(TOPTFLAGS)

#
# DO NOT TOUCH BELOW HERE UNLESS YOU KNOW WHAT YOU ARE DOING
#

# If Altix, always build with PFM provided by the system
# unless forced to override

ifneq (,$(wildcard /etc/sgi-release))
	PFM_PREFIX ?= /usr
	ALTIX ?= -DALTIX
endif

ifeq (,$(PFM_LIB_PATH))
ifeq (,$(PFM_ROOT))
        PFM_ROOT := ./libpfm-$(VERSION)
endif
ifeq (2.x,$(VERSION))
	PFM_LIB_PATH := $(PFM_ROOT)/libpfm
else
	PFM_LIB_PATH := $(PFM_ROOT)/lib
endif
endif
ifeq (,$(PFM_INC_PATH))
ifeq (,$(PFM_ROOT))
        PFM_ROOT := ./libpfm-$(VERSION)
endif
        PFM_INC_PATH := $(PFM_ROOT)/include
endif

OPTIM := $(CFLAGS)
CFLAGS-2.x := -DPFM20 -D_GNU_SOURCE
CFLAGS-3.y := -DPFM30 -D_GNU_SOURCE  
CFLAGS	+= -I$(PFM_INC_PATH) -DITANIUM$(CPU) $(NOTLS) $(ALTIX) $(CFLAGS-$(VERSION))

MISCHDRS = pfmwrap.h
MISCSRCS = 
# This is necessary to avoid text relocations. You cannot do -Lxx -lx because
# it will attempt to use the static library if a shared library ending in
# .so does not exist
SHLIBDEPS = -Bdynamic -L$(PFM_LIB_PATH) -lpfm

PFM_OBJS = $(shell $(AR) t $(PFM_LIB_PATH)/libpfm.a 2>/dev/null)
ifeq (,$(PFM_OBJS))
$(PFM_LIB_PATH)/libpfm.a:
ifneq (,${PFM_ROOT})
	$(MAKE) -C $(PFM_ROOT) CC="$(CC)" OPTIM="$(OPTIM)" 
else
	@echo '$@ not installed!'; exit 1
endif
	$(MAKE)
endif
MISCOBJS = $(PFM_OBJS) $(MISCSRCS:.c=.o)

include Makefile.inc

config.h:
	@echo 'Please clobber your build and run ./configure."

$(PFM_OBJS): 
	$(AR) xv $(PFM_LIB_PATH)/libpfm.a

native_clean:
	-rm -f $(MISCOBJS) 
ifneq (,${PFM_ROOT})
	$(MAKE) -C $(PFM_ROOT) clean
endif

native_install:
ifneq (,${PFM_ROOT})
ifeq (2.x,$(VERSION))
# This version has a very old makefile	
	$(MAKE) -C $(PFM_ROOT) DESTDIR=$(DESTDIR)$(PREFIX) MANDIR=$(DESTDIR)$(MANDIR)/man3 install
else
	$(MAKE) -C $(PFM_ROOT) DESTDIR=$(DESTDIR) PREFIX=$(PREFIX) install_prefix=$(PREFIX) LIBDIR=$(LIBDIR) INCDIR=$(INCDIR) MANDIR=$(MANDIR) install
endif
endif
	cp -p $(SHLIB) $(DESTDIR)$(LIBDIR)/libpapi.so.$(PAPIVER).$(PAPIREV).$(PAPIAGE)
	cd $(DESTDIR)$(LIBDIR); ln -sf libpapi.so.$(PAPIVER).$(PAPIREV).$(PAPIAGE) libpapi.so.$(PAPIVER)
	cd $(DESTDIR)$(LIBDIR); ln -sf libpapi.so.$(PAPIVER).$(PAPIREV).$(PAPIAGE) libpapi.so

native_clobber:
ifneq (,${PFM_ROOT})
	 $(MAKE) -C $(PFM_ROOT) distclean
endif
