# $Id$

DESCR   = "Linux with PFM $(VERSION) kernel support and library"
LIBRARY   = libpapi.a
SHLIB     = libpapi.so
SUBSTR  = linux-ia64
MEMSUBSTR= linux-ia64
LIBS	= static shared
TARGETS = serial multiplex_and_pthreads shared

#
# GNU G77/GCC section
#

CC_R    	= $(CC) -pthread
CC_SHR		= $(CC) -fPIC -shared -Xlinker "-soname" -Xlinker "libpapi.so" -Xlinker "-rpath" -Xlinker "$(PREFIX)/lib"
FFLAGS		+= -ffixed-line-length-132
CFLAGS		+= -Wall 

#
#  Intel compilers
#

ifeq (INTEL, $(COMPILER))
IFCVER7  = $(shell efc -V 2>&1 | grep "Version 7")
ifneq (,$(IFCVER7))
F77      = efc
CC	 = ecc 
else
F77      = ifort
CC	 = icc
endif
CC_R	 = $(CC) -pthread
CC_SHR	 = $(CC) $(SHRFLAGS) -fPIC -shared -Xlinker "-soname" -Xlinker "libpapi.so" -Xlinker "-rpath" -Xlinker "$(PREFIX)/lib"
OMPCFLGS = -openmp
OPTFLAGS = -ip
FFLAGS   = -132
TARGETS	 += omp
endif

KERNMINVER	= $(shell uname -r | cut -f2 -d.)
POST_BUILD	=
SPECIAL_REMOVE =

ifeq (4,$(KERNMINVER)) 
VERSION	?= 2.x
else
ifeq (2,$(KERNMINVER))
VERSION	?= 2.x
else
VERSION ?= 3.x
endif
endif
	
OPTFLAGS	+= -O3 # -DDEBUG -g
FFLAGS        	+= -Dlinux -DITANIUM$(CPU)
TOPTFLAGS	+= -O  
FTOPTFLAGS	= $(TOPTFLAGS)

#
# DO NOT TOUCH BELOW HERE UNLESS YOU KNOW WHAT YOU ARE DOING
#

# If Altix, always build with PFM provided by the system
# unless forced to override

ifneq (,$(wildcard /etc/sgi-release))
	PFM_PREFIX ?= /usr
	ALTIX ?= -DALTIX
endif

ifeq (,$(PFM_PREFIX))
	PFM_ROOT := ./libpfm-$(VERSION)
ifeq (2.x,$(VERSION))
	PFM_LIB_PATH ?= $(PFM_ROOT)/libpfm
else
	PFM_LIB_PATH ?= $(PFM_ROOT)/lib
endif
	PFM_INC_PATH ?= $(PFM_ROOT)/include
else
	PFM_LIB_PATH ?= $(PFM_PREFIX)/lib
	PFM_INC_PATH ?= $(PFM_PREFIX)/include
endif

CFLAGS-2.x := -DPFM20 -D_GNU_SOURCE
CFLAGS-3.x := -DPFM30 -D_GNU_SOURCE  
CFLAGS	+= -I$(PFM_INC_PATH) -DITANIUM$(CPU) $(NOTLS) $(ALTIX) $(CFLAGS-$(VERSION))

MISCHDRS = pfmwrap.h config.h
MISCSRCS = 
SHLIBDEPS = -L$(PFM_LIB_PATH) -lpfm
PFM_OBJS = $(shell ar t $(PFM_LIB_PATH)/libpfm.a 2> /dev/null)
ifeq (,$(PFM_OBJS))
	PFM_OBJS = dummy
endif
MISCOBJS = $(PFM_OBJS) $(MISCSRCS:.c=.o)

include Makefile.inc

config.h:
	@echo 'Please clobber your build and run ./configure."

$(PFM_LIB_PATH)/libpfm.a:
ifeq (,${PFM_PREFIX})
	$(MAKE) CC='$(CC)' -C $(PFM_ROOT) 
else
	@echo '$@ not installed!'; exit 1
endif

$(PFM_OBJS): $(PFM_LIB_PATH)/libpfm.a
	ar xv $<
	$(MAKE) $(MAKEFLAGS); echo "If you made it here, you may safely ignore this error."; exit 1

native_clean:
ifeq (,${PFM_PREFIX})
	rm -f $(MISCOBJS); $(MAKE) -C $(PFM_ROOT) clean
endif

native_install:
ifeq (,${PFM_PREFIX})
	$(MAKE) -C $(PFM_ROOT) DESTDIR=$(PREFIX) install
endif

native_clobber:
ifeq (,${PFM_PREFIX})
	 $(MAKE) -C $(PFM_ROOT) distclean
endif
