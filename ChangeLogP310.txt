2005-08-29	terpstra
	* ctests/test_utils.c 1.54:
	* ctests/test_utils.c [papi-3-1-0] 1.53.4.1:
		Fix by Maynard to prevent infinite loops.

2005-08-26	terpstra
	* perfctr-2.6.x/CHANGES 1.1.1.11:
	* perfctr-2.6.x/etc/costs/Pentium4-2.0 1.1.1.1:
	* perfctr-2.6.x/etc/costs/PentiumM-2.0 1.1.1.1:
	* perfctr-2.6.x/linux/drivers/perfctr/RELEASE-NOTES 1.1.1.11:
	* perfctr-2.6.x/linux/drivers/perfctr/ppc_compat.h 1.1.1.3:
	* perfctr-2.6.x/linux/drivers/perfctr/version.h 1.1.1.11:
	* perfctr-2.6.x/linux/drivers/perfctr/x86.c 1.1.1.9:
	* perfctr-2.6.x/patches/aliases 1.1.1.7:
	* perfctr-2.6.x/patches/patch-kernel-2.4.21-27.0.4.EL-redhat 1.1.1.1:
	* perfctr-2.6.x/patches/patch-kernel-2.4.30 1.1.1.1:
	* perfctr-2.6.x/patches/patch-kernel-2.4.31-pre1 1.1.1.1:
	* perfctr-2.6.x/patches/patch-kernel-2.6.11 1.1.1.1:
	* perfctr-2.6.x/patches/patch-kernel-2.6.12-rc2 1.1.1.1:
	* perfctr-2.6.x/patches/patch-kernel-2.6.12-rc3 1.1.1.1:
	* perfctr-2.6.x/patches/patch-kernel-2.6.9-5.0.3.EL-redhat 1.1.1.1:
	* perfctr-2.6.x/perfctr.spec 1.1.1.11:
	* perfctr-2.6.x/usr.lib/Makefile 1.1.1.11:
	* perfctr-2.6.x/usr.lib/virtual.c 1.1.1.2:
		Importing perfctr 2.6.15

	* perfctr-2.6.x/patches/patch-kernel-2.4.28-rc3 1.2:
	* perfctr-2.6.x/patches/patch-kernel-2.6.10-rc1 1.2:
	* perfctr-2.6.x/usr.lib/Makefile 1.13:
		Commiting changes in perfctr import

2005-08-25	terpstra
	* Rules.perfctr 1.26:
		Added -Wno-unused-function to CFLAGS;
		Modified syntax on test for misc sources; still doesn't work right.

	* perfctr-p4.c 1.88:
		Comment out debugging printf

	* papi_internal.c 1.104:
		Removed an unused variable

	* papi_data.c 1.25:
		Moved and commented papi_sizeof

	* utils/command_line.c 1.6:
		Commented out an unused variable.
		This utility needs to be rolled back to previous functionality.

	* papi.c 1.293:
		Minor cleanups

	* linux-acpi.c 1.4:
		Removed a couple unused variables

	* p4_events.c 1.51:
	* threads.c 1.27:
		Added papi_protos.h

	* linux.c 1.47:
		Moved some function definitions from here to perfctr-p3.c where 
		they were actually called.

	* papi_protos.h 1.55:
		Prototyped papi_sizeof;
		Converted a bunch of routines to VECTOR_STATIC

	* perfctr-p3.c 1.65:
		Various initialization rearrangements.

2005-08-24	terpstra
	* Makefile.inc 1.110:
		Correct typo on papi_table.o rule.

	* linux-memory.c 1.30:
		Always include libperfctr.h

	* linux.h 1.1:
	* papi_table.c 1.1:
		Add two new files needed for multi-substrate support.

2005-08-22	mucci
	* utils/Makefile [papi-3-0-8-1+] 1.3.2.1:
		Install utils to bin not share/papi

2005-08-19	you
	* Makefile.aix-power4 1.20:
	* Makefile.aix-power4-64bit 1.15:
	* Makefile.in 1.5:
	* aix.c 1.60:
	* aix.h 1.25:
	* configure 1.34:
	* configure.in 1.33:
	* ctests/encode.c 1.4:
	* power4.c 1.37:
	* power4.h 1.12:
	* power4_events.c 1.4:
	* power4_events.h 1.6:
		add check for pm_initialize in configure and Bernd Kallies's 
		modification on power4 for using pm_initialize.

2005-08-19	london
	* Makefile.aix5-power3 1.21:
	* Makefile.any-null 1.17:
	* Makefile.inc 1.109:
	* Rules.perfctr 1.25:
	* Rules.pfm 1.17:
	* aix.c 1.61:
	* any-null.c 1.42:
	* any-null.h 1.18:
	* extras.c 1.130:
	* genpapifdef.c 1.33:
	* irix-mips.c 1.104:
	* linux-acpi.c 1.3:
	* linux-acpi.h 1.3:
	* linux-alpha.c 1.20:
	* linux-ia64.c 1.127:
	* linux-ia64.h 1.42:
	* linux-memory.c 1.29:
	* linux.c 1.46:
	* multiplex.c 1.63:
	* p3_events.c 1.49:
	* p4_events.c 1.50:
	* papi.c 1.292:
	* papi.h 1.143:
	* papiStdEventDefs.h 1.34:
	* papi_data.c 1.24:
	* papi_data.h 1.2:
	* papi_fwrappers.c 1.71:
	* papi_hl.c 1.71:
	* papi_internal.c 1.103:
	* papi_internal.h 1.159:
	* papi_memory.c 1.4:
	* papi_memory.h 1.5:
	* papi_preset.c 1.18:
	* papi_preset.h 1.13:
	* papi_protos.h 1.54:
	* papi_vector.c 1.8:
	* papi_vector.h 1.4:
	* papi_vector_redefine.h 1.2:
	* perfctr-p3.c 1.64:
	* perfctr-p3.h 1.38:
	* perfctr-p4.c 1.87:
	* perfctr-p4.h 1.35:
	* pfmwrap.h 1.23:
	* solaris-ultra.c 1.108:
	* threads.c 1.26:
	* threads.h 1.4:
	* tru64-alpha.c 1.63:
	* unicos-ev5.c 1.64:
	* utils/command_line.c 1.5:
		Multiple substrate suppot.  This is pre-alpha release at the moment.  Only p4,
		itanium II, p3, opteron platforms are supported.  Everything else will return
		bogus numbers or segfault.  I will be porting the rest of the substrates over
		the next couple of weeks.  Then we will get rid of the warnings and polish everything
		up.  Till then, I would strongly urge you to use the papi-3-1 branch.
		
		Cheers

2005-08-19	terpstra
	* linux.c 1.45:
		Updated mechanism for getting perftr info in the init_substrate stuff.
		Allows compatibility with perfctr 2.6.15 without breaking backward compatibility.
		Tested against opteron, PIII, P4.

	* papi.h 1.142:
		Bumped version number to PAPI 3.1.0.0.
		This will trigger a recompile, because the first 2 digits are checked in PAPI_library_init
		It reflects the addition of PPC/Linux support as well as a number of bug fixes.

2005-08-17	you
	* jni/Makefile 1.6:
	* jni/examples/README 1.2:
		minor changes. now it works on power4.

	* Makefile.linux-acpi 1.2:
	* ctests/acpi.c 1.2:
		skip acpi test when it is not supported.

2005-08-16	terpstra
	* config.h.in 1.3:
	* linux-ppc64-memory.c 1.2:
		Modified source files to support
		POWER4, POWER5, and PowerPC970 on linux with perfctr.

	* ctests/test_utils.c 1.53:
		Modified add_two_events() to do_the_right_thing (TM).
		Submitted by Maynard Johnson.
		Thank you Maynard.

	* ctests/multiplex3_pthreads.c 1.30:
		signal handling fixes submitted by Maynard Johnson

	* ctests/multiplex3_pthreads.c 1.31:
		Bracketted sig handler changes with #ifdef PPC64 to isolate them from other platforms.
		Per Phil's suggestion.

	* event_data/power4/events 1.3:
	* event_data/power4/groups 1.3:
	* event_data/power5/events 1.3:
	* event_data/power5/groups 1.3:
	* event_data/ppc970/events 1.3:
	* event_data/ppc970/groups 1.3:
		New event mappings to support
		POWER4, POWER5, and PowerPC970 on linux with perfctr.
		These were added and then removed due to copyright issues.
		Now they're here to stay (we hope!)

	* perfctr-2.7.x/CHANGES 1.1.1.1:
	* perfctr-2.7.x/COPYING 1.1.1.1:
	* perfctr-2.7.x/INSTALL 1.1.1.1:
	* perfctr-2.7.x/Makefile 1.1.1.1:
	* perfctr-2.7.x/OTHER 1.1.1.1:
	* perfctr-2.7.x/README 1.1.1.1:
	* perfctr-2.7.x/TODO 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.1 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.133 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.2 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.3 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.33 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.46 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.53 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.64 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.66 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.75 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1.8 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-1000 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-2.0 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-500 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-700 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-800 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon-850 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon64-2.0 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon64-2.2 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Athlon64FX-2.2 1.1.1.1:
	* perfctr-2.7.x/etc/costs/AthlonXP-1800 1.1.1.1:
	* perfctr-2.7.x/etc/costs/AthlonXPM-2500 1.1.1.1:
	* perfctr-2.7.x/etc/costs/C3-1.2 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Celeron-466 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Celeron-500 1.1.1.1:
	* perfctr-2.7.x/etc/costs/CyrixMII-233 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Duron-1.0 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Duron-600 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Duron-700 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Duron-750 1.1.1.1:
	* perfctr-2.7.x/etc/costs/K6-III-400 1.1.1.1:
	* perfctr-2.7.x/etc/costs/MPC7400-400 1.1.1.1:
	* perfctr-2.7.x/etc/costs/MPC7447A-1.35 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Opteron-1.4 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Opteron-1.6 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Opteron-2.0 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PPC750-300 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium-133 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-1.5 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-1.6 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-1.7 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-1.8 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-2.2 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-2.26 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-2.66 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-2.8 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-3.0 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4-3.4 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4M-1.8 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4Xeon-2.2 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4Xeon-2.4 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4Xeon-2.8 1.1.1.1:
	* perfctr-2.7.x/etc/costs/Pentium4Xeon-3.4 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumII-266a 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumII-266b 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumII-300 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumII-350 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-1.0 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-1.4 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-450 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-500 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-700 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-733 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-800 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-866 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-900 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumIII-933 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumM-1.3 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumM-1.4 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumM-1.5 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumM-1.6 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumM-1.7 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumMMX-150 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumMMX-166 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumMMX-233 1.1.1.1:
	* perfctr-2.7.x/etc/costs/PentiumPro-200 1.1.1.1:
	* perfctr-2.7.x/etc/install.sh 1.1.1.1:
	* perfctr-2.7.x/etc/p4.c 1.1.1.1:
	* perfctr-2.7.x/examples/Makefile 1.1.1.1:
	* perfctr-2.7.x/examples/README 1.1.1.1:
	* perfctr-2.7.x/examples/global/Makefile 1.1.1.1:
	* perfctr-2.7.x/examples/global/arch.h 1.1.1.1:
	* perfctr-2.7.x/examples/global/global.c 1.1.1.1:
	* perfctr-2.7.x/examples/global/ppc.c 1.1.1.1:
	* perfctr-2.7.x/examples/global/x86.c 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/Makefile 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/arch.h 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/perfex.c 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/ppc.c 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/ppc.h 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/ppc64.c 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/ppc64.h 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/x86.c 1.1.1.1:
	* perfctr-2.7.x/examples/perfex/x86.h 1.1.1.1:
	* perfctr-2.7.x/examples/self/Makefile 1.1.1.1:
	* perfctr-2.7.x/examples/self/arch.h 1.1.1.1:
	* perfctr-2.7.x/examples/self/ppc.c 1.1.1.1:
	* perfctr-2.7.x/examples/self/ppc64.c 1.1.1.1:
	* perfctr-2.7.x/examples/self/self.c 1.1.1.1:
	* perfctr-2.7.x/examples/self/x86.c 1.1.1.1:
	* perfctr-2.7.x/examples/signal/Makefile 1.1.1.1:
	* perfctr-2.7.x/examples/signal/arch.h 1.1.1.1:
	* perfctr-2.7.x/examples/signal/ppc.c 1.1.1.1:
	* perfctr-2.7.x/examples/signal/ppc64.c 1.1.1.1:
	* perfctr-2.7.x/examples/signal/signal.c 1.1.1.1:
	* perfctr-2.7.x/examples/signal/x86.c 1.1.1.1:
	* perfctr-2.7.x/linux/Documentation/perfctr/low-level-api.txt 1.1.1.1:
	* perfctr-2.7.x/linux/Documentation/perfctr/low-level-ppc32.txt 1.1.1.1:
	* perfctr-2.7.x/linux/Documentation/perfctr/low-level-x86.txt 1.1.1.1:
	* perfctr-2.7.x/linux/Documentation/perfctr/overview.txt 1.1.1.1:
	* perfctr-2.7.x/linux/Documentation/perfctr/virtual.txt 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/Kconfig 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/Makefile 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/RELEASE-NOTES 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/cpumask.h 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/init.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/ppc.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/ppc64.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/ppc64_tests.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/ppc64_tests.h 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/ppc_tests.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/ppc_tests.h 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/version.h 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/virtual.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/virtual.h 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/x86.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/x86_tests.c 1.1.1.1:
	* perfctr-2.7.x/linux/drivers/perfctr/x86_tests.h 1.1.1.1:
	* perfctr-2.7.x/linux/include/asm-i386/perfctr.h 1.1.1.1:
	* perfctr-2.7.x/linux/include/asm-ppc/perfctr.h 1.1.1.1:
	* perfctr-2.7.x/linux/include/asm-ppc64/perfctr.h 1.1.1.1:
	* perfctr-2.7.x/linux/include/asm-x86_64/perfctr.h 1.1.1.1:
	* perfctr-2.7.x/linux/include/linux/perfctr.h 1.1.1.1:
	* perfctr-2.7.x/patches/patch-kernel-2.6.11 1.1.1.1:
	* perfctr-2.7.x/patches/patch-kernel-2.6.12-rc1 1.1.1.1:
	* perfctr-2.7.x/patches/patch-kernel-2.6.12-rc1-mm1 1.1.1.1:
	* perfctr-2.7.x/patches/patch-kernel-2.6.12-rc1-mm3 1.1.1.1:
	* perfctr-2.7.x/patches/patch-kernel-2.6.12-rc1-mm4 1.1.1.1:
	* perfctr-2.7.x/patches/patch-kernel-2.6.12-rc2 1.1.1.1:
	* perfctr-2.7.x/patches/patch-kernel-2.6.12-rc5 1.1.1.1:
	* perfctr-2.7.x/perfctr.spec 1.1.1.1:
	* perfctr-2.7.x/update-kernel 1.1.1.1:
	* perfctr-2.7.x/usr.lib/Makefile 1.1.1.1:
	* perfctr-2.7.x/usr.lib/arch.h 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set.h 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_amd.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_centaur.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_p4.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_p5.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_p6.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_ppc.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_ppc64.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/event_set_x86.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/gen-event-codes.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/global.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/libperfctr.h 1.1.1.1:
	* perfctr-2.7.x/usr.lib/misc.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/ppc.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/ppc.h 1.1.1.1:
	* perfctr-2.7.x/usr.lib/ppc64.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/ppc64.h 1.1.1.1:
	* perfctr-2.7.x/usr.lib/virtual.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/x86.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/x86.h 1.1.1.1:
	* perfctr-2.7.x/usr.lib/x86_cpuid.S 1.1.1.1:
	* perfctr-2.7.x/usr.lib/x86_cpuinfo.c 1.1.1.1:
	* perfctr-2.7.x/usr.lib/x86_cpuinfo.h 1.1.1.1:
		Importing perfctr 2.7.18 for use by the Linux/PPC substrates

2005-08-13	jthomas
	* papi_sys_headers.h 1.1:
		A first crack at the central header file.

2005-08-10	you
	* jni/Makefile 1.5:
	* jni/PAPI_hw_info.java 1.3:
	* jni/PAPI_mh_cache_info.java 1.2:
	* jni/PAPI_mh_dcache_info.java 1.3:
	* jni/PAPI_mh_dtlb_info.java 1.3:
	* jni/PAPI_mh_icache_info.java 1.3:
	* jni/PAPI_mh_info.java 1.2:
	* jni/PAPI_mh_itlb_info.java 1.3:
	* jni/PAPI_mh_level_info.java 1.2:
	* jni/PAPI_mh_tlb_info.java 1.2:
	* jni/PAPI_mh_ucache_info.java 1.1:
	* jni/PAPI_mh_utlb_info.java 1.1:
	* jni/Papi.c 1.7:
	* jni/PapiJ.java 1.6:
	* jni/examples/papilibtest.java 1.3:
		add support of mem_info

2005-08-10	terpstra
	* Matlab/PAPI_Matlab.c 1.5:
	* Matlab/PAPI_Matlab.vcproj 1.2:
	* Matlab/PAPI_flops.c 1.5:
	* Matlab/PAPI_flops.vcproj 1.2:
		Changes to eliminate the correction of accumulated flops on data conversion.
		This was always squirrelly to begin with, and is apparently version dependent.
		Code for Matlab 7.0.4 running on Pentium M is cleaner without it.

2005-08-09	jthomas
	* config.h.in 1.2:
	* configure 1.33:
	* configure.in 1.32:
		Updates of the configure script, and the *.in files.  I want to make
		sure nothing breaks before I start editing #include lines.

2005-08-03	you
	* jni/PAPI_mh_dcache_info.java 1.2:
	* jni/PAPI_mh_dtlb_info.java 1.2:
	* jni/PAPI_mh_icache_info.java 1.2:
	* jni/PAPI_mh_itlb_info.java 1.2:
	* jni/PapiJ.java 1.5:
		minor fixes. use correct PAPI_VER_CURRENT.

2005-08-03	terpstra
	* Matlab/PAPI_Matlab.vcproj 1.1:
	* Matlab/PAPI_flops.vcproj 1.1:
		These Visual C project files were never stored commited to cvs.

	* Matlab/PAPI_Matlab.c 1.4:
	* Matlab/PAPI_flops.c 1.4:
		Updated to support Pentium M SSE instructions.

2005-07-06	terpstra
	* any-proc-null.c 1.8:
		Another test of email notification.

2005-07-01	london
	* papi.h 1.141:
		Testing pserver mail bounce

2005-07-01	terpstra
	* any-null.h 1.17:
		Another test of email notification.

2005-06-30	you
	* Makefile.linux-mx 1.1:
	* linux-acpi.c 1.2:
	* linux-acpi.h 1.2:
	* linux-mx-memory.c 1.1:
	* linux-mx.c 1.1:
	* linux-mx.h 1.1:
		myrinet mx support and acpi modification

2005-06-30	terpstra
	* any-null.h 1.16:
		Test checkin using earth instead of icl.

2005-06-29	mucci
	* extras.c 1.129:
		Test pserver commit

2005-06-29	london
	* threads.c 1.25:
		Testing mail reflector log messages without pserver

	* threads.c 1.24:
		Testing to see if log information is correctly mailed to lists when
		going through pserver

2005-06-29	terpstra
	* event_data/power4/events 1.2:
	* event_data/power4/groups 1.2:
	* event_data/power5/events 1.2:
	* event_data/power5/groups 1.2:
	* event_data/ppc970/events 1.2:
	* event_data/ppc970/groups 1.2:
		Removed these files.
		We don't yet have permission from IBM legal to distribute them.

2005-06-28	you
	* papi_vector.c 1.7:
		mod to get rid of warnings on AIX

2005-06-28	london
	* windows.c 1.1:
		Oops forgot to check this in.

2005-06-28	terpstra
	* Makefile.linux-perfctr-POWER4 1.1:
	* Makefile.linux-perfctr-POWER4-64bit 1.1:
	* Makefile.linux-perfctr-POWER5 1.1:
	* Makefile.linux-perfctr-POWER5-64bit 1.1:
	* Makefile.linux-perfctr-PPC970 1.1:
	* Makefile.linux-perfctr-PPC970-64bit 1.1:
	* Rules.perfctr 1.24:
	* configure 1.32:
	* configure.in 1.31:
		New MakeFiles and changes in configure and rules to support
		POWER4, POWER5, and PowerPC970 on linux with perfctr.

	* event_data/power4/events 1.1:
	* event_data/power4/groups 1.1:
		Event and group info for POWER4.
		Caution: these versions contain copyright disclaimers by IBM.

	* linux.c 1.44:
		Backed out a change in get_cycles.

	* ctests/byte_profile.c 1.4:
	* ctests/native.c 1.49:
	* ctests/overflow_force_software.c 1.13:
	* ctests/prof_utils.h 1.4:
	* ctests/profile.c 1.51:
	* ctests/sprofile.c 1.25:
	* ctests/tenth.c 1.31:
		Modified c test files to support
		POWER4, POWER5, and PowerPC970 on linux with perfctr.

	* power4_events_map.c 1.1:
	* power5_events.h 1.1:
	* power5_events_map.c 1.1:
	* ppc64_events.c 1.1:
	* ppc970_events.h 1.1:
	* ppc970_events_map.c 1.1:
		New event mappings to support
		POWER4, POWER5, and PowerPC970 on linux with perfctr.

	* event_data/ppc970/events 1.1:
	* event_data/ppc970/groups 1.1:
		Event and group info for PowerPC970
		Caution: these versions contain copyright disclaimers by IBM.

	* event_data/power5/events 1.1:
	* event_data/power5/groups 1.1:
		Event and group info for POWER5.
		Caution: these versions contain copyright disclaimers by IBM.

	* linux-ppc64-memory.c 1.1:
	* linux-ppc64.h 1.1:
	* linux.c 1.43:
	* papi.h 1.140:
	* perfctr-ppc64.c 1.1:
	* perfctr-ppc64.h 1.1:
	* power4_events.h 1.5:
		New and modified source files to support
		POWER4, POWER5, and PowerPC970 on linux with perfctr.

2005-06-24	you
	* Makefile.linux-acpi 1.1:
	* ctests/Makefile 1.126:
	* ctests/acpi.c 1.1:
	* linux-acpi-memory.c 1.1:
	* linux-acpi.c 1.1:
	* linux-acpi.h 1.1:
		acpi substrate checkin

2005-06-22	terpstra
	* ctests/encode.c 1.3:
		Changes that never got committed for the encode stuff.

2005-06-17	london
	* papiStdEventDefs.h 1.33:
		Stop using // as comments in the PAPI Library!  Not all compilers
		support the C++ style comments (Like AIX)

2005-06-13	london
	* papi_memory.h 1.4:
		Remove papi_cleanup_memory whenever PAPI_NO_MEMORY_MANAGEMENT is 
		defined.

	* papi_memory.h 1.3:
		Fixed a typo, realloc should have been calloc

	* x1.c 1.25:
		Typo fix

2005-06-02	terpstra
	* linux.c 1.42:
	* papi_vector.c 1.6:
		Code changes to support Catamount/XT3.

	* Rules.perfctr 1.23:
		Changes to support Catamount/XT3.
		Added Catamount compiler section, suppressed build of libpapi.so,
		forced build of perfctr with $(CC)

	* Makefile.catamount-perfctr-opteron 1.2:
		Makefile for Catamount.

2005-05-26	terpstra
	* papi_data.h 1.1:
		More modifications to make genpapifdef independent of libpapi.
		Moved initialization of some data structures to a new header file.
		This makes it possible to include them in both papi and genpapifdef
		without creating compile conflicts.
		I forgot this one yesterday.

2005-05-25	terpstra
	* genpapifdef.c 1.32:
	* papi.c 1.291:
	* papi.h 1.139:
	* papi_data.c 1.23:
	* papi_internal.c 1.102:
	* papi_preset.h 1.12:
		Modifications to make genpapifdef independent of libpapi.
		This should make it easier to implement on platforms like RedStorm,
		where the compute node is different from the compile node.

	* Makefile.inc 1.107:
		Remove dependence of genpapifdef on libpapi and explicitly specify the headers on which it depends
		Make the 3 fpapi.h files dependent only on papi.h instead of genpapifdef.
		That way if current copies already exist, they don't need to be rebuilt every time the library is.

	* Makefile.inc 1.108:
		Modify such that clobber doesn't remove the fortran header files.
		That way, they only get rebuilt if their dependencies are triggered.
		This means they will be built on a cvs checkout, or on a papi.h change,
		but can be distributed prebuilt with our tarballs.
		This will simplify distributions on platforms such as RedStorm.

2005-05-19	terpstra
	* ctests/Makefile 1.125:
	* ctests/encode.c 1.2:
	* ctests/encode2.c 1.2:
		Modifications to make these files more TESTS_QUIET friendly and provide
		better error handling on argument parsing; incorporate these files into the make.

	* utils/Makefile 1.4:
		Modifications to name all utilities as papi_xxxx. This way they 
		could be moved to a common directory and not risk name 
		collisions with other files.

	* utils/decode.c 1.2:
		Tweaks to get rid of warning messages.

2005-05-18	terpstra
	* papiStdEventDefs.h 1.32:
		Some cleanup odds and ends:
		- fixed definition of PAPI_NATIVE_AND_MASK from 0x3F... to 0xBF...
		- added terminators to the enum list and #define event list
		No change in current functionality.

	* utils/decode.c 1.1:
		Utility that uses PAPI_get_event_info() to create csv formatted output
		suitable for use by PAPI_encode_events().
		Such output can be viewed and edited in a csv-compatible spreadsheet,
		such as Excel, an can be used as input to the encode and encode2 test programs.

	* extras.c 1.128:
		Tiny tweak in a debug printf for better viewing of strings in 
		native name_to_code

	* p3_events.c 1.48:
	* papi_data.c 1.22:
	* papi_events.xml 1.2:
	* papi_preset.c 1.17:
	* papi_preset.h 1.11:
	* perfctr-p3.c 1.63:
		Migrated optional XML code from perfctr-p3 to papi_preset.
		Also restored data structures to pointers-to-strings rather than
		pre-allocated fixed length string space.
		Reworked arrays to use Kevin's new memory management stuff and
		added support routines to properly allocate and clean things up.
		Some of this was done to better support xml, but it was just good
		code cleanup anyway.
		The optional XML stuff still works only on pentium III.
		We may or may not ever go further with it.

	* papi.c 1.290:
	* papi.h 1.138:
	* papi_internal.c 1.101:
	* papi_protos.h 1.53:
		Added two new entry points to the API:
		- PAPI_set_event_info() is symmetric with PAPI_get_event_info().
		  It allows a user to add or modify the definition of a preset event for a given platform.
		  The scope of the modification is only for the duration of that invokation of PAPI.
		- PAPI_encode_events() reads a csv (comma separated values) file containing
		  event definition information and loads it into the preset table.
		  In conjunction with a decode utility, this provides the user (or toolmaker) with
		  the ability to support custom event definitions or overrides on specific platforms.

	* ctests/encode.c 1.1:
	* ctests/encode2.c 1.1:
		Two new tests to exercise the new APIs introduced to PAPI.
		encode.c exercises PAPI_set_event_info
		encode2.c exercises PAPI_encode_events
		Both require properly formatted csv files to function.
		See utils/decode to create such files.

2005-05-10	london
	* solaris-ultra.c 1.107:
		Fixed a typo

	* linux.c 1.41:
		Setup p3&p4 vector tables before the presets

	* papi_memory.c 1.3:
		Remove an inline for solaris until I can figure out why solaris
		thinks it doesn't have the symbol.

2005-05-01	london
	* papi_memory.c 1.2:
	* papi_memory.h 1.2:
	* papi_vector.c 1.5:
	* solaris-ultra.c 1.106:
		New papi_strdup call

2005-04-29	london
	* Makefile.inc 1.106:
	* aix.c 1.59:
	* irix-mips.c 1.103:
	* linux-alpha.c 1.19:
	* linux-ia64.c 1.126:
	* linux.c 1.40:
	* multiplex.c 1.62:
	* papi.c 1.289:
	* papi_hl.c 1.70:
	* papi_internal.c 1.100:
	* papi_internal.h 1.158:
	* papi_memory.c 1.1:
	* papi_memory.h 1.1:
	* papi_protos.h 1.52:
	* solaris-ultra.c 1.105:
	* threads.c 1.23:
		Addition of papi memory calls.  This allows papi to track memory
		and free up all memory in a shutdown call.  All calls should now
		be papi_free, papi_malloc, papi_realloc and papi_calloc
		
		By default papi tracks memory and frees things up.  If:
		PAPI_DEBUG_MEMORY is defined then in addition it tracks where the
		memory was allocated from and if there is a memory leak at shutdown
		prints out the file and line it came from and how many bytes it was.
		In addition it also checks for overwritting bounds, by padded the end of the memory with a pattern.  All memory is checked for overwrites with every call to memory (papi_malloc, papi_free, etc...) If you want to force a check you can call check_memory_for_overflow() and it will print out if the memory has been overwritten and where it was allocated from.
		
		If PAPI_DEBUG_MEMORY_TRACE is defined in addition to the functionality defined in PAPI_DEBUG_MEMORY each time a memory call is executed it is logged to stderr. (Location/Line/Size/Pointer value)
		
		If PAPI_NO_MEMORY_MANAGEMENT is specified then the papi_malloc, papi_free, papi_realloc and papi_calloc calls all get redefined to the normal malloc, etc... calls.
		
		Also, because I use a negative offset to access memory, if you call papi_realloc or papi_free on memory not allocated with a papi_ call then the library will coredump. (This is done for speed purposes)  If you have some memory that you want to free, but are unsure if the library or a user supplied the memory, call papi_valid_free() which will only free the memory if the library allocated the memory.  This turns into a noop if PAPI__NO_MEMORY_MANAGEMENT is defined.
		
		Last, there is a new function called papi_mem_overhead(int type) where type can be PAPI_MEM_LIB_OVERHEAD, PAPI_MEM_OVERHEAD or both | together.  The PAPI_MEM_LIB_OVERHEAD returns the memory allocated by the library, the PAPI_MEM_OVERHEAD returns the memory allocated for tracking the memory allocations, and so both | together returns the total memory allocated by the PAPI library.

2005-04-28	mucci
	* aix.c [papi-3-0-8-1+] 1.54.4.2:
	* ctests/exeinfo.c [papi-3-0-8-1+] 1.2.12.1:
	* dadd-alpha.c [papi-3-0-8-1+] 1.37.8.1:
	* irix-mips.c [papi-3-0-8-1+] 1.100.4.1:
	* papi.c [papi-3-0-8-1+] 1.286.4.1:
	* solaris-ultra.c [papi-3-0-8-1+] 1.101.4.3:
	* tru64-alpha.c [papi-3-0-8-1+] 1.60.8.1:
	* x1.c [papi-3-0-8-1+] 1.22.4.1:
		A review of the code indicated that possible string overwrites were
		occuring when PATH_MAX was greater than either HUGE_STR or MAX_STR. Now
		all strings in PAPI are declared not eith PATH MAX but either HUGE
		or MAX STR.
		
		with exeinfo, a simple change fixing the name of the executable in the
		error output string from lib to exe.

	* linux.c [papi-3-0-8-1+] 1.33.2.1:
		New version of update_SHLIB_info that now does the 'right' thing on
		all systems including IA64, PPC/32/64 and x86, x86_64.

	* linux.c 1.38:
		Propagated new update shlib function from 3.0.8.1 BSS is now 
		deprecated!

	* aix.c 1.58:
	* dadd-alpha.c 1.39:
	* irix-mips.c 1.102:
	* linux-ia64.c 1.125:
	* papi.c 1.288:
	* solaris-ultra.c 1.104:
	* tru64-alpha.c 1.62:
	* x1.c 1.24:
		All strings now use PAPI definitions that match their 
		declarations in papi.h, no more PATH_MAX

2005-04-28	terpstra
	* linux.c 1.39:
	* papi_protos.h 1.51:
	* papi_vector.h 1.3:
	* perfctr-p4.c 1.86:
		Modifications to allow prototype checking as static in the 
		substrates and as extern in the independent layer.

2005-04-26	mucci
	* libpfm-3.x/ChangeLog 1.4:
	* libpfm-3.x/ChangeLog [papi-3-0-8-1+] 1.3.4.1:
	* libpfm-3.x/config.mk 1.3:
	* libpfm-3.x/config.mk [papi-3-0-8-1+] 1.2.4.1:
	* libpfm-3.x/lib/pfmlib_itanium2.c 1.4:
	* libpfm-3.x/lib/pfmlib_itanium2.c [papi-3-0-8-1+] 1.3.4.1:
		More fixes from Stefane Eranian

	* ctests/test_utils.c 1.52:
	* ctests/test_utils.c [papi-3-0-8-1+] 1.51.10.1:
		Prefer PAPI_FP_OPS over PAPI_FP_INS, this helps EM64T platforms 
		and gcc 3.4 pass cleanup

2005-04-25	mucci
	* solaris-ultra.c [papi-3-0-8-1+] 1.101.4.2:
		Missed a PAPIERROR that should be there after fopen failure

	* solaris-ultra.c 1.103:
		Removed not 1, but 2, calls to exit in this code.
		
		Also, fixed fopen calls in update_shlib_info. failure means PAPI
		can succeed with no shared library map.

	* aix.c [papi-3-0-8-1+] 1.54.4.1:
	* solaris-ultra.c [papi-3-0-8-1+] 1.101.4.1:
		Fix for aix.c and solaris-ultra in update_shlib_info.
		
		fopen() was not being checked for errors, causing coredumps when
		fopen was getting EPERM, Permission Denied. Please, please always check
		error codes.
		
		update_shlib_info is a case where this substrate function can fail,
		but PAPI should continue to operate. So the update_shlib_info function
		returns early with PAPI_OK but notes an error with PAPIERROR macro
		which gets dumped if VERBOSE is enabled.
		
		A review of these functions is in order, as there is no consistency checking
		being done. If it reads zero lines from the shlib map, the function will
		also likely dump core as it doesn't check for a number of valid entries.
		
		Argh.

	* aix.c 1.57:
		The fix for fopen which someone hacked in didn't even have the right variable
		name. Fixed. and PAPI_OK is retval even if update_shlib fails.

2005-04-21	mucci
	* libpfm-3.x/examples/multiplex.c [papi-3-0-8-1+] 1.3.4.1:
	* libpfm-3.x/lib/pfmlib_common.c [papi-3-0-8-1+] 1.3.4.1:
		Updated patches from Stefane for libpfm3

2005-04-20	terpstra
	* linux.c 1.37:
	* papi_internal.h 1.157:
	* papi_protos.h 1.50:
	* papi_vector.h 1.2:
	* perfctr-p3.c 1.62:
		Tweaks to get rid of warning messages.
		I don't like warning messages.

2005-04-19	jthomas
	* papi_events.xml 1.1:
		This is the XML file containing preset events and their mappings
		given to us a year or so ago.  The substrate should read this file
		when building preset tables if it supports XML.

	* Makefile.linux-perfctr-p3 1.25:
	* Rules.perfctr 1.22:
	* p3_events.c 1.47:
	* papi_preset.h 1.10:
	* perfctr-p3.c 1.61:
	* perfctr-p3.h 1.37:
		Added support for XML on the penitum III.

	* papi_data.c 1.21:
		Added XML support for the Pentium 3.

2005-04-19	terpstra
	* papi.h 1.137:
		Add 4th digit to the version number stuff; set the current 
		version to 3.0.8.2.

2005-04-18	mucci
	* libpfm-3.x/examples/multiplex.c 1.4:
	* libpfm-3.x/lib/pfmlib_common.c 1.4:
		Two patches from Stefane covering multiplexing and print_info

2005-04-11	terpstra
	* Makefile.catamount.inc 1.1:
		file Makefile.catamount.inc was initially added on branch papi-3-
		0-8-1+.

	* Makefile.catamount-perfctr-opteron 1.1:
		file Makefile.catamount-perfctr-opteron was initially added on 
		branch papi-3-0-8-1+.

	* Rules.catamount.perfctr 1.1:
		file Rules.catamount.perfctr was initially added on branch papi-
		3-0-8-1+.

	* Makefile.catamount-perfctr-opteron [papi-3-0-8-1+] 1.1.2.1:
	* Makefile.catamount.inc [papi-3-0-8-1+] 1.1.2.1:
	* Rules.catamount.perfctr [papi-3-0-8-1+] 1.1.2.1:
		Make files for Catamount.

2005-04-07	you
	* linux.c 1.36:
		Pentium M should not be considered as p4. remove the case from 
		check_p4(int cputype)

2005-04-07	london
	* papi_vector.c 1.4:
		Removed papi_redefine.h which should ONLY be included in the papi.c,
		papi_internal.c and other Non-substrate files (and not papi_vector.c).
		Fixed the problem in papi_vector.c that was causing things not to
		compile as well.

2005-04-07	terpstra
	* ctests/do_loops.c [papi-3-0-8-1+] 1.27.4.1:
	* ctests/zero_fork.c [papi-3-0-8-1+] 1.4.10.1:
		Minor test corrections for Catamount.

2005-04-06	you
	* papi_vector.c 1.3:
		add #include "papi_vector_redefine.h", this will fix the 
		compilation error.

2005-04-05	london
	* linux.c 1.35:
		Fix for P3-M

	* Makefile.any-null 1.16:
	* any-null.c 1.41:
	* any-null.h 1.15:
	* papi_vector.c 1.2:
		Complete rewrite of any-null, now the code is completely seperated
		from perfctr and will work on any platform.  If you link with this
		then your program will compile and run and all PAPI routines will
		return succesfully.  However, results will of course be incorrect.

2005-03-31	london
	* threads.c 1.22:
		Better error reporting for dlopen

	* aix.c 1.56:
		Check for NULL in fopen

2005-03-24	jthomas
	* linux-ia64.c 1.124:
		Checked in Jack Perdue's suggestions.  They work on version
		3.0.8.1.

2005-03-18	london
	* Makefile.inc 1.105:
	* aix.c 1.55:
	* any-null.c 1.40:
	* any-null.h 1.14:
	* any-proc-null.c 1.7:
	* dadd-alpha.c 1.38:
	* extras.c 1.127:
	* irix-mips.c 1.101:
	* linux-alpha.c 1.18:
	* linux-ia64.c 1.123:
	* linux.c 1.34:
	* multiplex.c 1.61:
	* papi.c 1.287:
	* papi_hl.c 1.69:
	* papi_internal.c 1.99:
	* papi_protos.h 1.49:
	* papi_vector.c 1.1:
	* papi_vector.h 1.1:
	* papi_vector_redefine.h 1.1:
	* perfctr-p3.c 1.60:
	* perfctr-p3.h 1.36:
	* perfctr-p4.c 1.85:
	* power3.c 1.38:
	* power3_events.c 1.6:
	* power4.c 1.36:
	* power4_events.c 1.3:
	* solaris-ultra.c 1.102:
	* threads.c 1.21:
	* tru64-alpha.c 1.61:
	* unicos-ev5.c 1.63:
	* x1.c 1.23:
		PAPI vectorized functions, more changes to come and this is just
		a first rough cut and doesn't include version info and other
		functionality that will be added.
		
		A file on how this affects substrate writers and how to use this
		functionality will be checked in later today.
		
		I have tested this on many platforms but not all, so if things
		stop compiling let me know ;)

2005-03-16	terpstra
	* genpapifdef.c 1.31:
	* linux-memory.c 1.28:
	* linux.c 1.33:
	* multiplex.c 1.60:
	* perfctr-p3.c 1.59:
	* perfctr-p3.h 1.35:
		Initial round of changes to support Cray RedStorm/Catamount.
		Folded forward from Sandia's implementation in PAPI 2.3.4.

2005-03-15	london
	* Makefile.inc 1.104:
		PAPI shouldn't fail building just because fortran tests failed.
		This makes PAPI ignore non library failures.

	* utils/Makefile 1.3:
		clobber didn't have clean as a dependency and so *.o were left 
		around

2005-03-08	mucci
	* Makefile.any-null 1.15:
	* Makefile.inc 1.103:
	* Makefile.solaris-ultra 1.60:
	* Makefile.solaris-ultra-64bit 1.14:
		Added native_clobber to all targets. This is now called by make clobber.
		It's a NOOP on platforms with builtin support.
		
		Also, fixed the TARGETS line for install of utils. This should be ls
		slipstreamed into 3.0.8.
		
		
		VS: ------------------------------------------

	* Makefile.aix-power3 1.12:
	* Makefile.dadd-alpha 1.16:
	* Makefile.irix-mips 1.51:
	* Makefile.irix-mips-64bit 1.18:
	* Makefile.linux-alpha 1.7:
	* Makefile.tru64-alpha 1.39:
	* Makefile.unicos-t3e 1.30:
	* Rules.x1 1.5:
		Added native_clobber to all targets. This is now called by make clobber.
		It's a NOOP on platforms with builtin support.
		
		Also, fixed the TARGETS line for install of utils. This should be ls
		slipstreamed into 3.0.8.
		
		
		VS: ----------------------------------------------------------------------


